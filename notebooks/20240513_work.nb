(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    346284,       6167]
NotebookOptionsPosition[    341992,       6089]
NotebookOutlinePosition[    342383,       6105]
CellTagsIndexPosition[    342340,       6102]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SGEMM GPU Kernel Performance", "Section",
 CellChangeTimes->{{3.924638524537837*^9, 
  3.9246385297636013`*^9}},ExpressionUUID->"18251fa1-bed5-4193-8125-\
d4caf7a6e219"],

Cell["\<\
https://archive.ics.uci.edu/dataset/440/sgemm+gpu+kernel+performance\
\>", "Text",
 CellChangeTimes->{
  3.924638537898121*^9},ExpressionUUID->"2b510e88-7139-41a3-93bc-\
84892652cb37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$dataDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<sgemm+gpu+kernel+performance\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.92463712386751*^9, 3.924637139672636*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"91760714-4d5a-49b8-bb3d-ba608330be52"],

Cell[CellGroupData[{

Cell["sgemm_product.csv", "Subsection",
 CellChangeTimes->{{3.924636830590863*^9, 
  3.9246368320032053`*^9}},ExpressionUUID->"0a78cf4a-309f-4d9d-b501-\
2ef77e103252"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"files", "=", 
  RowBox[{"FileNames", "[", 
   RowBox[{"\"\<*\>\"", ",", "$dataDirectory"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.924636545931796*^9, 3.9246365807253923`*^9}, {
  3.924637131448329*^9, 3.924637140860242*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"94eb9230-9d70-4c10-9fba-05b7e64a08e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/daniels/Library/CloudStorage/OneDrive-Personal/estudios/\
2024/INF648/paper/sgemm+gpu+kernel+performance/Readme.txt\"\>", 
   ",", "\<\"/Users/daniels/Library/CloudStorage/OneDrive-Personal/estudios/\
2024/INF648/paper/sgemm+gpu+kernel+performance/sgemm_product.csv\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.924636548818968*^9, 3.924636581192071*^9}, {
  3.9246371316940727`*^9, 3.924637141054174*^9}},
 CellLabel->
  "Out[187]=",ExpressionUUID->"8e56980b-d80c-4e01-b146-057a37b33aa8"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Generalized dense matrix-matrix multiplication",
  FontWeight->"Bold"],
 " (GEMM)"
}], "Text",
 CellChangeTimes->{3.9246389406373873`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"181a0071-d81d-4996-8a5b-c9922c262b97"],

Cell[TextData[{
 "This data set measures the ",
 StyleBox["running time of a matrix-matrix product",
  FontWeight->"Bold"],
 " A*B = C, where all matrices have size ",
 StyleBox["2048 x 2048",
  FontWeight->"Bold"],
 ", using a parameterizable SGEMM GPU kernel with 241600 possible parameter \
combinations. For each tested combination, 4 runs were performed and their \
results are reported as the 4 last columns. All times are measured in \
milliseconds*.\n\nThere are ",
 StyleBox["14 parameter",
  FontWeight->"Bold"],
 ", the first ",
 StyleBox["10 are ordina",
  FontWeight->"Bold"],
 "l and can only take up to 4 different powers of two values, and the ",
 StyleBox["4 last variables are binary",
  FontWeight->"Bold"],
 ". Out of 1327104 total parameter combinations, ",
 StyleBox["only 241600 are feasible",
  FontWeight->"Bold"],
 " (due to various kernel constraints). This data set contains the results \
for all these feasible combinations.\n\nThe experiment was run on a desktop \
workstation running Ubuntu 16.04 Linux with an ",
 StyleBox["Intel Core i5 (3.5GHz), 16GB RAM, and a NVidia Geforce GTX 680 4GB \
GF580 GTX-1.5GB GPU",
  FontWeight->"Bold"],
 ". We use the \[OpenCurlyQuote]gemm_fast\[CloseCurlyQuote] kernel from the \
automatic OpenCL kernel tuning library \[OpenCurlyQuote]CLTune\
\[CloseCurlyQuote] (https://github.com/CNugteren/CLTune \n\n* Note: for this \
kind of data sets it is usually ",
 StyleBox["better to work with the logarithm of the running times",
  FontWeight->"Bold"],
 " (see e.g. Falch and Elster, \[OpenCurlyQuote]Machine learning-based \
auto-tuning for enhanced performance portability of OpenCL applications\
\[CloseCurlyQuote], 2015)."
}], "Text",
 CellChangeTimes->{
  3.9246369444118633`*^9, {3.9246403321091013`*^9, 3.924640333394816*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e77e3a9c-8e36-4458-a776-fb217e2bc590"],

Cell[TextData[{
 "- Independent variables:\n    1-2. MWG, NWG: per-matrix 2D tiling at \
workgroup level: ",
 StyleBox["{16, 32, 64, 128}",
  FontWeight->"Bold"],
 " (integer)\n    3. KWG: inner dimension of 2D tiling at workgroup level: ",
 StyleBox["{16, 32}",
  FontWeight->"Bold"],
 " (integer)\n    4-5. MDIMC, NDIMC: local workgroup size: ",
 StyleBox["{8, 16, 32}",
  FontWeight->"Bold"],
 " (integer)\n    6-7. MDIMA, NDIMB: local memory shape: ",
 StyleBox["{8, 16, 32}",
  FontWeight->"Bold"],
 " (integer)\n    8. KWI: kernel loop unrolling factor: ",
 StyleBox["{2, 8}",
  FontWeight->"Bold"],
 " (integer)\n    9-10. VWM, VWN: per-matrix vector widths for loading and \
storing: {1, 2, 4, 8} (integer)\n    11-12. STRM, STRN: enable stride for \
accessing off-chip memory within a single thread: {0, 1} (categorical)\n    \
13-14. SA, SB: per-matrix manual caching of the 2D workgroup tile: {0, 1} \
(categorical)\n\n- Output:\n    15-18. Run1, Run2, Run3, Run4: performance \
times in milliseconds for 4 independent runs using the same parameters. They \
range between 13.25 and 3397.08."
}], "Text",
 CellChangeTimes->{3.924637396383197*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"fc15a73a-d8f5-455f-91b0-7e846ed0876e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"importSGEMMProductDataset", "[", "fileName_String", "]"}], " ", ":=",
   "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rawData", ",", " ", "keys"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"rawData", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{"fileName", ",", " ", "\"\<CSV\>\""}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"keys", " ", "=", " ", 
      RowBox[{"rawData", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"rawData", " ", "=", " ", 
      RowBox[{"rawData", "[", 
       RowBox[{"[", 
        RowBox[{"2", " ", ";;"}], "]"}], "]"}]}], ";"}]}], "\n", "\t\t", "\n",
    "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.924637250622562*^9, 
  3.924637316241576*^9}},ExpressionUUID->"21b8f939-a039-4b35-b186-\
adf9934d6285"],

Cell[TextData[{
 "   // https://github.com/CNugteren/CLBlast/blob/\
e0c06a9ac1da141c2cb684b4a10ce457b3328360/src/tuning/kernels/xgemm.hpp#L88\n   \
settings.parameters = {\n      {\"GEMMK\", {0}}, // NO\n      ",
 StyleBox["{\"MWG\", {16, 32, 64}},\n      {\"NWG\", {16, 32, 64}},",
  FontWeight->"Bold"],
 "\n      {\"KWG\", {32}},\n      ",
 StyleBox["{\"MDIMC\", {8, 16, 32}},\n      {\"NDIMC\", {8, 16, 32}},",
  FontWeight->"Bold"],
 "\n      ",
 StyleBox["{\"MDIMA\", {8, 16, 32}},\n      {\"NDIMB\", {8, 16, 32}},",
  FontWeight->"Bold"],
 "\n      {\"KWI\", {2}},\n      ",
 StyleBox["{\"VWM\", {1, 2, 4}},\n      {\"VWN\", {1, 2, 4}},",
  FontWeight->"Bold"],
 "\n      {\"STRM\", {0}},\n      {\"STRN\", {0}},\n      ",
 StyleBox["{\"SA\", {0, 1}},\n      {\"SB\", {0, 1}},",
  FontWeight->"Bold"],
 "\n      {\"KREG\", {1}}\n    };"
}], "Program",
 CellChangeTimes->{{3.9246391353295383`*^9, 
  3.924639162428606*^9}},ExpressionUUID->"1566ded4-5782-4cb7-bb03-\
07acd04c8b2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$dataDirectory", ",", "\"\<sgemm_product.csv\>\""}], "}"}], 
      "]"}], ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924637151193874*^9, 3.924637156983693*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"c9c6d13e-b0ac-4b60-9586-7c8ac6ffaee9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "test", "]"}]], "Input",
 CellChangeTimes->{{3.924637278559616*^9, 3.9246372795683823`*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"5a8a78db-da6d-4fe3-bf41-bd2155ba7435"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.9246372797018757`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"27e4793a-a556-43ed-9579-8242830c4c8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"test", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "->", "#"}], "]"}], "&"}], ",", 
   RowBox[{"test", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9246371599178762`*^9, 3.924637165862855*^9}, {
  3.924637320356099*^9, 3.924637337796756*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"c23a93dc-0ae3-4f6e-ba9f-c7d803fafec9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"MWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"NWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"KWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"MDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"MDIMA\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMB\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"KWI\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"VWM\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"VWN\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"STRM\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"STRN\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"SA\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"SB\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"Run1 (ms)\"\>", "\[Rule]", "115.26`"}], ",", 
     RowBox[{"\<\"Run2 (ms)\"\>", "\[Rule]", "115.87`"}], ",", 
     RowBox[{"\<\"Run3 (ms)\"\>", "\[Rule]", "118.55`"}], ",", 
     RowBox[{"\<\"Run4 (ms)\"\>", "\[Rule]", "115.8`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"MWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"NWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"KWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"MDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"MDIMA\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMB\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"KWI\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"VWM\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"VWN\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"STRM\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"STRN\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"SA\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"SB\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Run1 (ms)\"\>", "\[Rule]", "78.13`"}], ",", 
     RowBox[{"\<\"Run2 (ms)\"\>", "\[Rule]", "78.25`"}], ",", 
     RowBox[{"\<\"Run3 (ms)\"\>", "\[Rule]", "79.25`"}], ",", 
     RowBox[{"\<\"Run4 (ms)\"\>", "\[Rule]", "79.19`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"MWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"NWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"KWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"MDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"MDIMA\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMB\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"KWI\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"VWM\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"VWN\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"STRM\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"STRN\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"SA\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"SB\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"Run1 (ms)\"\>", "\[Rule]", "79.84`"}], ",", 
     RowBox[{"\<\"Run2 (ms)\"\>", "\[Rule]", "80.69`"}], ",", 
     RowBox[{"\<\"Run3 (ms)\"\>", "\[Rule]", "80.76`"}], ",", 
     RowBox[{"\<\"Run4 (ms)\"\>", "\[Rule]", "80.97`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"MWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"NWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"KWG\"\>", "\[Rule]", "16"}], ",", 
     RowBox[{"\<\"MDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMC\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"MDIMA\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"NDIMB\"\>", "\[Rule]", "8"}], ",", 
     RowBox[{"\<\"KWI\"\>", "\[Rule]", "2"}], ",", 
     RowBox[{"\<\"VWM\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"VWN\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"STRM\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"STRN\"\>", "\[Rule]", "0"}], ",", 
     RowBox[{"\<\"SA\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"SB\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Run1 (ms)\"\>", "\[Rule]", "84.32`"}], ",", 
     RowBox[{"\<\"Run2 (ms)\"\>", "\[Rule]", "89.9`"}], ",", 
     RowBox[{"\<\"Run3 (ms)\"\>", "\[Rule]", "86.75`"}], ",", 
     RowBox[{"\<\"Run4 (ms)\"\>", "\[Rule]", "85.58`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.924637160978321*^9, 3.924637166077084*^9}, {
  3.924637323466358*^9, 3.92463733821351*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"6f9cda55-dac8-4b70-aaaa-3c7b109c4743"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawData", "=", 
   RowBox[{"SemanticImport", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$dataDirectory", ",", "\"\<sgemm_product.csv\>\""}], "}"}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924636594979045*^9, 3.924636601385057*^9}, {
  3.92463681495963*^9, 3.924636840359425*^9}, {3.92463688448223*^9, 
  3.924636897301268*^9}, {3.924637135812702*^9, 
  3.92463713721073*^9}},ExpressionUUID->"3e610100-bf74-4898-8f49-\
8f9222e10e1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rawData", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9246368986035347`*^9, 3.924636899784461*^9}, {
  3.924636994010029*^9, 3.924636999019314*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"47dd8aec-95e6-42ec-8498-84cf5135d033"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "MWG" -> 16, "NWG" -> 16, "KWG" -> 16, "MDIMC" -> 8, "NDIMC" -> 8, 
        "MDIMA" -> 8, "NDIMB" -> 8, "KWI" -> 2, "VWM" -> 1, "VWN" -> 1, 
        "STRM" -> 0, "STRN" -> 0, "SA" -> 0, "SB" -> 0, "Run1 (ms)" -> 115.26,
         "Run2 (ms)" -> 115.87, "Run3 (ms)" -> 118.55, "Run4 (ms)" -> 
        115.8|>, <|
       "MWG" -> 16, "NWG" -> 16, "KWG" -> 16, "MDIMC" -> 8, "NDIMC" -> 8, 
        "MDIMA" -> 8, "NDIMB" -> 8, "KWI" -> 2, "VWM" -> 1, "VWN" -> 1, 
        "STRM" -> 0, "STRN" -> 0, "SA" -> 0, "SB" -> 1, "Run1 (ms)" -> 78.13, 
        "Run2 (ms)" -> 78.25, "Run3 (ms)" -> 79.25, "Run4 (ms)" -> 79.19|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "MWG"} -> 1, {All, "NWG"} -> 
        1, {All, "KWG"} -> 1, {All, "MDIMC"} -> 1, {All, "NDIMC"} -> 
        1, {All, "MDIMA"} -> 1, {All, "NDIMB"} -> 1, {All, "KWI"} -> 
        1, {All, "VWM"} -> 1, {All, "VWN"} -> 1, {All, "STRM"} -> 
        1, {All, "STRN"} -> 1, {All, "SA"} -> 1, {All, "SB"} -> 
        1, {All, "Run1 (ms)"} -> 1, {All, "Run2 (ms)"} -> 
        1, {All, "Run3 (ms)"} -> 1, {All, "Run4 (ms)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "MWG" -> TypeSystem`PackageScope`AtomShape[34], "NWG" -> 
            TypeSystem`PackageScope`AtomShape[34], "KWG" -> 
            TypeSystem`PackageScope`AtomShape[34], "MDIMC" -> 
            TypeSystem`PackageScope`AtomShape[34], "NDIMC" -> 
            TypeSystem`PackageScope`AtomShape[34], "MDIMA" -> 
            TypeSystem`PackageScope`AtomShape[34], "NDIMB" -> 
            TypeSystem`PackageScope`AtomShape[34], "KWI" -> 
            TypeSystem`PackageScope`AtomShape[34], "VWM" -> 
            TypeSystem`PackageScope`AtomShape[34], "VWN" -> 
            TypeSystem`PackageScope`AtomShape[34], "STRM" -> 
            TypeSystem`PackageScope`AtomShape[34], "STRN" -> 
            TypeSystem`PackageScope`AtomShape[34], "SA" -> 
            TypeSystem`PackageScope`AtomShape[34], "SB" -> 
            TypeSystem`PackageScope`AtomShape[34], "Run1 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Run2 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Run3 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Run4 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "MWG", "NWG", "KWG", "MDIMC", "NDIMC", "MDIMA", "NDIMB", "KWI", "VWM",
          "VWN", "STRM", "STRN", "SA", "SB", "Run1 (ms)", "Run2 (ms)", 
         "Run3 (ms)", "Run4 (ms)"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "MWG"} -> 1, {All, "NWG"} -> 
        1, {All, "KWG"} -> 1, {All, "MDIMC"} -> 1, {All, "NDIMC"} -> 
        1, {All, "MDIMA"} -> 1, {All, "NDIMB"} -> 1, {All, "KWI"} -> 
        1, {All, "VWM"} -> 1, {All, "VWN"} -> 1, {All, "STRM"} -> 
        1, {All, "STRN"} -> 1, {All, "SA"} -> 1, {All, "SB"} -> 
        1, {All, "Run1 (ms)"} -> 1, {All, "Run2 (ms)"} -> 
        1, {All, "Run3 (ms)"} -> 1, {All, "Run4 (ms)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "MWG" -> TypeSystem`PackageScope`AtomShape[34], "NWG" -> 
            TypeSystem`PackageScope`AtomShape[34], "KWG" -> 
            TypeSystem`PackageScope`AtomShape[34], "MDIMC" -> 
            TypeSystem`PackageScope`AtomShape[34], "NDIMC" -> 
            TypeSystem`PackageScope`AtomShape[34], "MDIMA" -> 
            TypeSystem`PackageScope`AtomShape[34], "NDIMB" -> 
            TypeSystem`PackageScope`AtomShape[34], "KWI" -> 
            TypeSystem`PackageScope`AtomShape[34], "VWM" -> 
            TypeSystem`PackageScope`AtomShape[34], "VWN" -> 
            TypeSystem`PackageScope`AtomShape[34], "STRM" -> 
            TypeSystem`PackageScope`AtomShape[34], "STRN" -> 
            TypeSystem`PackageScope`AtomShape[34], "SA" -> 
            TypeSystem`PackageScope`AtomShape[34], "SB" -> 
            TypeSystem`PackageScope`AtomShape[34], "Run1 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Run2 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Run3 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Run4 (ms)" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 10, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "MWG", "NWG", "KWG", "MDIMC", "NDIMC", "MDIMA", "NDIMB", "KWI", "VWM",
          "VWN", "STRM", "STRN", "SA", "SB", "Run1 (ms)", "Run2 (ms)", 
         "Run3 (ms)", "Run4 (ms)"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     18, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MWG", 
                  Style[
                  "MWG", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "MWG"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "MWG"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NWG", 
                  Style[
                  "NWG", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "NWG"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "NWG"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["KWG", 
                  Style[
                  "KWG", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "KWG"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "KWG"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MDIMC", 
                  Style[
                  "MDIMC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "MDIMC"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "MDIMC"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NDIMC", 
                  Style[
                  "NDIMC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "NDIMC"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "NDIMC"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MDIMA", 
                  Style[
                  "MDIMA", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "MDIMA"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "MDIMA"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NDIMB", 
                  Style[
                  "NDIMB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "NDIMB"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "NDIMB"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["KWI", 
                  Style[
                  "KWI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "KWI"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "KWI"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VWM", 
                  Style[
                  "VWM", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "VWM"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "VWM"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["VWN", 
                  Style[
                  "VWN", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][{All, "VWN"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{All, "VWN"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["MWG"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["NWG"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["KWG"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["MDIMC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["NDIMC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["MDIMA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["NDIMB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["KWI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["VWM"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{1, 
                 Key["VWN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["MWG"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["NWG"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["KWG"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["MDIMC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["NDIMC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["MDIMA"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["NDIMB"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["KWI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["VWM"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][{2, 
                 Key["VWN"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"}, "Columns", 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"}, "Columns", 
                    2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"}, "Columns", 
                    5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"}, "Columns", 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"}, "Columns", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "78c2577b-b7ec-4cef-bff9-dd191f4ccf45", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "78c2577b-b7ec-4cef-bff9-dd191f4ccf45"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{447., {67.634033203125, 73.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{447., {67.634033203125, 73.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9246369945382547`*^9, 3.924636999205701*^9}},
 CellLabel->
  "Out[179]=",ExpressionUUID->"f39f7fdf-2c74-4298-962a-1fecc30e33a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "rawData", "]"}]], "Input",
 CellChangeTimes->{{3.924637000277855*^9, 3.924637001905918*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"a1c9c041-9911-4ce4-997c-0d347006b6ce"],

Cell[BoxData["241600"], "Output",
 CellChangeTimes->{3.924637002136326*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"ad6459a9-1a51-45c1-8223-0777a26fc60d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", 
  RowBox[{"rawData", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.924637000277855*^9, 3.924637047585425*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"7e4a60c4-0d2d-4156-9f63-1a978240a502"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "MWG", "NWG", "KWG", "MDIMC", "NDIMC", "MDIMA", "NDIMB", "KWI", "VWM", 
       "VWN", "STRM", "STRN", "SA", "SB", "Run1 (ms)", "Run2 (ms)", 
       "Run3 (ms)", "Run4 (ms)"}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       6, 3, 18, 100.80000000000001`], 18, 3, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 18], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       6, 3, 18, 100.80000000000001`], 18, 3, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 18], "Path" -> {}, "DisplayedRowCount" -> 6, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 6, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["MWG", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["NWG", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["KWG", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["MDIMC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["NDIMC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["MDIMA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["NDIMB", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["KWI", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["VWM", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["VWN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["STRM", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["STRN", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["SA", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["SB", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Run1 (ms)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["Run2 (ms)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Run3 (ms)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["Run4 (ms)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{329., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{329., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9246370174092073`*^9, 3.924637047817494*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"d6ac8895-2040-46dd-a187-4933d336d437"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{
  "\"\<Acronym,Description,Values\nMWG,Per-matrix 2D tiling at workgroup \
level for M,\\\"{16, 32, 64, 128} (integer)\\\"\nNWG,Per-matrix 2D tiling at \
workgroup level for N,\\\"{16, 32, 64, 128} (integer)\\\"\nKWG,Inner \
dimension of 2D tiling at workgroup level,\\\"{16, 32} (integer)\\\"\n\
MDIMC,Local workgroup size for M,\\\"{8, 16, 32} (integer)\\\"\nNDIMC,Local \
workgroup size for N,\\\"{8, 16, 32} (integer)\\\"\nMDIMA,Local memory shape \
for M,\\\"{8, 16, 32} (integer)\\\"\nNDIMB,Local memory shape for N,\\\"{8, \
16, 32} (integer)\\\"\nKWI,Kernel loop unrolling factor,\\\"{2, 8} \
(integer)\\\"\nVWM,Per-matrix vector widths for loading,\\\"{1, 2, 4, 8} \
(integer)\\\"\nVWN,Per-matrix vector widths for storing,\\\"{1, 2, 4, 8} \
(integer)\\\"\nSTRM,Enable stride for accessing off-chip memory (M),\\\"{0, \
1} (categorical)\\\"\nSTRN,Enable stride for accessing off-chip memory (N),\\\
\"{0, 1} (categorical)\\\"\nSA,Per-matrix manual caching of 2D workgroup tile \
(A),\\\"{0, 1} (categorical)\\\"\nSB,Per-matrix manual caching of 2D \
workgroup tile (B),\\\"{0, 1} (categorical)\\\"\n\>\"", ",", "\"\<CSV\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9246397032217903`*^9, 3.9246397094859133`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"d3dbba41-13e1-40c5-b283-6115c16c51e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Acronym\"\>", ",", "\<\"Description\"\>", 
     ",", "\<\"Values\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MWG\"\>", 
     ",", "\<\"Per-matrix 2D tiling at workgroup level for M\"\>", 
     ",", "\<\"{16, 32, 64, 128} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NWG\"\>", 
     ",", "\<\"Per-matrix 2D tiling at workgroup level for N\"\>", 
     ",", "\<\"{16, 32, 64, 128} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KWG\"\>", 
     ",", "\<\"Inner dimension of 2D tiling at workgroup level\"\>", 
     ",", "\<\"{16, 32} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MDIMC\"\>", ",", "\<\"Local workgroup size for M\"\>", 
     ",", "\<\"{8, 16, 32} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDIMC\"\>", ",", "\<\"Local workgroup size for N\"\>", 
     ",", "\<\"{8, 16, 32} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MDIMA\"\>", ",", "\<\"Local memory shape for M\"\>", 
     ",", "\<\"{8, 16, 32} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDIMB\"\>", ",", "\<\"Local memory shape for N\"\>", 
     ",", "\<\"{8, 16, 32} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KWI\"\>", ",", "\<\"Kernel loop unrolling factor\"\>", 
     ",", "\<\"{2, 8} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VWM\"\>", 
     ",", "\<\"Per-matrix vector widths for loading\"\>", 
     ",", "\<\"{1, 2, 4, 8} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VWN\"\>", 
     ",", "\<\"Per-matrix vector widths for storing\"\>", 
     ",", "\<\"{1, 2, 4, 8} (integer)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STRM\"\>", 
     ",", "\<\"Enable stride for accessing off-chip memory (M)\"\>", 
     ",", "\<\"{0, 1} (categorical)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STRN\"\>", 
     ",", "\<\"Enable stride for accessing off-chip memory (N)\"\>", 
     ",", "\<\"{0, 1} (categorical)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SA\"\>", 
     ",", "\<\"Per-matrix manual caching of 2D workgroup tile (A)\"\>", 
     ",", "\<\"{0, 1} (categorical)\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SB\"\>", 
     ",", "\<\"Per-matrix manual caching of 2D workgroup tile (B)\"\>", 
     ",", "\<\"{0, 1} (categorical)\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.924639709748905*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"6a0b4de9-ee18-4f17-97cd-48259b37b82e"]
}, Open  ]],

Cell["\<\
// ===========================================================================\
======================
//
// Matrices are accessed as follows:
// A: [k*M + m], with 'k' ranging from 0:K and 'm' from 0:M (m,k,m)
// B: [k*N + n], with 'k' ranging from 0:K and 'n' from 0:N (n,k,n)
// C: [n*M + m], with 'n' ranging from 0:N and 'm' from 0:M (m,n,m)
//
// Or as an image (assuming column-major)
//       K                      
//    o-------o                 
//    |       |                 
//  N | [B^T] |                 
//    |       |                 
//    o-------o                 
//        K               N     
//    o-------o        o-----o  
//  M |  [A]  |      M | [C] |  
//    |       |        |     |  
//    o-------o        o-----o  
//                              
//
// Parameters determined by the tuner
// MWG       : Tile-size in dimension M (e.g. 64, 128)
// NWG       : Tile-size in dimension N (e.g. 64, 128)
// KWG       : Tile-size in dimension K (e.g. 8, 16)
// MDIMC     : Threads per workgroup in M-dimension (e.g. 8, 16, 32)
// NDIMC     : Threads per workgroup in N-dimension (e.g. 8, 16, 32)
// MDIMA     : Re-shaped tile dimension of matrix A: KDIMA * MDIMA
// NDIMB     : Re-shaped tile dimension of matrix B: KDIMB * NDIMB
// KWI       : Unroll factor of the KWG loop (smaller or equal than KWG)
// VWM       : Vector width of matrices A and C (supported 1, 2, 4, and 8)
// VWN       : Vector width of matrix B (supported 1, 2, 4, and 8)
// STRM      : Use strided access within a thread in the M-dimension (1) or \
not (0)
// STRN      : Use strided access within a thread in the N-dimension (1) or \
not (0)
// SA        : Use local/shared memory to cache matrix A (1) or not (0)
// SB        : Use local/shared memory to cache matrix B (1) or not (0)
// PRECISION : Whether to use single (32) or double (64) precision data-types
//
// ===========================================================================\
======================\
\>", "Program",
 CellChangeTimes->{
  3.924640404738922*^9},ExpressionUUID->"90f1837e-5c31-41c4-82fa-\
913d763c65f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["literature", "Subsection",
 CellChangeTimes->{{3.924637571774341*^9, 
  3.924637573360836*^9}},ExpressionUUID->"b96856b6-47f1-446e-9826-\
ccc754ed9fea"],

Cell[CellGroupData[{

Cell["[2023] Towards a Benchmarking Suite for Kernel Tuners", "Subsubsection",
 CellChangeTimes->{{3.924637574177371*^9, 3.9246375923054543`*^9}, {
  3.9246398992051277`*^9, 
  3.924639899945998*^9}},ExpressionUUID->"e3c1d534-581d-4283-ae4a-\
86c3b0129c22"],

Cell["\<\
https://www.researchgate.net/publication/369300511_Towards_a_Benchmarking_\
Suite_for_Kernel_Tuners\
\>", "Text",
 CellChangeTimes->{
  3.924638395394841*^9},ExpressionUUID->"367affcb-9d91-441d-95e4-\
6d6b542fc157"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QfcE0X+x3GqSAcbiqJiR0U5RbEr2LDreTYsiF3sFRWx93JiL4gNBeyi
IqIIWMAGitgVCxbspyDW09u/3+E/cbLZJLub3U14ns/79do7zNZnM0nmtzPz
m84HHPPPQxo1aNDghAX/+p9/9hvQ8/jj+526a7u//mO3o084/NCjDz5om6NP
PPjQg49f74DGf72481/bnvXXP5r89W8PAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAqONmz57tDRs2zHvggQcqPtZ3331njnXPPfckcGWoLyiDAKyf
fvrJe//9971nn33WGzt2rDd16lTv008/Ldjul19+8R577DFvzpw5VbhKhPHn
n396kyZN8s4++2zzfiG8NH7Lpk2b5l1yySXmc4V8L774ovfjjz9W+zJQR91/
//1e9+7dE1s22WSTWNfx3nvveVdddZXXu3dvr1mzZl6DBg28Aw88MPJxfvvt
N++ZZ54x3+0bbbSR17hxY3OsfffdN9Z1JeWyyy4LfQ/HjRuX2nXUyvtdi+p6
GQQQnuq6qpfqO85+hv3LYost5u22227eNddc440fP97ba6+9zOsvvfRS7jgn
n3xyYt+3Dz74YO64xxxzTNHtdtppp9h/t+KjrbfeuuixTzjhhKqeO47PP//c
u+2227w999zTW3jhhXPv33/+85/Y11ofpP1bNmPGDK9hw4a598Mt39V0xRVX
hPo8rrPOOl6vXr28f/3rX94hhxzi3XDDDd67776byDVMmDDB3JNzzz237LbU
6xCHynnQ71rcRd8PUc2aNctr1KhRwbHi1L3POeccr2nTpgXHqnbd+7XXXvOu
v/56b//99/cWWGCBgutbZJFFTD3h1ltvNb9VaamF97sW1YcyCKC8//73v94F
F1zgtWvXLu/zq3rqiiuu6O2xxx4mxlluueXy6q7u8vTTT+eO98QTT5jvhGWW
WSZwW/0etGjRIm8J+i7Sct111+WOq7bIK6+80jyvCtpW7ZBxqA4edLxVV13V
u+iii7znnnuuqueOY4kllgi8p8R/paX9W3b11VfnHXfAgAGJHLdSr7zyinft
tdd6ffr08Zo0aVLw9zdv3txbaKGFin5O11hjDW/06NEVXcOuu+5qjqWy+/vv
v5fclnod4tDvnPsdqzL//PPPe++8846JQx566KG8ctGlSxdTV545c6aJafTM
88gjj/RatWqV26ZcWS1Gz4Jat25dUd3bUru5PqO1WPfWM2X/5819XpymWnq/
a1F9KYMACqnNr2fPnnnfgW3btjVtRz/88EPB9h999JG37bbbFnyfjxkzpmDb
b775xsR27nYDBw40bV5+//vf/0y/L33nnnTSSbk4c/DgwYHXvcsuuxRcg/6O
ODbddNOCY3Xo0KFoX8lqnjsKvbdqqyX+iy6t3zLFWW58pbpIrTn11FPzyoza
/G15VN3nww8/NPWmjTfeuKDsXnjhhbHO+cknn+T1OVCf21Ko1yGOQYMGmfd6
5ZVXNmMc/PS8zS036623XuBxHnnkkdw2GjsVl9rTk6h7S48ePWqy7q3vUvee
Kt7ISq2937WoPpRB1DaNhTnrrLOqfRn1isbsqe7kfv+tv/76JsYr584778yr
r6k/VhB9n7rHV70sDMWA2v7SSy8NXK9+60HP8adMmRLq+Jbq40HHKdWns5rn
jmr48OHEfzGl9VumcnL55Zd7r7/+emLHTJKe5bhlZu211y66rfp/+suv+s9G
ddppp4U+p1CvQxwnnniiea+L9dcIW25km222Mdt8+eWXsa9nww03TKzu7T7H
raW6t/qHu/d06aWXzuzctfZ+16L6UAZRu/S8Vm0e6nuEbKi9beedd8777lPf
RvUFDUttc3ZfxYNB/P0lR40aFerYH3/8sdlez/mDqH0gKHZSX9Uo+vbtG3gc
vV5MNc8dlb8dhPgvvPr6W6Z2tCixmO6Nu73ax6P49ddfvUUXXbTgc6A+18VQ
r0McRxxxhGnz1TjfIFHKjcbAa5swz0uLqQ91b+WRc+9p586dMzt3rb3ftag+
lEHUJvW52WCDDUx5If7LzogRI/K+99TnM8447C222MLsf9NNNwWu9/cVDRv/
yaGHHpo3rtB11113meP589Tov9U/LYwvvvgiNzZ9v/32yzvOAQccUHS/ap47
Kt1v4r946utvmb+/Vrn47+GHH87bfoUVVoh0vttvvz3wOcg///nPovtQr0Mc
Gtdw8cUXF10fpdyoL/Hhhx/uzZ07N/b11Ie6dzXjv1p7v2tRfSiDqE39+/fP
lRfiv2xo/N0qq6yS97137LHHxjqW/f4sNk6vkvivFBuD6TumY8eOeec46qij
Qh3jzDPPNNur/7vi16jxXzXOHRXxX3z19bcsavz39ttv520fdXyP8m/aZ0jK
MeM+TykWk1GvQxqilBu/n3/+2TxX1TgW9eHQd4b+rfleigmqe6scDh061PyW
6BjnnXdeqDxgUb+vFJfp2ctxxx1n8kQr57HmCfrjjz9C/81hRI3/1F9U7fsa
+/H9998nei1+Ud9v5bbTb6q7uLls1H/Kv17Lyy+/XPSY3377rXfjjTd6Rx99
dO413TPVEfbZZx/z/tx9992BeRNcccqfVKsMZlX+1K9/yJAhZly7pXHiyk+r
+6R2Bs3vFOa8ce+xaAy9+smpbIvOp3vcr18/77DDDitoO6jkXNpXZUb5d+34
CPWz0XggnUvHUz+2oPqgcgLdcsst3kEHHWTem/vuu8/0Fwwj7Huq57bKqe9+
9pQLw35eHn300aI5MOKWm6j3X5566imT00D34owzzjDlRPdHY1yC8qPMDzTW
0v+s/a233op9PI3FKTaHT5z4T/0oVXZLsTGYvq9UD3TP0bJlS5P7pBR9FpTX
QtuPHDkyVvxXjXNHVSr+UzkO+q3SUmxuuqw+e0n9JlZyzWnGf7r3yjWq97+Y
JO9BFFHjP//3icYUh/XCCy+YffR50G+C7ddpl+OPPz7W31BJPR71V9xyo/G8
dp4dzW2w0kor5eV50m9a0NgKf91b373t27cv+H3WojlXvv7666LXEPb7SuP+
VfcqNseTnkkqH1NSosR/qquqL5Lddvvtt0/sOoJEfb8VK9jfbru4/d11/Zo3
yH2OpUXvqeuzzz4zOas095PNN73kkkua73LV8YNyMG+33XamXh8kbvmTrMtg
FuVP9Q3NZa/5yWwet65du5r3R2Uq6Lwql8rJUEyce6z3U33Y9HzR3lP1j9F1
aB6lYr+bcc6lfIt6Lqqcf25eM9X59NxC5/X/zeqDNn36dLO//t/NBeQuqm+U
GhsW9T31jxkJWlQPqeQcldx/3cstt9zSvK7Pp/6tsu3Of6C6y/xIbX3u392m
TZvUzhU1/tOzGuWY//e//11yOzcGUxzu5jDWUm4OMc07pO00Fl3lOm78l/W5
oyoV/2nslMY++ef0WH311c3YUPVRtbL47CX9m1jp70zS8d9XX31l5n9wcyKd
csopedskfQ/iiBr/qd+Gu33YNnDR74r2Uf4X+eCDD/LmmFBdMM588MR/iCNO
ubF9ObS4+a01ntStWwc9y3DXa76kYvOruNej54dBwnxf6fdq+eWXN9vo2Zva
EvSdc++995p5V+z+Go/76aefRrhzxUWJ//y/V8ofnqY477ee77rxXdB4Z8Uf
mlPUbqO5tVx6duefb0vHtDkZ9Hd36tSpoG5x2WWXFZyrkvInWZbBrMqf4iX/
dSvHyLrrrmv+rb8x6LdU51XbYFL3WHOm+c+hv19jG/yv65o0Hi7uuTTPyuKL
L15wXN1n1fEUB2us3VZbbZVXJ1LOR43h0Hptp7qYyrR//rZiz6rjvKfqM6Tx
/bbvj61n6DUtkydPzos345abOPdf7DOCzTbbLK/O/Pjjj+fGbRUbm1brNFdX
lPpdJaLGf6rjarso8Z/os+Cex81ZH2TNNdfM+z6NG/9lfe6oyvX/1GfFPiv6
xz/+ETgvU1afPcVqSf0mJvE7k2T8p3a8oN8bf/yXZL0grrDxn9rr9KzD//up
eRbC0O+Zvkv1W+TG4f7ns8q3GxXxH+KIWm70Pe/OceTv56d+Z3adnuf7n6G7
9TkteiaofhJqY1FbhPqs+Z/P6TsiSJjvK/V/0Hr1C/NT3cY9T9A2cUSJ/9T3
062bak7QNMX9nth8881z+xTLd6U+k3Ybf/wnKgtqn3LPr98I9Smy45qVk8H9
HfXnTq20/EmWZTCr8qd6zoQJE8z81e4x9Rxa/T7Vv1XPTDVnrT9mUk4LVyX3
WLGk4gTdU/cczZo18+644w7Tt9LWR/QsPon3U3UBfz1D/Wr0PNyybRDuonvl
9sPSc1dbVw26L1Yl76nNH6Kl1Pi/uOeIev/tPnY7tSH72fmxivWRq3X+tn19
B6XFH/+pLUifP3fRvOqaB1uxtt0uavyn+qN/3m7VuYPoe0HrVYe2Od8rif+y
PHdU5fp/2j4Bmgut2PxnWX72kvhNrOSaXUnGf4ox1cfaP/+7P/5L8h7E5Y//
9NxU/Uy16BmgxvoqVvc/H9RvRZixCZaNHRXbuvzvj8po1D6uxH+II2q58c/h
o35WLn3u3fX+ZyNu3VsxgvJe++k30j2GfjvcupxV7vtKY1fs+mLPvNw+Ynom
pz7olYo6/k/1Kn3/6Vmw+kykKe73xA477JDbp1j8pzqM+94Gue666/LOHzSP
sn++KXe+m0rLn2RVBqtR/jS2xD2e7evoUj3F9rW0izs3UxL32N/fUfMmWXo/
NSetxtglcS7NL+Vuo1jPT2Nf3H7M+ky6/b0s1c3tNkH9BCt9T8PEf0mUm7D3
X9w504LmH9B3kp5Rqc10fqP6o3sftGhcYxgqa2p7ULkptWhslRU0V3yYJWr8
J7YvmV3UByCo3qj59bTefYZVSfyX5bmjKhb/6bmS3iuVY+U/LCbrz55U+puY
1O9MGuP/9HdqjKg9blD8J5Xeg0r4478wiz4LUfKnKMZVv1bt++STT+at0z3y
P7eNmjeK+A9xRC03Kqv2Gbn6G/j7fej71j3eG2+8kbferXtr3E4xG2+8cd5x
lJ/Br9z3ldrStE7f+Xr2FrT45wNOIl9bNfN/llPt+E/vo3v+IMpB4W6jvnNW
peVPsiqD1Sh/qmfZY6222mpFtzv99NPzzqs+mFYS99i2GWlRHFVsLF0S53rz
zTfztgnq0yV23gUtxXJt+3N7+8eZVPqehon/kig3Ye+/uPGf6mr+GFxUjx8/
fnzRY9QqtTn5627lYi1LseOrr75q2m6WXXbZguOozUX3xC0j/vhPffHUPu0u
atdQPdj97ogT/6ntwX9N/vZbtXmpvq+y5D7nqjT+y+rcUQXFfxr3p3Ktz4Ha
WkrJ+rMnlf4mJvU7k1b+Fze2KRb/VXoPKuGP/9RGq99DjdHTvAvKAdClS5eC
8q5nqMqzE4aN0TV/exB3blEtei+iIP5DHHHKjfpN6Lm9P5+U+jIqd5N7PH9/
rrC59+1vjl1OOOGEgm1KfV+pXhk0x2a5pVSO3bCI/yqL/6ZOnZq3jZ6Xuiop
f5JFGaxW+XPjP+V/KUZ9uNxxj5qTy1XpPdZvp11fbn6kSs8VNv5T3gC7TbH4
T3ku3WO5+biTeE/LxX9JlZso91/32e3vrHqk+sfVldz5yifk3is3v2BY/ucC
qvsF9R+MOv5P9WFtFyf+E41tdc+nZxwum3N29913z3u90vgvq3NH5Y//FG+r
L6H6mPt/R/yq8dmTSn4Tk/ydSSv+c8emVxL/lasXxBV2/J/qdRo77r+XmtOn
HPssWf1Lgmj8pttOqiVK31LiP8RRablRn48HH3zQjA9THcL/Wxs3/tPnwT1O
0Li4Ut9Xbp1Qf5Ny14VZksgBQ/xXWfzn7xNY6ns+avmTLMpgtcpf2PhP3HEq
+n0qJs49jloHquRcYeM/d5x9sfjP//l47733As8T9z0tF/8lVW6i3n+NCfLX
a3TvNf4y7FwYxSh3kuLqSpdi72s5yk/s/l127FUUytPnHkO5Q4JEjf+Ud1Xb
xY3/1Fbrf9/svDVq+7R5M/y5W5OI/7I4d1T++M8uyrtRLn9ttT57lfwmJvk7
U+vxX5R6QRRR8n/qmY/yffrLV9C4acttK9e4dI0DDFr8YzLUdyAs4j/EEbfc
qJ6m+Wxsv3LVqfXda3/PitXXosy97eZ017N7v1LfV4888khu3VprrRXqb0oK
8V/68V/c8idZlMFqlb8o8Z97H/Rvv0rucdQ6UCXnSjP+02fZSuI9LRf/JVVu
ot5/9XXccccdA+vO+o5w4+Co9J4FHTfqEvd7VHMZuseJ8jzC0rysYb4348z/
pzKhvEylFIvBpFu3bnnnVF9dueKKK4p+tpOI/7I4d1TF4j8tGn9Vanx9tT57
lfwmJvk7Q/xXPv6z7Fg+uyivczH+75+wi/IGhc0HQfyHOOKUG+UVtu3gqh+7
z4j943Uqif/c742TTjqpYH2p7yu3v47yCSc9Z2gpxH/pxn+VlD/JogxWq/xF
if/c99R/Hyq9x1HqQJWeK6v4L4n3tFz8l1S5idP+qnuueRjdfKx2Ud+kuPM/
KN/QUkstZcbVVLLErdP488OqP2C5Ocv9/H0Bkoz/wigVgyl3sXtOtZvrM6Hf
Hf33/fffX7BPUvFf2ueOyh//3XzzzXn/vemmmxYdj1etz14lv4lJ/s4Q/4WP
/zRewt1H7cs2V6lLv1/2+1TPRDResNTin0NEOQHDIP5DHFHLjXIg2nlmgr7f
k4z/lHvNbjts2LCC9aW+r/Td4F5H2NwFbn0vLuK/9OK/SsufZFEGq1X+osR/
dm5ALe58Sknc47B1oCTOlVX8l8R7Wi7+S6rcxO1/KzNnzvT22GOPvOvQonlD
snyOlhS1Xdo5DO1SbD6XYrKK/9Tere9If/+8UjGY4hn/nAO237Tqk0HvWVLx
X9rnjioo/4t/DPGxxx4buG+1PnuV/CYm+TtD/Bc+/rPt2+4S1EdC4yy1bp11
1gl1Lf7jai6KoLjSj/gPcUQtN5qf2W6rvH1+ScV/+l1x58UL+qyX+r7SXF7u
dZTK82g99NBD5pyVjsEi/ksv/qu0/EkWZbBa5S9K/OfOC6wceVYS9zhsHSiJ
c2UV/yXxnpaL/5IqN1HqoLqnQbmNNC+9v5/T888/X/Z6atGgQYPy/g7FgxrT
F1ZW8Z/tK+bPc6scpHq92Nxt7nevuxSbSzpKDFbNc0cVFP+p/qz+ee7rynnr
V43PnlTym5jk7wzxX/j479BDD83bR30K7PyWluoP6veg9SrzYeh7xh1zouW2
224rux/xH+JQnx633PTo0aPk9u736CabbFKw3j9fV9z4T2OUS51Hyn1fuW03
Wtw2Dj/lElb/iSS+9/QcyD2vcofXiqjvt+WODerVq1fgNjaXnZa2bdsGblPp
93yl5U+yKoPVKH9h4z/3Hqv9zc1lmMQ9DlsHSuJcWcV/Uul76sZ//nmAkzqH
RKmDqt+Rcg/486+K+ubaOoyWiy66qOSxapXmFXHbmbUor3tYWcR/mmtCOXn1
XMbv2muvLVlu1Y6uZ27uufXfig+C+Oc3LZVroprnjqrY/H+K9fWbZF9Xn7yg
uVGz/uxJpb+JSf3O1Nf4z/2d11Iu/lObtn8+jaDfLvvcRPFc0NzBxSifqHts
jbEtJ269DvWbO35YyyqrrFJye3ceJD1DUn8V19VXX513PP+49rB1b/02a5um
TZt6b731VuA2+szZY2k+Wr9LL70071r026rPpD9vt+YEUv1H54ryTLgYf57i
Ym1hluajVV1d+bPTfr4e9f22DjnkkNw++j7zz52t+Z3ctgKVjaBxFhrbVe57
fvLkyXnbuHmQKy1/klUZrEb5c+O/ZZZZpuh2euZut7v77rvz1iVxj905sEpd
RxLn0tz17jbF4j+3bq5YMIh//gd/n55K31NbpoJ+1+2YtCTKTdj7L4r/tN2j
jz4auN7m8dcyYsSIkseqZZp3Wc/p3Xur51pBc2H7aS54d79i8Z/73aIlbPyn
Zxi2Hh9U9z777LPNuqB8KtaAAQPyzq3/LkZxvLttUG7jWjh3VGrbco/tzmGi
efDcdXoe4P++yfqzJ5X+Jib1O1OuPhWX2z+4WL/rSu9BJfx5bIvl9hWNkdbz
Cnd7Leoj7dK9t3Fv1Fh6ypQpBccv9t1sxanXff311+ba1E9bf5N/7l3Uffa7
3S56LlZq3ifNeetur5yIiln0O6fcX/5yqz4jEyZMMP1vxP19VJ/ooBhBeQDt
3GRnnHFG0WuxuQK19O7du2D93LlzA+fGUV5qPXtXG75yZtnXdd4k2PqUu3z4
4YeB2ypucudh0zyjaYr6fls33nhj3n6qu+p7c+LEiaYPX1DOCH3X65md6/zz
z8/bRu0LfiNHjszbRvO+WpWWP8mqDFaj/LnxnxbNK+unOrzt16rc+H5J3OOD
Dz44t155zDQHQJAkzuWfF7hYLm49E7XbBPU1FX/90e0XK5W+pxp75O43duxY
M3+4/h61T+g+JVFuwt5/sd9XqjMEjTWxz6N1nM8//7zoceYHigH9bVUdO3Y0
rxej90P1YXefoPhP76N/vhKN5ylFcy9eeOGFXvv27XP7BM0prTqp1ulzq1g0
iN4bO85Rdfyg71bLfQ6hRXN0FxvbWc1zR6Ux2u6x/f1oNa+lu179D9z4P+vP
nlT6m5jU70y5+lQc+j5x6wZBfd6TuAeV8PdfVvn98ssv87ZRHUHxc1COZL3f
fm7OKf1tUfm/o9ZYY42S4wDj1Os0x727T6l2Y9QdymWtflR6v90+EXbZbLPN
zPME5W3z1439n0F30e+Dnu3p99S/buuttzb7u30EbblW/KA6m/o56/vBll89
Ewqi5xbnnHNOwWdWx9BvsEv9ucrNj6qcZcp7Vwn1D1J/BH23+sfMaNH3r54/
6jmv+5zFX99U34ykVfJ+Wz/99FNePzD/omddQXGvxi/ru1TPzdTfxv2N0XLY
YYfl5eJTe4v7W6VF83XZ34NKy59kWQazKn+WP/7Tov66qhcpt4rq8jb2U38u
1R38KrnH+s3Rs+c2bdrkrevbt6+ZS90/l1yl76fqo/q3u27LLbfMy5utz9s9
99yT95xFi8Zk2LqZrkt1ceUHdLdRPOofJ1PJe6rnJUHbq11Kn8FKzxH1/ov7
uVVOID1X13aq0+v5gcq11qkfYF0wY8YMUy/230+1jWjeSc3RpbKheqHy/Pnn
5dIzE/e5lr6b9CxM31NB75PaPxRnqH+d5kxXrlv1H1M+naDt7Xedyp2eP7j9
lrUoTtdvSVAOD9s2sffeexes0/es2lBOPvnkvHHNdtlrr71M+dRnp5rnjkO/
T3ou5P/tUPuG29alz7sba2tRHwT1M/jkk0/MNll99pL6TazkmiVKfSoKvZf+
3yP1HVJblj1ukvcgCr1X6m+t7zT/Mxstek3toXpmqHZi/5g8LXreoXqD286q
3yONe7XfmVr0t+lelhvXr/hOZdX/rN0uaifXNdt++pXW69ycDlr02UTdd/zx
x5f8nnCXoHYrfVe6dSmVddUx1e9RlPPI/Y7X59QdC6A6nz5bzZs3D/wNVrlU
mQ3iHzsQtEyaNClvH3336hqCzqfxOP42qjj8MUWpxe3Dpu8hN17UM5mkVfp+
W6ofq93E3V7l4IgjjjDv77hx43K/p/pe1HeT/c1z83wELWoHCYof3UX1Dqm0
/EmWZTCL8me5v7fq1+E+i7aLYnW1OZSa1zvOPdbvteoYpe5L0BxVcd9PlbtS
51K5Vz/lUtekdeovevrpp5c8lj9nYCXvqduXWoviA5VHv6jnUP0hzv3X505t
BRr3ovYKbadnH/ZYGo82P/f7LEbtzIpZFltssZL3TGVT/fPVpzFozJHaAsN+
v5Zb3P4f5Y6rOMZP7V1634LKnz8PZrFFsVg1zx2HnjOWOq76Eqi+HNRPxS4q
+7aNJYvPXpK/iXGuWeLUp8Lwj2HzL7pXinWSvgdhBf0ullr0HaC+vHqGoxxN
ivEUN/spRit2jGLjvS39rWGuRe+zVFqvUw4ku16fC9XvgDDUZ2LMmDGmzAa1
Iajepc9lqXmDVf9UrnH1vVHbhJ7LpknP/pQfWXUZPYtUm10tUF323nvvDRyP
XovUP13Xq+e17rhmjaXQfS0VVyQlifInWZbBLMpfUP4X3Qu1T6itOcrz9aTu
ca2dK0lx31ONJ9VnqNi40iTOEZY+w3YclJ5lazyl5hXT9alOX6xPQF2hvodq
83zwwQdNvU5tIWr709x2+o4rlscEdV+t1hlKmR+vGdWhmE9xIGUEAOZvUeZ/
AAAAAADMv4j/AAAAAKB+IP4DAAAAgPrBzYmi/C8AAAAAgLrJncNX+ezi5lMH
AAAAANQe5S/UPG2aq86f93nllVc2c4okMbc8AAAAAKC6lJ9/t912K7lonjMA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFB7
Hn/8ca9Pnz4sLCwsLCwsIZapU6dW+6cbAIDYBg8e7DVo0ICFhYWFhYUlxDJq
1Khq/3QDABAb8R8LCwsLC0v4hfgPADA/++abb7zXXnuNhYWFhYWFJcQye/bs
av90AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADmI48++qg3ZMiQal8GgJRcfvnl3tNPP13tywAAAEANOPjgg71/
/OMf1b4MAClZdNFFvbPPPrvalwEAAIAaQPwH1G3EfwAA1D//+9//vF9++aXo
8ttvv1X7ElElacV/f/zxR8kypzIZJGjbX3/9NfL5dfwXXnjBO/30071XX321
0j8HmG9lFf/997//NZ9XffYt+9sT5zMMAADie+2117w2bdp4DRo0KLq0bNnS
W2655bw999zTu/3224kJ64m04r/DDz/ca9SoUWBZ69Spk/fpp58W7KNyuuCC
CxZsv/7664c+7+jRo71dd93VW3jhhXP7jxo1Ksk/DZivZBX/7bfffubzdsst
t+Ree+qpp8xrm266aernBwAAhe655568evVmm23m3XDDDd4555zj7bPPPl7z
5s1z61ZddVXv+eefr/YlI2Vp9v+cOnWq17Zt27wy99xzz5XcR20IarOz2w8f
PjzSOSdOnOhdffXV3vLLL0/8B3jZxX89evQo+Ixff/315rWDDjoo9fMDAIBg
HTt2zNWLhw4dmrfum2++8XbYYYfc+gUWWMB7++23q3Sl84/p06d7DzzwQLUv
I5a0x//ddNNNefHfI488UnafESNGmG1VFuM688wzif8AL7v4r127dubzpt8R
67jjjjOvXXLJJamfHwAABFtllVVy9eLbbrutYP3s2bO9pZdeOrfNv/71rypc
5fzjxx9/9Lp06eINHDiw2pcSS9rxn9rzVlxxxVx52n777cvus9dee5ltJ0yY
EPu8btxJ/If6LIv478svvzSfNfW7dm233Xbm9YceeijV8wMAgOIUq5SK/6Rf
v365bRQLorjddtvN3Cfiv+JuvPHGXHlq2LCh9+677xbd9j//+Y8ZA7jyyitX
dE7iP2CeLOI/zS+oz9oGG2yQ97p99vPWW2+len4AAFBcmPjvjDPOyG2jPj1+
X3zxhffMM8+YPo/Ksfjnn3+WPOfkyZNNu6Kob9DDDz/sff311xUf9+WXX87L
I6J/az5zHcdPOemmTJniPf744953331X8rjy/fffmzqNrlXPtv2U1+6UU07J
3aeTTz7Zmzt3rlnU5hX1eK5vv/3We+mll3LnmTRpUtlxc3FlEf/9/PPPpg5q
75VywxQzePBgs82ll15asE45iV5//XXTh1R5Xr766quixwmK/3Qv7XtkF0vl
w7/u999/L3p8lU3FsTq2xsm6OQ+DqGw++eSTpsz+9NNPZv9SxweSklb8p7G2
9913n1mOPPJI81nr2rVr7rV7773Xa9KkiXn9rrvuMq+98cYbiV8HAAAoLUz8
t/feewf219M4t6222sq8rlyhNsdihw4dTFzl+vDDD70LL7zQtONom1deecU7
4ogjcvWBJZdcMldnDntc1ZkVHw4YMMBbYYUVcvUK1b/XWmutvDamXXbZJZd7
/LDDDsvLf9q0aVNv5MiRgX/7xx9/nDcG0i7KX+fGmm4bqX9R/tSox1Nso7hG
+VebNWvm7bzzziZ/yrLLLpvbR7l6kpbV/H/uM4UWLVoUjcGVd0jjTt3nA3of
zz//fFOPVY6i1Vdf3bzHyi+6++67m/fYLyj+U/zVunXrvPfBxoBPPPGE17lz
57x1l19+ecFxdS0333yzt8gii+Rtqzw311xzTcH2ilH1GdI26nute63rVhnX
5wNIW1rx38Ybb1wyp3TQou9lAACQrXLx38yZM/NyNqo9Rj744ANvoYUWMq9d
dtll5jXFLMrrZnPF2HhGx23VqlXe777GgWgbd04A1Y2jHFdth717986L5bp3
725iSsVTBx54YN61K+bQevVh3X///b1DDz3UxFY2BrFtkpb6KOm6Nd+A2t/U
Tnfrrbeaa7DxqNrmZMaMGd7dd9+dO5fGrGmeOS02pohyPL0vjRs3zh1vnXXW
MfU2dz6EUu1mcWUV/+m9dv+W8847r2CbZ5991qxTTOc69thjc88M7Hv2zjvv
mDher/fv37/gWMX6f2oeMjd2c9sA5dxzzy0Z/6mM6f3T5+Kzzz7z3nzzTa9X
r15F/y77XMN9JqD8pHrtrLPOCnHngMqkFf+pTCu/ixb7XEXxnX3Nfi70rM6+
pu8/AACQrVLxn9rRunXrlluvedRsHzW1v9jX3fm0tY993W3/UNveFltskVun
OEgxk/r/9OnTx/SXjHNc0fxSdp1iArUJWqqTu3Gn6t/qf2jZure/Tq6YU3+7
4kd/31Tbt0nLCSeckHt92rRpudf94//iHM+OobGL2jl1HP3922yzjWkPTFpW
8Z/YmF7LEkssUTDH5L777mvWqZ3O0jb2WcJOO+2Ut/3WW29tXlc851dq/J+O
Uyz+07mLxX823j/ttNPyXv/8889zMb2eK9j+vXrf9Zqeefj7em600Uam/zCQ
tizG/6200kqmrOt5iPXvf//bvHbUUUelem4AAFCaG/+pjUlz9qp/2mqrrZYX
e6g9yx3HZudxUpuL6rvWnDlzcvto3jbXSSedVLKtMe5xNe7ErrvgggsKjmn7
hmr54Ycf8tapfmLXaY4Aa9iwYea1HXfc0ezjLu68ibp/Vqn4L87xNC7Mvq75
68qNf0xClvGf7r36bQaVCfUHVfug+v+qj6WluGmppZYKbOc7/vjjc8fyj7ks
Ff/tscceReM/5RwtFv/ZOQVffPHFgvdU99DupzhRNJ+9fU05cPzXd+KJJ0a8
g0B0acd/ekajPhjqv+A+01G/e5V9PXMDAADV48Z/6n+oMUlaNtxwQ9Muojgm
aIy+6tfK4e0+31XdWW1T9njqp+fSsew6xUpB4hxXuVDsuosuuqjgmOqDZNcr
pnLNmjUrt071E0v9+tz4t9iithwbM5SK/+IcT/fCvq7xf1nIMv4TtWPav3GN
NdbIvW7zvgTF82o3Vk4gd5yfxpMq12CxOD/p+E99kMO8n1ps27bi98UWW8y8
prhX41+V31RUT/b3PwbSkHb8p37uKuPK9emy/T/Hjh2b2rkBAEB5YfK/lPPe
e++ZuqzG4akN0R7vmGOOydsuTPwX57jl4j+3fu+P/zQOza474IADcq/bPOXq
q6Qck6UW29ZUKv6Lc7z6EP+NGzcuL1ayfT2V90VtCEG5Wy21BapdtUePHmbM
aMeOHXPHUX5VV9Lxn/IM6TW1cZR7P912bHceei3qq6pry6JtF5A04r+LL77Y
fBa0uGO67WvuWGb7uvpGAwCA7FUS/6ntTP1C9XuvcXWq67r9NOPGf1GPm0b8
Z8eYRRmrUir+i3O8+hD/yZprrpn7O9UeaPO+lMoNqPhL/UBtnk21Bbr9P9OO
/5SbyL4eZv4QS31Z1X/ZrSNrUZ/rH3/8MfRxgLjSiP/0vavnL+4zGD23s6/Z
PFyK++xrymUMAACyFzf+U77FxRdf3OznjserNP6Lc9w04r9OnTqZ1zSPRFil
4r84x6sv8Z/y7ti/U/0i7dwdjz32WOD2Nv+n6pCffPJJ7vUs47+hQ4fmXtcc
jlFpDkd3jhItioPLzRsIVCrt/p92viA3t6fmudRrWX+3AACAQnHjPzvXk+ZS
cPNzVBr/xTluGvGf5o+wr7t5SP10Ppu3sVT8F+d49SX+09g3t93Avv9BfSKf
euqp3DaKwVxpxH/jx48PjP/cuNCfh9SlOUo056XaCDX3o5u7Vn/fkCFDzByG
9ljK+QqkKe34T3PsqCxPnjw599rw4cPNa/65XAAAQPZsnm4tmkchDOXWsP3X
NE7LpbFO9nhHH3103rpy8V/c46YR/+kc9nXloFQ93k/tU5o/0OaqcfM7useK
e7z6Ev+J5j53479i9VM3xlPeVJeu3a6zeVWsUvGfnWdCy/Tp0/PW2XqrFo1x
slRuND7RrlNuez/NM6I5T1T+RDlq1LbtPtcQd56PoPILJCnt+M/Ox+p+BnU+
veafKwUAAGTP5iPUYudbL0d5Ct3xSxqvJeqLp7jHvq75AsXOaa756+w699lw
pcd124Q0f6Cfm//TP/eeOz+g+i1Zmoferd+rr57aR7W98k8qltX6Qw45JLeP
G6Pafp6K4W644Qbv/fffj3w8jWmz22scZBaqFf+prtiyZUvzt2qMkPJrBtEc
CfaebLfddmb+dt3j0aNHm3qtXacxozqmbUN053m89957845p5xzR0rdv31zO
ej1XsP12tey22255+7llUuVW5Vv9OlUuFcuvvfba5m9SHiNR/KdtH3300bzj
qM+ncmFonXLfAmlKM/6z+ZR1Dtc+++xjXme+dwAAqkf1YjsnnV2Uf98dT1XK
uuuum9tPY7Zsfsv1118/l+tE9Xj149P87uq/qXV2H7Xj+NtB4hxXzjrrrNw+
am9xqb2vc+fOufXuHO/izr2n+dzc/n+DBg3Kuz/+pXfv3nnzeOue2rGLWpSz
VH2h1D9Q66IeT3GKXdeuXTvTfzBt1Yr/5Mgjj8zFdcUornLvmZ5ftG/f3swV
uMkmm+ReV39StaUq9lI8p/wqxdqPP/zww4Jjqv1Z//7nP/+Zt045Kz766COz
n94PNz70L5oD3p273sZ/Krtu+7fa3fV6165d8+a0ANKQZvxn+0VvtNFGea+v
t9565nU9UwEAANnT/EyqLxertyqG8c+fHXQM1WPd+OScc84xbRnHHXdc7nXl
tDj33HMDz7fEEkuYed7iHldtLZqr0H/cZZZZxswxpf562t9dp5hS+6pvnmIz
d/5xLZpH4Iorrshdj/oN2vnG7aJ445JLLjFtT35q07O5zvX/ih/c7cIcT7Gi
jXvdpWnTpuba/WPUklTN+E/toGpH8/fPdOmZgebTc99PPRvQHJVqS23dunWu
PU5l66qrrjLvqf9eKm5zzzNmzJi82F192DRHu56H6L9XW201U479Yzc1P4Vy
luq9cY+v5xD+bXWNauNVbKrt1Qassqrtt956a2/mzJnJ3lAgQJrxn83lpPlO
XfY778svv0zlvAAAIBtqV1Fet6lTpxbk6lBdV/XfOPOapXXcSigv6RNPPGHa
k8rlaFQcorwh/jnI4x4vS9WM/0R9ecPcD/W11T32j6NUe+/EiRMjzclg6f3S
WDyVO9sOq7KovqTlKCZX24f6Nftzz/jPIWoPVznW36s+c0BW0h7/BwAAgPlH
teM/AOki/gMAAIBF/AfUbcR/AAAAsIj/gLqN+A8AAAAW8R9QtxH/AQAAwCL+
A+o24j8AAABYxH9A3Ub8BwAAAIv4D6jbiP8AAABgEf8BdRvxHwAAAKzXXnvN
zIEOoG4aO3as9+6771b7MgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACg
pihP28iRI1lYWFhYWFhCLJ999lm1f7oBAIht8ODBXoMGDVhYWFhYWFhCLKNG
jar2TzcAALFNmzbNu/rqq1lYWFhYWFhCLB9++GG1f7oBAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOR9957z5s6
dWq1LwNASp5//nnv448/rvZlAACATP3+1/JdHVl+Tvje1G8HH3yw949//KPa
lwEgJYsuuqh39tlnV/syAABApsb/tTSoI8vNCd+b+q1a8d9///tf78knn/Su
u+46b9CgQd63336b+TUAafrpp5+8M844w7vkkku80aNHe7Nnz67KdRD/AQBQ
HxH/IVg14r8bbrjB69ixo9ewYUNv00039QYMGOD95z//yfQagLT9/vvv3nnn
neettdZaXoMGDbzWrVubePCPP/7I9DqI/wAAqI+I/xAs6/jv8ssvN3Xh9u3b
exMmTIi079tvv+2NHz8+9rnVxvjggw96F1xwgXfIIYd4U6ZMiX2scj766CPv
oYce8m666SbvlVde8f78889Q+3322WdmP8XIY8eO9X788cfUrrGcuPfrqaee
8q688kpvzpw5KV9hvijl49dff/Veeuklb8iQId6IESO8N954I/R+ug933nmn
eW/Vhj137tyy+2mfBRdc0JT9ww47LNS5klKt+K9a5QAAAAjxH4JlGf/973//
85ZaailTB1a9MKx3333X23vvvb1GjRp5BxxwQOTzqm6/yy67mPZG1cG33357
b+jQoan0x5s1a5a35557mr/RXdq0aeMNGzas6H5ffPGF17t374L9FCdfe+21
iV9nKZXcL71XLVq0MNc+c+bMDK42evm4/fbbzfvhv9ebbbaZ9/nnnxfd7447
7vA6derkNWvWzFtnnXW8rl27mnPqPbrmmmvKnvfqq68259E+iiOzUo34rxrl
AAAAuIj/ECzL+O+HH37I1bVfffXVstu///773n777ec1btw4t1+U+O+7777z
+vTpY+rbdl9dQ1q++eYbr3PnzuZcqnPvuOOO3gorrJC7dl3HqFGjCvZTDtZF
FlmkIB5xF7UHpq3S+6X+jt27d89dc9r1/jjl45hjjil5n1dbbTVzH/yuv/56
s3711Vf3Pvzww9zrkydP9hZaaCGz7sYbbyx5brWn2vOofTgrWcd/WZcDAAAQ
ZPxfv8GNvWefbW6WKVMW9MrFWa++2iy3vf6t19xj2OW995oV7Pv55wsWbPfW
Wy2Knuurr5p6jzzSyjvvvLZe//5tvEsuaec99FAr7/vvG5v1M2a08H77jfgv
DdWK/956662S26q/5HbbbWfaTNT3MGr8p7p2t27dzD6qn6sfY9rU7qf2TfVr
tf09NdbrxBNPzF3/7rvvnrePtltvvfW8Vq1amb/1yy+/NG2B9913n7fccsvl
xY5p1qOTuF8DBw7Mi6XSvN445UM5WLTN5ptv7r388sumPXPatGl/fef0N22d
9hgHHXRQ3n4am7rAAguYdc8880zBcQcPHmzW6f0qJUr5T1LW8V+W5QAAAAT7
6acxXrt2TZy6ZEPvgw8K4za7zJq1wF/1nUa57RdcsJGJ/dxj2GWhhZrk7fvH
Hw28xRdfoGC7RRddwPv998Z52/73vw29Sy9t67Vo8fe52rRp8lddzPZ9a+Kd
ckpbr1mzhn/Vh9t4xH/Jq9X4zzV9+vRI8Z/a4dZcc81c3KQxWmlTHbdt27am
Lc9PMeDSSy9trkf/7xozZox5PSje0v1acsklc3/7bbfdlsq1J3G/nn32WbOv
+kRmXe8PWz569Ohhlt9++61g3aWXXpo7xrLLLpu3zsaNWhSf+6kN0K4v1X+0
PsR/1SwHAADANd57/fUW3tZbt8jFf0cdZeOpwmXgwLZmu1atGnvrr9/Ce//9
puZ1HWOJJRbw1lqrhTdxYhuzvP12YVuiXrPre/Vq6S23XDPv008XyNvmzz8b
eT17zruerl2be48/3tr7z3/mbfPLL029J55o622zTctcHeLOO1t7xH/Jmx/i
P8VUUeK/DTbYILe98i1mQfk91GZXjNqcdD2KP1xqu9phhx2K7qd+n/Zv0XuV
hkrvl9rRFDNtu+22Zqxi1vX+MOVDcZna+KZOnRq4XjG6HZvqj+OUI8a+fvfd
dxfs667//vvvi15nXY//ql0OAACAa974v/32a+2tsEIzb5ddWnstWzbOxVvu
8vPPDbyFF27ibbJJK2/ddVv8VTdtmbd+ww1behtvXLwvp3/ZdNOWXu/erQpe
v/ji1qZu0K9f64J2QXc57LB52w0bRvtfGupa/PfEE0/kttVYvLB5N9OkvDea
70LX5M/lotyayg9ajPop2r/n6KOPTvzakrhf++67rxm/qLYxzedYi/HfO++8
451++uklj6P+pPY47nwk48aNy2sb9LcB7rTTTmbduuuuW/L4dT3+q3Y5AAAA
rvz477nn5sVUF1xg29T+Xm64Yd46jb8Liv/22quVt/TS+XHjt982+avu1Nos
H3+cv27ZZRf0Djmkbd5rak9U/9IuXZqbeLNU/KixhOp3+swzNuYk/ktSXYv/
evXqldv2lFNOMXVP9a1U/o5777031fwvxVx11VXmepSjUrFgFM8991zu70kj
D2il92vkyJF5/VdrNf4LY4sttvj/vuqL5r2umLhLly65c6y66qreBx98YNap
vXReP/iFyuY0qsvxXy2UAwAA4MqP//Tv9dZrafpy/p1XpcFfddMG3iqrNDPb
qH9mUPx38sltvCZNGppxfva14cP/zqV+/fV/x3o6RtOmjUxeF/cYV101L8ac
NCn/2KXyw/z938R/Scoy/lNexTTjP/Xtc8ecqp5uc1napXnz5t6xxx6b2Rzc
iv2UO0Tj/r7++uvI+2teAV1306ZN//ocfJXotVV6vz755BOvXbt23oEHHph7
bX6N//T3dejQwRxDOUL9VF71t9rzaP4I216o+d3DzB9YV+O/WikHAADAVRj/
3XvvvLrMrbe282xs9dhjrcxrV18977Wg+E/rtM0nn/w97m/ffVubPqOtWzf2
dtrp776eGvOX33dz3rL77q1Mm57izbD9SIn/0pFl/Kf5uW2dUPOchxW2fu+O
ldOi+RfULqFxeaeddlpu/m3bFpcWze2mcWLuuDotqiNrTuwo1KcwrbF/ldwv
tYn17NnT5Lx056ifX+O/xx57zOyvv3nGjBmB22iMp2Ip954pDiw15s+leRGa
NJmXQ+v555+PdZ1xpBn/1VI5AAAArsL4T+13nTs381Zf/e+xfFts0cLk3Jw7
d157W1D8N2rUvNww6kNq2wyV23P//duYcYWKAe14PtvP9Omn8/uZ6hqUiyZ6
7Ef8l7Qs47+LLrooN4YqirD1+5NPPjm33a677lqwXrn7bR5/LS+88ELkvyEM
9dnUnOmbbLJJwTzjGh/lji0r5emnnzb7LL744qFjjCgquV+XXHKJmXdv0qRJ
efvMr/GfYhjtf+GFF5bczs4D6G831VyEYdg8q+prGrUvcFxpxn+1VA4AAICr
MP5z+2Eq9+b06c3MvwcM+DtWC4r/XnllXs5O9fnUf7/00rw2w3vuae3deGO7
vHjP9gv96KPmecfo1GmBv+KOwrGHxH/ZyyL++/nnn009UW0fLVq0iNwGFrZ+
r7n17Ha333574DbKUWG3cfurpeWnn34yc5S78cKgQYPK7qe2Is1FrvhLcWAa
4t4vjXPTdQXlU5kf47/hw4ebfdWfs1S/YPXFVRnW+2JzvthliSWWCDWn+0sv
vWQ+A9pH/WrdueTTklb8V2vlAAAAuILjP7Xzqb1P7X4HHNDajNX77LO/c3EG
xX/ffDOvPeCii+bFf2ef3daMB9Rc7cr9onWnnTYvtrvwwrZe48YNzTx//vjv
oIOC4z/FikOGtC5Ybr65nffFF4084r9kpRn/abzTZpttZnJjqFxonvNSuS6L
CVu/79OnT267Rx55JHAbxZ52m4033jjytcR1xRVX5M67zTbblN3+hBNOMNve
eeedqV1TnPulWF7tXd27d//rc/3fgu3nt/hP8ZfaZPUZcPsv+tlxmJojwvZd
Vj4et310lVVWMXF7ObNmzfJ23nnn3H5rr722GUOXljTiv1osBwAAwBUc/2nR
/Op/j/HJj8mC4j8tzZs38vr3nxf/KY+MOx+E8sesvfa8/z788LZ/1ZcK55hY
bbUFvS23DM79ovP5+1fZZV6+UuK/JKXd/vfwww97++yzj+kHqbryUUcdZdrE
oghbvz/rrLNy2xWbK/3jjz/ObRO1H2ol1Ndv9dVXN+ddccUVS2576623mu0G
Dx6c6jXFuV8PPPCA+XfLli3N3+Ff3P6u2t6+nqa48d+cOXPMe7LyyiuXzK2j
uQBbtZrXz2HEiBF569TX167TcvPN5b+fBgwYYD4LagdUnD9q1CgzZjQtacR/
tVgOAACAq3j8p/kVNBeDfqenTMmfy71Y/LfSSgt622/fysz7oLnk3Xkkjj22
jdewYQPv668bedtu28LMF+jfX/suvnhhXKhFc7+rnc8utn/p4ME2Tw3xX5Ky
Gv+n+rXNndG3b99I+4at36tubrfTWMMgv/32W24btUdm6fDDDzfn7datW9Ft
lIdEuT7PO++81K8nzv1Sbphiz2dKLWmKE/8p3tp8881NbPLpp5+W3Pb888/P
HT+onW7YsGG59eovW4r6/mo7zbVY7rxJSSP+q8VyAAAAXMXjPy2vvdbcxFn+
14vFf+ovusYazXPj+6ZN+3ubMWPa/n+/tdamnU/zBfr3Hzhw3jYac1huvJ/6
g9rjEf8lL8v8L8qJqfdScwz88ssvofcLW7+fNm1abjv1bQyiORgqGStWiYMO
Osic9/jjjw9cr3F+mm/h1FNPLXoMtTcF9beLI8790tzejz/+eNHluOOOy22v
MYV6bfz48YlcbzFR4z/dP43fW3LJJXPz+Pl9++233uuvv27+rfkgdGy12QVR
v1HbD3Trrbcuee5OnTrl7k1W0oj/arEcAAAAV+n4r9hSLP7r16+1mb9B8z50
7Jjfjqf53BdcsJFZp1ygbj4Zu2juCI0Z7N69ecHYQOK/bFVr/r9333039H5R
6vd2nm71S5s7d27BeuXdt8e66aabCs6ja0yD+n927drVnHfixIkF619++WXT
Z079Y4t59tln//q8dcwbY1bpNVdyv4IMHTq07LgvnefNN980cwckIUr50Pug
/siKiTQfSRDlgFEuGNv/9pZbbskdX31Bg2gsnNYHzR1ozZ49O3ectHLPBsli
/ne/MOUAAACkKdn474wz5rXfKc478MA2Bes1t4PtU3rdde0Cj3388W1zYw7V
j5T4rzqyjP/izn/94osv5vbbf//9S27r9sW7+OKLC9YrvtI6f64OmwtTbZOq
u0alv03n05x6QXlE1Aai4x966KEF6xQLLbzwwma9+hpecMEFecu5557r7bHH
HmacmeZsSOqaJe79KqZcvV/5L+14Oc2bnkS8HaV82D64unf++6xF4/HUP1fz
ANp5OvR32OMPHDiw4Jjq22znSrz//vuLnruuzv8ehPgPAIDq+v33J8y87d26
NfcWWqjJX/XJ1maZNKkwtlP+z/POa2vWt2nTxFt55WZ/1UnbmvF8dhvl4rS/
7fffX9i+9+9//51T5tFH2xas1/Lnn41M31BtY69p9OjW3owZLcw1vPjigia3
qOJV4r/01Hr8p/Yaty+Z8nWU6zuqeQpsXKS8Jjanv3LRNGvWzMQfbhuc4rWG
DRvmzqH1UftYDhkyJLe/6ttXXnml+XvVXqSxdRrTpxhO4+lc6n+oNr0wY6d0
jXaeuSSuOe79KqVcvf+kk07K+5vKzbdXTpTyobwrYcep+cfx6Tr1uu6H2w6q
/rFbbrmlWRc0h6KL+A8AAGTlhReuM/Mw+Os46sfpj8vOOadtwXYtWzb2nnnm
7xyfY8fOi9s0X8Ts2YV5XN56q0Vu33Jj/DRvoGLMYvWwjTZq6Y0c2TY3pzzx
X7JqOf5TW47GaPnLhPpJKme+f85pl+qfNgdh+/btTb4N/btHjx6Bc3VrbgP3
HFH6p8oXX3zhdejQoeBaNV9cr169TBtVEOUgCRuTaM7wJK/ZFfV+lTpOqXq/
xoEpFrbb7LXXXrGvOUr5GDduXOj7rEXjLP00B4TNYaQ5I9ROqPGaio+VS7Vc
XlviPwAAkJ15/T9refnuu0Ymxrzhhnnz/U2Y0NLkJi3clvgvSbUc/1VK48vU
t/Kuu+4yeTVL5fjXtjNmzPCOPPJIE7NFyU9jKaek4ow77rjD5EfUuf3tfUlK
4pr9xwt7vyrx/fffe9OnTzfXHDR3eC3T+6nYUPdI+VOnTJlSct5AV32K/wAA
QLXVfvwXfiH+S1Jdjv+iUj1eeTz69etX7UsJbX68ZlFOFbUDRmlbnN8R/wEA
gOwQ/yFYlvGfm/9Q7Uy1RG1d3bt393r27JlaDtCkzY/XLBo/pz6Tw4cPr/al
ZIr4DwAAZIf4D8GyjP+Uq8POk1Zrc4Epx2b//v0Tm1svC/PjNauP6korrWTy
gNY3Gp9p47+PPvoos/MS/wEAUB8R/yFYlvGfrLPOOqb+u8Yaa5jxckB9ccQR
R5iyr/g3S8R/AADUR8pP8G4dWb5N+N7Ub1nHf9OmTTO5E1UP1hzbo0ePJg5E
naW5NFTm99tvP1PmNc9jsVywaSH+AwAAgJV1/CfK/6h8+WuuuabXuHFjr3Xr
1vUqDwjqB80fr9hLc8N36dLFGzRokJkPMmvEfwAAALCqEf+5NCZwzpw5VTs/
kCaNd1QZrybiPwAAAFiaf61Pnz7VvgwAKdl22229wYMHV/syAAAAUAOq1f6n
nJVPPvmkd91115l+cd9+y7hO1C0//fSTd8YZZ3iXXHKJGeeq+U+qgfY/AAAA
WNWI/2644QavY8eOXsOGDb1NN93UGzBggBkrBdQlv//+u3feeed5a621lsn9
onGuigeVEyZLxH8AAACwso7/Lr/8clMXbt++vTdhwoRI+7799tsVzRuoNsYH
H3zQu+CCC7xDDjnEmzJlSuxjlaP53R566CEz1/krr7zi/fnnn6H2++yzz8x+
ipHHjh3r/fjjj6ldYzlx79dTTz3lXXnllZmP64xSPpRzVnMQDhkyxBsxYoT3
xhtvhN5P9+HOO+80763asOfOnVt2P+2jPDAq+4cddliocyWlWvFftcoBAAAA
ist6/velllrK1IFVLwxL82bvvffeXqNGjbwDDjgg8nlVt99ll11Me6Pq4Ntv
v703dOjQVPrjzZo1y9tzzz1z83zbpU2bNt6wYcOK7vfFF194vXv3LthPcfK1
116b+HWWUsn90nvVokULc+0zZ87M4Gqjl4/bb7/dvB/+e73ZZpuVzM95xx13
eJ06dfKaNWtm5rHs2rWrOafeo2uuuabsea+++mpzHu2T5Zwn1Yj/qlEOAAAA
UF6W8d8PP/yQq2u/+uqrZbfXnBCaN01zRNj9osR/3333nclto/q23VfXkJZv
vvnG69y5szmX6tw77rijt8IKK+SuXdcxatSogv3ee++93JyIxRa1B6at0vul
/o7du3fPXXPa9f445eOYY44peZ9XW201cx/8rr/+erN+9dVX9z788MPc65Mn
T/YWWmghs+7GG28seW61p9rzqH04K1nHf1mXAwAAEEzPtZ999tncEvT8WX3N
Jk2alLfdc889l+vfpN9xd50W1V3LnUvLW2+9VfTavvrqK++RRx4xY2X69+9v
8iWoD5zmiZMZM2Z4v/32W0J3Aq5qxX+lyoOov6Tmh1ebifoeRo3/VNfu1q2b
2Uf1c/VjTJva/dS+qX6ttr+nxnqdeOKJuevffffd8/bRduutt57XqlUr87d+
+eWXpi3wvvvu85Zbbrm82DHNenQS92vgwIF5sVSa1xunfCgHi7bZfPPNvZdf
ftm0Z2pudn3nqK3THuOggw7K209jUxdYYAGz7plnnik4rnJrap3er1KilP8k
ZR3/ZVkOAABAMOVaXHzxxfN+k88555yC7S688MLAZ+JXXXWVyWXXrl27gnWq
K7pU3/Wfy7aH6Lmw/7ouvfTSXD8h20/O1sXUr+qUU04x/a1UH0byajX+c02f
Pj1S/Kd2OM0tb+MmjdFKm+q4bdu2DXweos/E0ksvba5H/+8aM2aMeT0o3tL9
WnLJJXN/+2233ZbKtSdxv/SMR/uqT2TW9f6w5aNHjx5mCXqWpO8he4xll102
b52NG7UoPvdTG6BdX6r/aH2I/6pZDgAAQD7VNyZOnJir5zVv3jyvH5P8/PPP
ZhstGgujeoPa/+z8xa+//rq3xBJLmHx2djvlXPDTa3Z9r169zHPxTz/9NG8b
Pb/v2bOnuRbVFR5//PFcDkjNmfzEE09422yzTa4OoXwLSN78EP8ppooS/22w
wQa57ZVvMQvK71HqGYXanHQ9ij9carvaYYcdiu6nfp/2b9F7lYZK75fa0RQz
aZ45jVXMut4fpnwoLtNzpalTpwauV4xux6b64zjliLGv33333QX7uuttn4Ug
dT3+q3Y5AAAAwZRvXzFc06ZNTV6HYnbbbTcTl/ltuOGG3sYbbxzpfMpr4Xfx
xRebukG/fv0K2gVdypWn7UrlzkB8dS3+03MDu63G4oXNu5kmPT/RfBe6Jn8u
F+XWVH7QYtRP0f49Rx99dOLXlsT92nfffc34RbWNaT7HWoz/3nnnHe/0008v
eRz1J7XHcecjGTduXF7boL8NcKeddjLr1l133ZLHr+vxX7XLAQAACKZ4bIst
tvBOOukk89sclI9CisV/e+21V0EfNo0dUt1Jy8cff5y3TvUltXG4lLdB42m6
dOli2hxL0XN49TsNGneDytW1+E/tzXZb9R1W3VN9K5W/49577001/0sx6j+t
61GOStuWHpba3+3fk0Ye0Erv18iRI/P6r9Zq/BeGvhdtX3WXYmJ9V9lzrLrq
qt4HH3xg1qm91PaDL5fTqC7Hf7VQDgAAQDAb/ynXi/o7KT4LisGKxX8nn3yy
16RJk7w5jIcPH577rVe90VK9Se2MyuvisvVh5ZoJQ/lhkI4s4z/lVUwz/lPf
PnfMqerpNpelXdTv+dhjj81sDm6VdT3r0DOTr7/+OvL+mldA163PUdKfg0rv
1yeffGKezRx44IG51+bX+E9/X4cOHcwxlCPUT+XVHf+sccq2vVD94cPMH1hX
479aKQcAACCYjf9Ez/f1+6x8bX7F4j87h5V+8y31+1l44YW91q1bm75Qlsb8
BfXdVA5E1ReitoUgeVnGfxoXauuEmuc8rLD1e3esnBbNv6B2CY3LO+2003Lz
b9u2uLQot67Gibnj6rSozGtO7CjUpzCtsX+V3C87fldje9056ufX+O+xxx4z
++tvVr7hIBrjqVjKvWeKA0uN+XOpn7uenWm/559/PtZ1xpFm/FdL5QAAAARz
4z/ZaqutTH5NzdfrKhb/qb+oftPVL00Uw6l+sf/++5s5oxUD2vF8tu/a008/
nXcMzYm29dZbJ/2nIYYs47+LLrooN4YqirD1e7VN2+123XXXgvXqQ2zz+Gt5
4YUXIv8NYajca2ztJptsUjDPuMZHuWPLStHnRvson27YGCOKSu6X5mjRvHv+
Nvz5Nf6zuaiUA7kUOw+gv91UfdrDsPm39B2c1fOvNOO/WioHAAAgmD/+U91J
8Z/iQFex+E+5KvSbrj6f8tJLL5n/vueee8z8x268Z/uF+uc67tSpU2q5DBFN
FvGf+hernqi2D831EbUNLGz9Xu3Kdrvbb789cBu1Vdtt3P5qadG8KZqj3I0X
Bg0aVHY/PUPRXOSKv/zPT5IS935pnJuuKyifyvwY/9nvKfXnLNUvWH1xVYb1
vticL3ZRTq0wc7rr+9LOd6N+tf4czGlIK/6rtXIAAACC+eM/0e+3fqfVH9Qq
Fv9prjBtq7YcUb1CdSK1Tyj3i9ap75joWbqeDWueP5fiP/8cy5bqUMqn7l9u
vvlmMy82kpVm/KfxTppHRLkxVC40z3mpXJfFhK3f9+nTJ7fdI488EriNYk+7
TZQ8tpW64oorcufVvCblnHDCCWbbNOc9iXO/FMurvat79+4Fn2uZ3+I/xV9q
k9VnwO2/6GfHYWrMtO27rHw8bvvoKqusUjKXsTVr1ixv5513zu239tpr5/Wn
T1oa8V8tlgMAABAsKP7Tb7n65KluY+tAxeI/UU6I/v37m3+rTu/Wo1UHUn1G
Dj/8cHNMPz0/33LLLQOPrbnQ/P2r7KJc+UhW2u1/Dz/8sLfPPvuYfpCqKx91
1FGmTSyKsPX7s846K7ddsbnS7TOKOP1QK6G+fquvvro574orrlhy21tvvdVs
N3jw4FSvKc79euCBB8y/W7Zsaf4O/+L2d9X29vU0xY3/5syZY96TlVdeuWRu
HeUgbtWqlTn+iBEj8tapr69dp0XPqcoZMGCA+SyoHVBxvvrUa8xoWtKI/2qx
HAAAgGBB8Z/YcX2aF0JKxX8rrbSSGd+keR+UL9CNy9SnSfMsK9eh5gHWfIF+
2ldjmoJo7ne189nF9i9Nuy5cX2U1/k/1a5s7o2/fvpH2DVu/V93cbmfbp/1+
++233DZ6dpElPQ/Rebt161Z0G+UhCcqZm4Y490u5YYo9nym1pClO/Kd4a/PN
NzexifJUlXL++efnjh/UTqf8Vna9+suWor6/2k5zLZY7b1LSiP9qsRwAAIBg
xeI/UVymuuebb75ZMv7T/mussUZu3My0adNy68aMGZPrt6Z2Ps0X6Kd8o9pm
+vTpZa9X/UHT7gdXn2WZ/0U5MfVe6pmB4vywwtbvVQ7tdurbGETPJSoZK1YJ
9XnWeY8//vjA9Rrnp7b1U089tegx1N4U1N8ujjj3S3N7P/7440WX4447Lre9
xhTqtfHjxydyvcVEjf90/zR+b8kll8zN4+enZ1uvv/66+bfmg9Cx1WYXRH0m
bD/Qcnmt1Pfd3puspBH/1WI5AAAAwUrFfxoLo/qnxmyViv/69etnctnrWXfH
jh3z1qkvqXKoa51ygaqvk5+eoWvMYLGxIy7iv3RVa/4/f77ZUqLU7+083eqX
Nnfu3IL1yrtvj3XTTTcVnEfXmAb1/9TnSeedOHFiwfqXX37Z9JlT/9hinn32
WfN5c8eYVXrNldyvIEOHDi077kvn0TMmzR2QhCjlQ++D+iMrJtJ8JEGUA0a5
YGyfg1tuuSV3fPUFDaKxcFofNHegNXv27Nxx0so9GySL+d/9wpQDAACQjVLx
n5xzzjm53+1i8d8ZZ5xh1ivOC8qhqGfg9nm48gAEURuI1mteMT1rL4b4L11Z
xn9x579+8cUXc/tpnpFS3L54F198ccF6xVda58/VYXNhqm1Sddeo9LfpfJpT
LyiPiNpAdPxDDz20YJ1iIc2fqfXqa6j+1O5y7rnnenvssYcZZ6Y5G5K6Zol7
v4opV+9Xf247Xk7zpicRb0cpH7YPru6d/z5r0Xg89c/Vd5udp0N/hz1+0Fyp
6tts50q8//77i567rs7/HoT4DwCA6lOug0svvdSMd1l++eVNnVKL7eNkaVyM
xumXiv+U48D+tgfVd/7973/n1j/66KOBx9Czf/UN1TbKD6lrGT16tJl7Wfn1
VKdTnUVzBRL/pafW4z+117h9yZSvo1zfUT2TsHGR8prYnP7KRaO5ThR/uG1w
itc0ZtWeQ+uj9rFUjlq7v+rbV155pfl71V6ksXXqV60YTuPpXOp/qDa9MGOn
dI12nrkkrjnu/SqlXL1f44vdv6ncfHvlRCkf6osQdpyafxyfrlOv63647aDq
H6tcVloXNIeii/gPAABkSXM7uPVFu5x55pkF29oxfOqfGWTs2LFmveq06tPk
p7qNPX65MX6aN1D594rVwzbaaCNv5MiRodoeEF0tx39qy9EYLX+ZUD9J5Zj1
zzntUv3T5iBs3769ybehf/fo0SNwrm7lsHXPEaV/qihXUYcOHQquVf2ce/Xq
ZZ5nBFEOkrAxib/dvtJrdkW9X6WOU6rer3Fg+t6w2wSNDw4rSvkYN25c6Pus
ReMs/TQHhM1hpDkj1E6o/vKKj5VLtVxeW+I/AACAv6kf2DPPPGP6z6ktZcKE
CUXH2iA5tRz/VUptzOpbedddd5m8mqVy/GtbtT0feeSRJmaLkp/GUtu54ow7
7rjD5EfUuf3tfUlK4pr9xwt7vyqhuUL1XEjXHDR3eC3T+6nYUPdI+VOnTJlS
ct5AV32K/wAAAFCb6nL8F5Xq8crjofxG84v58ZpFOVXUDhilbXF+R/wHAACA
assy/nPzH6qdqZaorUv9nXv27JlaDtCkzY/XLBo/pz6Tmj+mPiH+AwAAQLVl
Gf8pV4fNC1trc4Ep/1D//v0Tm1svC/PjNauP6korrWTygNY3Gp9p4z/lNc4K
8R8AAACsLOM/WWeddUz9d4011jDj5YD64ogjjjBlX/Fvloj/AAAAYGUd/02b
Ns3kTlQ9WHNsa84P4kDUVZpLQ2V+v/32M2Ve8zwWywWbFuI/AAAAWFnHf6L8
j8qXv+aaa3qNGzf2WrduXa/ygKB+0Pzxir00N3yXLl28QYMGVSWnMfEfAAAA
rGrEfy6NCZwzZ07Vzg+kSeMdVcarifgPAAAAVrXjPwDpIv4DAACAddppp3l7
7LFHtS8DQEq22mor74orrqj2ZQAAAKAGVKv9T3MWPPnkk951111nxkV9++23
mV8D4nvsscfMGM4hQ4Z4b7zxRrUvByXQ/gcAAACrGvHfDTfc4HXs2NFr2LCh
t+mmm3oDBgwwuTIw/3j++ee9vffe22vbtq3Ja7nhhht6U6ZMqfZlIQDxHwAA
AKys47/LL7/cxAvt27f3JkyYUHZ7zQ2huOLOO+/0brrpJtNmOHfu3PQv1Of3
33/3hg8fHvvcat988MEHvQsuuMA75JBDUo2VNLf4Qw89ZO7XK6+84v3555+h
9vvss8/MforPx44d6/34449l9/ntt9+8Pn36mPdUeVzfe++9Si8fCcsq/otb
7gAAAJCdLOM/5UFcaqmlTKxw5ZVXlt3+jjvu8Dp16uQ1a9bMzBvftWtXr1Gj
RiZ2vOaaazK44nn9VG+++WZv2WWXNdf9ySefRNpffSN32WUX09apeQC23357
b+jQod7s2bMTv9ZZs2Z5e+65p7lOd2nTpo03bNiwovt98cUXXu/evQv2032+
9tpry55Xf0vnzp3NPgMHDkzyT0IC0o7/4pY7AAAAZC/L+O+HH37I1Q1fffXV
kttef/31ZrvVV1/d+/DDD3OvT5482VtooYXMuhtvvDG1a1Xcd+utt3rLLbdc
Xp02bPz33XffmXYxxava74ADDjB/f1q++eabXAym+v6OO+7orbDCCrnr1nWM
GjWqYD+11y2yyCIFdXd3UXtgOUceeaTZtm/fvin8dahEmvFf3HIHAADSN3Pm
TO/ZZ581S5i+Z6qf2+3durr2ta/7l3feecf01wvr5ZdfLnosu0yaNMnUxdP4
W/z0HFv9l5SP5LjjjjP1/2nTpuWdt66pVvz31ltvFd1OYwEXWGABs90zzzxT
sH7w4MFmnWKztNx2223eYYcdZtogO3ToECn+U1/Pbt26me0Vq6rfZ9rU/qK2
VfWptf3u/vjjD+/EE0/MXfvuu++et4+2W2+99bxWrVp5V199tffll1+atsD7
7rsvL+5VHb5c2T/22GMDz4HqSzP+i1PuAABA+n766SevXbt2efW5Dz74oOj2
ioNs/VuL+q19/fXX3r333luynUCL6pKqN+u5cCkaS1XuWHbR2K+k/xaX6iuq
HzVp0sRsY/vq2X222GILk++iZcuW3nPPPRfyrs8fajH+Gz16dG47xSR+agO0
6z///PM0L9n45z//GTr+U7lfc801c2VT4xXTpthMeViCxt6pbC+99NLmevT/
rjFjxpjXg+JTvVdLLrlk7u9WPFwK8V/tSiv+i1vuAABANl5//XVv6623ztVL
jzrqqKLbagyPjeXWX3997/333zevqx3u6aef9rp3727GYk2cODG3PPHEE6YN
4V//+pfZV+O2XnvttaLnUD4NHcs9xqqrrmpiEfc1xVu//PJL4n+LpWNvvPHG
ZpuNNtrI/B2q+2qsmur6559/fl7/OMXAdUktxn+aU8Bud/fdd5dc//3336d5
yYbNbxIm/ttggw1y255xxhmpX5uoDVxtdsVsvvnm5np69OiR97ry0Oywww5F
91O/T/u3qJyUQvxXu9KK/+KWOwAAkJ399tvPjM1QPgq1ZQXl3P/555+9hRde
2Ntkk028ddddN7B+qPmEFSsV88gjj5h4S+NCoox5Ul+0bbfdNtO/RX09VUfR
HAR6Zh1E7YvLLLMM8V+FwsZ/48aNy22nvCv+NsCddtrJrNN7moWw8Z+eHdjt
VPZrIf+hnmNorg1dkz+Xi3KRKk9jMeqfbf+eo48+uuR5iP9qVzXmfyhV7gAA
QHZszKQ2Nf0uq/7nZ5/5axxc3PhP9Juv42gcSFhx4r9K/pZ3333X9A3t2bNn
2fPdcsstxH8VChv/KW7q0qVLblu1C9s+vmpTs+PqyuWQSUrY+K9Xr1657U45
5RTTP059K5XLRuUmzfwvxVx11VXmejRXn+rkUdjPVpg6PPFf7apG/FdJuQMA
AMmxMZMo1lpiiSXM/F2WfqdXWWUVs43q4JXEfzqW+sKp76R7jlLixH+V/C2K
GVVHUd6actRPdJ999jG5PeqSLOM/5cQME/+J1rvjPJVLfrvttjP/Xmuttcy8
ClkJE/9NnTo1b8yqYlab+9MuzZs3N3FSsXbmpKkOrucbGn/lH/MahubY0HU3
bdrU++qrr0puS/xXu7KO/yotdwAAIDluzGRzuSjHpfXYY4+Z1zSOTyqJ/+Sy
yy4zxys1DtAVN/6L+7eo72h9z02QZfz39ttv52IhzTVejsYXqe7qxlCKA7MY
8+cKE/+5Y+W0KA/+yJEjzfio0047LS+fkNpE0qL8uxoz6Y5D1KJY+qmnnop0
LH1mwoz9E9suq3G5qC1ZxH9JljsAAJAcN2ZSG4TGKGl+NUt5LjXn89y5c81/
Vxr/ab4F1QHCzv8UN/6L+7csv/zypp5en2UZ/1100UW5MX1h2XkA/W1r/jw+
aQoT/5188sm5bXbdddeC9ZrHws1D+8ILL6RyreqzqTnmNeZVsbJ739QWHzRO
NohyM2mfxRdfPFS8rX6uNh+T9kXtyCL+S6rcAQCAZLkxk9gxGo8//rg3ffr0
XB4Uq9L476OPPjLHHDZsWKjrixv/SZy/RTlKw7Rt1GVZxH/Kw3PJJZeY+TVa
tGgRuj1A/Q+1z2qrrZbL+WIX9fdV+cpCmPhP/R7tNrfffnvgNvvuu29umwMP
PDDNSzY0V4o+J+59U76jcpSbV/dc8WqUWG633XbLxfePPvpo6H7fSFfW/T/j
ljsAAJA8f8yktjG1kamt7IADDjDjfNx+eZXGf8rZod9+d/6+UiqJ/+L8LYr/
tG19lmb8p3wnm222mcnVonKg97dUvkmXHXumuaXt+6gcJG4bmsZ3KlZJW5j4
z91G+W+DKO6122jOkaxcccUVufNus802Zbc/4YQTIn1uXffcc09e37+gvEzI
VjXyv0jUcgcAAJLnj5lEeQqLjUuqNP5TW5yOq36gYVQS/0nUv2Xttdc2cwLW
Z2m3/z388MMmb476hCl201yNah8oRXO6a/4QvY8jRozIW6d+Znadlptvvjm1
a7fCxH9nnXVWbptic6V//PHHuW2i9IGtlHIhqW+0zrviiiuW3FZjaLXd4MGD
I5/nzTff9FZeeWWz/zrrrOMNHTrUvIbqqlb8F6XcAQCAdATFTKpr2zYV5dtw
VRr/ae50HTds3vtK47+of4tyFiono+a1r6+yGv+n/JE2l0vfvn1LbmvLTbF4
S/2J7Xr1qUxbmPhPcardRuMcg6g/pN1GZT1Lhx9+uDlvt27dim6jnElqNz/v
vPMiH3/WrFneYostZs6h9w+1o1rxn4QpdwAAID1BMZMoP+dLL71U8Hol8Z/6
Yyq3ZpTnvpXGfxLlb7n//vsL8obWN1nmf1F+QJsjRPNpFHPMMceY7RTLB/nx
xx9zcX4W+SbDxH/Tpk3LbaPtgygXvt0m637HBx10kDnv8ccfH7he4/z0LOTU
U08tegy1vRZ7VqK2Ph1fOZWY7622VDP+K1fuAABAuorFTMVUEv+pn59+9zUe
KKwk4r9igv4Wxajqr6ZxSuXmI1Dbzf777+8dd9xxoc85P6jW/H/vvvtu0e1u
ueWW3HZq0w2iHKBar1jR77333jPnSkrY+d/tnPUtW7bM5Z11Pf/887nj3HTT
Tales0vxWNeuXc15J06cWLD+5ZdfNv1z9ZktRn24O3bsWHS8pT4XOn7v3r0T
u24ko5r9P0uVOwAAkL4s4j+N7bJ5DrVdFFnHf6J5xFVfV9391VdfDdx3zpw5
Zp4I/U3Veo6elizjP/UDtvFPqfnfZ86cmdtu4MCBBevVl9TOp6c2XJfNw6k2
RrVJJUFl0l5PqZyjbr/Uiy++uGC9fSbiz1tT6TXrvup8moNQbaN+ykeq4x96
6KEF6zQ+b+GFF87121S+Fnc599xzvT322MOMudQcF8Uw/3vtSiv+q6TcAQCA
dKmuqXnQNQZDuRhVp9MyadKkgm3VDqbxP1qvNgG1j6leqL5ratPQnO7Km6l5
wexxtCj/hXL021yPyvkRVCewtO7SSy/NO4aOu9JKK+W9Zs+d9N/i0hzdmpdA
fQrVjqH5CpW7dOzYsd6ZZ57pLbPMMqZuftJJJ9W5vm21GP/JhRdeaLZr1qxZ
XluZ3rstt9zSrPPPs6cy1bBhw9w5FLNUOrZT8Z7ah+0xy+XE1LwONpZTHhjN
TSnKg6O/RdfktoUkcc1DhgzJ7a+6/pVXXmnutdpONRZRY/oUw/nnY1AZV5ue
m6e/2KJrLDXnIvFf7Uor/otb7gAAQPo013Tjxo0L6nT9+vUr2Pacc84p2E7t
Y5q/WnVYt67qXzT2R3k3w/T5VLtNqWPZRfO/uW08Sf0tfsrNaNv4/Ity2Knv
Xl1Uq/GfaA4ImzNGc0gr5tcYNcVIet4QlEdU8yq4712pfqalTJ482VtzzTXz
5puwi8a0BpU3S214dg5szUnSuXNn8+8ePXoExlCVXvMXX3zhdejQIfCz06tX
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
vFRvv27dumbrrbe2tSiCnHvuuTbjZXLiiSfarBTk5ZdftnlL80IqMudJY9FO
OeWUUG0vvvhiO89EtTXUL5dp/QDl2Tp16phjjjnGHHbYYRmfdTXWU88oWoNA
n1lnov7FPfbYg/xXoLD5b9q0aV471V1J7wM844wz7D79TuMQNv/pswPXTvd+
Euof6nMMrbWha0qv5aJapKrTGETjs933c+2112Y9D/kvuUqx/kO2+w4AAMRL
+U/jGf/1r3/Z9+agufmF5D/Re76Or3kgYeWT/9Q/qPPoWTad67/QnL5M+W/x
4sV2bGjr1q1znu/JJ58k/xUobP5TbjrggAO8tuoXdmN81afm5tXlqiFTLGHz
X5s2bbx2t9xyix0fp7GVqmWj+ybK+i9BNHZb16O1+lw/fljubyvMMzz5L7lK
kf8Kue8AAEBxufynWi+at6/+FfWTpSs0/+k9X2PhNHZSa4SFkU/+c69Tn6b/
PDr//vvvb9soT2TKf8qMekZR3ZpcNE70wgsvtLU9Nidx5j/VxAyT/0T7/fM8
VUu+ffv29t+HHHKIXVchLmHy33vvvZcyZ1WZ1dX+dJvGXCsnBfUzF5uewfX5
huZfpc95DUNrbOi6NVbg+++/z9qW/Jdccee/Qu87AABQXC7/iavnkmnNrkLz
nzzwwAP2+NnmAfrlm//c96F6nc6kSZPs1zQnUTLlP40d/afXJogz/3366ade
FtJa47lofpGeXf0ZSjkwjjl/fmHyn3+unDbVwR8zZoydH9WjR4+UekLqE4mK
6u9qzqR/HqI2Zenp06dX6Fj6mwkz909cv6zm5SJZ4sh/xbzvAABAcfnznyjL
aX1tjYX0K0b+03oL2caYpss3/6k/RfOttFaco+9R61e7tSsy5b+9997bPqf/
k8WZ//r16+fN6QvLrQOY3reWXscnSmHyX7du3bw2Z599drn9WsfCX4f27bff
juRaNWZT83o151VZ2f9zU198pnmymag2k16jusFh8rbGubp6THotkiOO/Fes
+w4AABRfev5T7W7lP2U6v2Lkv2XLltn3/6effjrUteWb/8TNN3n11VfNRx99
5NV0cTLlP9UoDdO3sTmLI/9pfPF9991n19eoXr166P4AjT/Uaw488ECv5ovb
NN5X91ccwuQ/jXt0bUaOHJmxzUUXXeS1ueyyy6K8ZEtrpejvxP9zU72jXFSb
Vz9z5dWKZDn9N8Pl+1deeSX0uG9EK+7xn/nedwAAIBrp+U9uv/32crVNipH/
VLNDx/Wv35dNIflP/Xzq79P3dumll9o5S/4xhkH5T23/yaLMf6p3onVEVKtF
94F+v9nqTfq5uWeao+p+j6pB4u9D0/xOZZWohcl//jaqf5uJcq9rozVH4vLQ
Qw955z355JNztr/pppsq9HfrN3bs2JSxf5nqMiFepaj/IhW97wAAQDQy5T/1
z+gzez1rqy6MFCP/qS9O7/0aBxpGIflPVHMxaI5Vpvx36KGH2jUB/8mi7v+b
MGGCrZujMWHKblqrUf0D2WhNd60fot/js88+m7JP48zcPm3Dhg2L7NqdMPmv
V69eXpugtdKXL1/utanIGNhCqRaSxkbrvPvuu2/WtppDq3YDBgyo8HkWLVpk
9ttvP/v6Fi1amOHDh9uvobRKlf8qct8BAIDoZMp/ojl6ep/WuhBSjPyntdN1
zLB17wvNf8oNrn9ItUP8MuU/1SxUTUata/9PFdf8P9WPdLVcysrKsrZ1901Q
3tJ4YrdfYyqjFib/Kae6NprnmInGQ7o2utfjdPXVV9vzHnzwwYFtVDNJ/eZ9
+vSp8PFXrlxpdt55Z3sO/f6QHKXKfxLmvgMAANEKyn+i+ft6/tNn9oXmP43H
VG3NinzuW2j+E9Uafffdd8t9PVP+e+GFF8rVDf2nibP+i+oDuhohWk8jyHXX
XWfbKctnoj5ql/PjqDcZJv8tWLDAa6P2magWvmsT97jjyy+/3J73xhtvzLhf
8/z0Wcitt94aeAz1vQZ9VqK+Ph1fNZVY7y1ZSpn/ct13AAAgetny39KlS+0z
oOZsFZr/NM5P7/uaDxRWMfJfkEz5TxlV49U0TynXegTqu7nkkkvMDTfcEPqc
lUGp1v9Lrzfr9+STT3rt1KebiWqAar+yYjrVNNK5iiXs+u9uzfoaNWp4dWf9
5s6d6x1nyJAhkV6zn/KY/pZ13pkzZ5bbP2/ePDs+V3+zQTSGu169eoHzLfV3
oeO3a9euaNeN4ijl+M9s9x0AAIhHtvwnvXv39p5R88l/mtvl6hym1xTNJe78
J1pHXM/renb/4IMPMr527dq1dp0IfU+l+hw9KnHmP40DdvdWtvXfV6xY4bXL
tDalxpK69fTUh+vn6nCqj1F9UsWge9JdT7aao/5xqffee2+5/e4zkfS6NYVe
s36uOp/WIHTzd/1Uj1THv/LKK8vtU19/nTp1vHGbqtfi3+666y7ToUMHO+dS
a1wEYf335Ioq/xVy3wEAgOgpw9x///227oTGaOm5TtvChQtT2mkdX43ZzJT/
1KehNd1VN1PrgrljaFP9C9Xod7UeVfMj0zOBo326Hv8xdNxGjRqlfE3PpBo3
5+i5WWu6az6JzuXazZ49u9w51KenuUzar/4N9fWlH0+0RrfWJdCYQvVjaC6k
apdOmTLF3HnnnWaPPfawz+aaG7m5jW1LYv6Te+65x7bT2iT+vjL97k444QS7
L32dPd1TVapU8c6hzFLo3E7lPfUPu2PmqompdR1cllMdGK1NKaqDo+9F1+Tv
CynGNQ8dOtR7vZ71Bw4caH/W6jvVXESN6VaGS1+PQfe4+vT8dfqDNl1jtjUX
yX/JFVX+y/e+AwAA8dDaDv7nTLcp36SbPHmy3de8efOUr+sZNtMx3KZcqbqb
YcZ8qt8m27HcpvXf/H08Wjd7yy23LNeuc+fO5c7h78t0m/r6tBZ3OtVmdH18
6Ztq2Gns3uYoqflPtAaEqxmjNaSV+TU+WRlJnzdkqiOqdRX8v7ts40yzmTNn
jmnWrFnKehNu0+cjme43R314bg1srUnSsGFD++/DDz88Y4Yq9JpXrVpldtll
l4x/O23atDHvvPNOxte1bds2VPbTlm3MgJD/kiuq/JfvfQcAAJAkmoM1depU
u568+gG//vrrUl9SpJKc/0R9B6o78u9//9vW2FRd12z9yps2bTJffPGF6dq1
q30OzVZnJkq6Do2t1HWrrqbGrGZrW+g1q99+2rRpZtSoUbY/W+eOs9+F/Jdc
Uc7/K/V9BwAAgIpJev7Lh/Kh6sNk66NLmsp4zX7kv+QqZf1PAAAAJEuc+W/N
mjVe/otqXXD1s2nccuvWrSOrp1lslfGa05H/kov8BwAAACfO/KfaOW4+3euv
vx7JOVTrp0uXLgXXfYlTZbzmdB07drS/17KyslJfCtKQ/wAAAODEmf+kRYsW
Nic0bdrUzh1C5afaSaqfq9/r6NGjS305SEP+AwAAgBN3/luwYIGt5ams0L59
ezNx4kRyYCX1448/2rxXt25d+/u85JJLvPUukBzkPwAAADhx5z/55Zdf7PoN
Wl9Ba3lst912WdeWQ/L06NHD9vmp/r9yvNaG2dzWxtxckP8AAADglCL/+Skz
rF27tmTnR37++uuvSj1f8Z+E/AcAAABHa84dc8wxpb4MABFp1KiR6du3b6kv
AwAAAAlQ6v4/ANGi/w8AAABOqfKfxg5OnTrVPPbYY6Znz57mp59+iv0akL9J
kybZOZxDhw41H3/8cakvB1mQ/wAAAOCUIv8NHjzY1KtXz1SpUsUce+yxpnv3
7mb16tWxXgMKM3fuXNOpUydTq1YtW/uzZcuWZv78+aW+LGRA/gMAAIATd/7r
37+/zQu1a9c2M2bMyNlea0MoVzzzzDNmyJAhts9w/fr10V9oGtU70VoH+Z5b
/Zsvvviiufvuu80VV1wRaVZatmyZGT9+vP15vf/++2bTpk2hXvfNN9/Y1ymf
T5kyxaxbty7na/78809zwQUX2N+p6rguWbKk0MtHkcWV//K97wAAABCfOPOf
an3uvvvuNisMHDgwZ/tRo0aZ+vXrm6pVq9p14w866CCzxRZb2Ow4aNCgGK74
v+NUhw0bZvbcc0973V999VWFXq+xkWeeeabt69x2223NqaeeaoYPH27WrFlT
9GtduXKl6dixo71O/7b99tubp59+OvB1q1atMu3atSv3Ov2cH3300Zzn1ffS
sGFD+5rbbrutmN8SiiDq/JfvfQcAAID4xZn/fv31V+/Z8IMPPsja9vHHH7ft
mjRpYpYuXep9fc6cOWbHHXe0+5544onIrlW576mnnjJ77bVXyjNt2Pz3888/
234x5VW97tJLL7Xff1S0FrvLYHreP/30080+++zjXbeu46WXXir3OvXX7bTT
TuWe3f2b+gNzUR1ZtS0rK4vgu0Mhosx/+d53AAAgeitWrDCzZs2yW5ixZ3o+
d+39z+p6rft6+vbZZ5/Z8XphzZs3L/BYbps9e3a5dcaK9b2I1iIPOvc/YfxS
qfLfJ598EthOcwG32WYb2+7NN98st3/AgAF2n7JZVEaMGGGuuuoq2wepNc4r
kv801vPggw+27ZVVNe4zaup/Ud+qxtS6+3bjxo3m5ptv9q79vPPOS3mN2h1x
xBGmZs2a5pFHHjHfffed7QscN25cSu7VM7z+5rK5/vrrM54DpRdl/svnvgMA
ANH77bffzA477JDyPPfll18Gttd4Hvf8rU3j1n744Qfz/PPPZ+0n0KZnST03
63PhbDSXKtex3Ka5X8X+XpzWrVsHnldzzTZ3Scx/EydO9Nopk6RTH6Db/+23
30Z5ydZZZ50VOv/pvm/WrJl3b8ZxDymbqQ5Lprl3ehZv0KCBvR79r9/kyZPt
1zPlU/2udtttN+/7Vh7OhvyXXFHlv3zvOwAAEI+FCxeak046yXsuveaaawLb
ag6Py3JHHnmk+fzzz+3X1Q/3xhtvmObNm9u5WDNnzvS21157zfYhnHPOOfa1
mrf14YcfBp5D9TR0LP8xGjdubLOI/2tvvfWW2bBhQ9G/F0fP8+5celbfaqut
TJs2bczWW29tx+9t7pKY/7SmgGv33HPPZd2v/tuoufomYfLfUUcd5bW94447
Ir82UR+4+uyCtG3b1l7P4YcfnvJ11aE57bTTAl+ncZ/ue9F9kg35L7miyn/5
3ncAACA+F198sZ2boXoUNWrUyFhz//fffzd16tQxxxxzjDnssMMyPh+eeOKJ
5uijjw48z8svv2zzluaFVGTOk8ainXLKKbF+L+nXrecV9Yuoz6datWqRztlK
giTmv2nTpnntVHclvQ/wjDPOsPv0O41D2Pynz0BcO937SRg/rJo7WmtD15Re
y0W1SFWnMYjGZ7vv59prr816HvJfcpVi/Yds9x0AAIiPy0zqU9P7sp7/0rnP
/FXHO9/8J3rP13E0DySsfPJfod+L39lnn23q1q1rxy65LBhljZEkSGL+U246
4IADvLbqF3ZjfNWn5ubV5aohUyxh85/6jV27W265xY6P09hK1bLR2OlSfJbw
8MMP2+vRWn16Jq8I97cV5hme/Jdcpch/hdx3AACgeFxmEmUtZR2t3+XofXr/
/fe3bfQMXkj+07E0Fk61Bf3nyCaf/Ffo9+KoXqPmCd500032/ysD6pg69uYs
zvynn3GY/Cfa75/nqVry7du3t/8+5JBD7LoKcQmT/957772UuaPKrK72p9vU
n6ycpHsrDnoG1z2t+Vf+Oa9haY0NXbfGQn///fdZ25L/kivu/FfofQcAAIrH
n5lcLRfVuHcmTZpkv6Z5fFJI/pMHHnjAHi/bPEC/fPNfId+L4/orP/roI+9r
3bt3t1/79NNPQ11TZRRn/tPP0WUhrTWei+YX6dnVn6GUA+OY8+cXJv/558pp
Ux38MWPG2PlRPXr0sHWH3D71iURF9Xc1Z9I/D1GbsvT06dMrdCz9zYSZ+yeu
X1bzcpEsceS/Yt53AACgePyZSX0QmqOk9dWc448/3q75vH79evv/C81/WkNB
zwBh13/KN/8V8r042q+a/X5az0LXrxy4uYoz//Xr18+b0xeWWwcwvW8tvY5P
lMLkv27dunltNI44ndax8NehffvttyO5Vo3Z1BrzmvOqrOz/uakvPtM82UxU
m0mv2XXXXUPlbY1zdfWY9FokRxz5r1j3HQAAKC5/ZhI3R+PVV1+1/V7pWafQ
/Lds2TJ7zKeffjrU9eWb/yTf70U01lDtH3zwwXL7WrZsaesYxDVmL25x5D/V
4bnvvvtsbdXq1auH7g/Q+EO95sADD/RqvrhNY3N1f8UhTP7TuEfXZuTIkRnb
XHTRRV6byy67LMpLtrRWiv5O/D+3nj175nydavPqZ668WpEsd+6553r5/pVX
Xgk97hvRinv8Z773HQAAKL70zKS+MfWRqa/s0ksvtfN8/OPyCs1/qtmh937/
+n3ZFJL/8v1eRDlROSPTWnPDhg2z34PGk26Oosx/qndy3HHH2Vot+hnq95ut
3qSfm3umtaXd71FjdP19aJrfqawStTD5z99GtYMyUe51bVq1ahXlJad46KGH
vPOefPLJOdtrDmxF/m79xo4dmzL2L1NdJsSrFPVfpKL3HQAAKL70zCSqUxg0
L6nQ/Ke+OB1X40DDKCT/ST7fi2rDaJ1rjVs79NBDy22NGjWyx1PfxuYo6v6/
CRMmmAsvvNCOCVN201qN6h/IRmu6a/0Q/dyfffbZlH0aZ+b2aVM+j1qY/Ner
Vy+vTdBa6cuXL/faVGQMbKFUC0ljo3XefffdN2tbzaFVuwEDBlT4PIsWLTL7
7beffX2LFi3M8OHD7ddQWqXKfxW57wAAQDQyZSY9a7s+FdXb8Cs0//Xt29ce
N2zd+0LzXz7fy5QpU2z71q1b2zGGmTY901atWnWznMMS1/w/1Y90tVzKysqy
tnX3TVDe0nhit19jKqMWJv8pp7o2mueYicZDujZx15W9+uqr7XnT57j6qY9b
/eZ9+vSp8PFXrlxpdt55Z3sO/f6QHKXKfxLmvgMAANHJlJlE9Tnffffdcl8v
JP9pPKbqf1fkc99C859U9Hs5//zzbX2CbOMI3bg9jUnc3MRZ/0X1AV2NkA0b
NgS2u+6662w7ZflM1q1b5+X8OOpNhsl/CxYs8NqofSaqhe/aaIxynC6//HJ7
3htvvDHjfs3z0/oUt956a+Ax1Pf6999/Z9ynvj4df++992a9t4QpZf7Ldd8B
AIBoBWWmIIXkP43z0/u+5gOFVYz8FyTT97JmzRr7zNu1a9esr9XzrMbrNW/e
PPT5KotSrf+3ePHiwHZPPvmk1059upmoBqj2KyumW7JkiT1XsYRd/92tWV+j
Rg2v7qzf3LlzveMMGTIk0mv20/170EEH2fPOnDmz3P558+bZ8bn6mw2iMdyq
gxT0OckNN9xgj9+uXbuiXTeKo5TjP7PddwAAIHpx5D/N7XJ1DtWuIuLOf0OH
DrXXmam/MJ2b37Vw4cLQ56wM4sx/Ggfs8k+29d9XrFjhtbvtttvK7ddYUree
3gsvvJCyz9XhVB+j+qSKQfeku55sNUf941LvvffecvvdZyLpdWsKvWb9XHU+
rUGovtF0qkeq41955ZXl9ml+Xp06dbxxm6rX4t/uuusu06FDBzvnUmtcBGH9
9+SKKv8Vct8BAIBo6VlT66BrDoZqMeqZTtvs2bPLtVWtRc3/0X71CWjum54L
NXZNfRpa071+/fp2XTB3HG3KR5or52o9quZHpmcCR/vuv//+lGPouKq34v+a
O3cxv5evv/7a1qZTH5LqfrpjqH8m3Zw5c+w+1et34w31XBx2TmPSJTH/yT33
3GPbad6lv69M98IJJ5xg96Wvs6d7qkqVKt45lFmCxiuGpbynOpbumLlqYrr7
RFlOdWDcuiGqg6PvRdfk7wspxjW7zzG06Vl/4MCB9metvlPNRdScPmW49PUY
VJ9XfXr+Ov1Bm64x25qL5L/kiir/5XvfAQCA6Gmt6S233LLcM13nzp3Lte3d
u3e5dhrPpvWr9Qzrf1ZN3zT3R3U3w4z5VL9NtmO5TfnM38dTjO9F2S/TuTPV
vVBdmPR2tWrVMu+9914FfwvJlNT8J5pv6WrGaI6mMr/G6yoj6fOGTHVEta6C
/3eVbZxpNsr9zZo1S1lvwm2a05rpfnPUh+fWwNaaJA0bNrT/PvzwwzNmqEKv
edWqVWaXXXbJ+LfTpk0b884772R8Xdu2bUNlP21aVyUb8l9yRZX/8r3vAAAA
UDpJzn+ivgPVHfn3v/9ta2yqrmu2fmWt5/HFF1/YOZ16Ds1WZyZKug6NrdR1
q66mxqxma1voNf/xxx9m2rRpZtSoUWbcuHH23HH2u5D/kivK+X+lvu8AAABQ
MUnPf/lQPtTY3mx9dElTGa/Zj/yXXKWs/wkAAIBkiTP/qd6qy39RrQuufjbV
adW43ajqaRZbZbzmdOS/5CL/AQAAwIkz/6kevJtP9/rrr0dyDtXq6dKlS8F1
X+JUGa85XceOHe3vtaysrNSXgjTkPwAAADhx5j9p0aKFzQlNmza1c4dQ+S1f
vtxUr17d/l5Hjx5d6stBGvIfAAAAnLjz34IFC2wtT2WF9u3bm4kTJ5IDK6kf
f/zR5r26deva3+cll1zirXeB5CD/AQAAwIk7/8kvv/xi12/Q+gpay2O77bbL
urYckqdHjx62z0/1/5XjtTaMxvciech/AAAAcEqR//yUGdauXVuy8yM/f/31
V6Wer/hPQv4DAACAc8stt5hzzjmn1JcBICJai/3BBx8s9WUAAAAgAUrV/6e+
o6lTp5rHHnvM9OzZ0/z000+xXwPypzXtNYZ36NCh5uOPPy715SAL+v8AAADg
lCL/DR482NSrV89UqVLFHHvssaZ79+5m9erVsV4DCjN37lzTqVMnU6tWLVv7
pWXLlmb+/PmlvixkQP4DAACAE3f+69+/v80LtWvXNjNmzMjZXrVBlSueeeYZ
M2TIENtnuH79+ugvNI3mu6nWZb7nVv/miy++aO6++25zxRVXRJqVli1bZsaP
H29/Xu+//77ZtGlTqNd988039nXK51OmTDHr1q3L+Zo///zTXHDBBfZ3qjo+
S5YsKfTyUWRx5b987zsAAADEJ+7133fffXebFQYOHJiz/ahRo0z9+vVN1apV
7bqBBx10kNliiy1sdhw0aFAMV/zfcarDhg0ze+65p73ur776qkKv19jIM888
0/Z1brvttubUU081w4cPN2vWrCn6ta5cudJbh92/bb/99ubpp58OfN2qVatM
u3btyr1OP+dHH30053n1vTRs2NC+5rbbbivmt4QiiDr/5XvfAQAAIH5x5r9f
f/3Vezb84IMPsrZ9/PHHbbsmTZqYpUuXel+fM2eO2XHHHe2+J554IrJrVe57
6qmnzF577ZXyTBs2//3888+2X0x5Va+79NJL7fcfFa3F5zKYnvdPP/10s88+
+3jXret46aWXyr1O/XVuPcagTf2BuXTt2tW2LSsri+C7QyGizH/53ncAACB6
3377rZk1a5a3ZVpzW+O9Zs+endLurbfeShnzpnFr/v3+7bPPPqvQWt7z5s0L
PJbbdD3pdeZXrFjh7Q8zjk5Zw7X3545s34v7fjTub3NWqvz3ySefBLbTXMBt
ttnGtnvzzTfL7R8wYIDdp2wWlREjRpirrrrK9kFqjbuK5D+N9Tz44INte2VV
jfuMmvpf1LeqMbVu3J3WYr/55pu9az/vvPNSXqN2RxxxhKlZs6Z55JFHzHff
fWf7AseNG5eSe/UMr7+5bK6//vqM50DpRZn/8rnvAABA9JSfdt1115TP9Hv3
7l2u3T333JPx8/+HH37Y7n/++eez9hNo07Oknpv1uXA2mkuV61hu09wv57ff
fjM77LBDyrPpl19+GXgejU1yWUKbxuD98MMPob4X1/6aa66xa5ZvjpKY/yZO
nOi1UyZJpz5At1+fa0TtrLPOCp3/dN9rXXt3b2q+YtSUzVSHJdPcOz2LN2jQ
wF6P/tdv8uTJ9uuZ8ql+V7vttpv3fSsPZ0P+S66o8l++9x0AAIiHnrdnzpzp
PZtWq1YtZVyd/P7777aNtuOOO84+N6j/T/O2RDnyjTfeMM2bN7dzsVxbba+9
9prtQ9Bacjq+5m19+OGHgdejfjUdy3+Mxo0b2yzi/5rOv2HDhpTXLly40Jx0
0kneM7byWRDNR3K59MgjjzSff/55yvcycuRIu1/PR/7zTp8+3c7T0nwt7W/V
qlW569gcJDH/aU0B1+65557Luj+OXO7qm4TJf0cddZTX9o477oj82kT92Oqz
C9K2bVt7PYcffnjK11WH5rTTTgt8ncZ9uu9F90k25L/kiir/5XvfAQCAeKne
ft26dc3WW29ts02Qc88912a8TE488URz9NFHB7725ZdftnlL80IqMudJY9FO
OeWUUG0vvvhiO89EtTVq1KiRcf0A5dk6deqYY445xhx22GEZn3U//fRT+4yS
7TlGtUrUJq6aI3FKYv6bNm2a1051V9L7AM844wy7T7/TOITNf/oMxLXTvZ+E
+of67EZrbeia0mu5qBap6jQG0fhs9/1ce+21Wc9D/kuuUqz/kO2+AwAA8VL+
O/74482//vUv+94cNDe/kPwnes/X8TUPJKx88p/6B3UePcumc/0XqkleSP4T
9WeeffbZ4b6RSiSJ+U+56YADDvDaql/YjfFVn5qbV5erhkyxhM1/bdq08drd
csstdnycxlaqlo3GG0dZ/yWIxm7rerRWn+vHD8v9bYV5hif/JVcp8l8h9x0A
ACgul/9U60Xz9tW/on6ydIXmP73nayycagtqjbAw8sl/7nXq0/SfR+fff//9
bRvliULzn+ZCaR7Y5ibO/KeamGHyn2i/f56nasm3b9/e/vuQQw6x6yrEJUz+
e++991LmjSqzutqfbtOYa+UkzY2Kg57BNfdV868057Wi1N+t69ZYge+//z5r
W/JfcsWd/wq97wAAQHG5/CeuBkqmNbsKzX/ywAMP2ONnmwfol2/+c9+H6vU7
kyZNsl/TnEQpJP89+OCDtk2YOviVTZz5z/2stWmt8Vw0v0jPrv4MpRwYdy2e
MPnPP1dOm+rgjxkzxt5XPXr0sHWE3D71iURF9Xc1Z9I/D1GbsrTmtFaE/mbC
zP0T1y+reblIljjyXzHvOwAAUFz+/CfKclpfe/HixSntipH/tIZCtjGm6fLN
f+pP0XwrrRXn6HvU+tVu7Ypc+e/ee++1dWXcNnfuXFt31NWZUT2ciqxtUVnE
mf/69evnzekLy60DmN635ur4xCFM/uvWrZvXJtM4Ya1j4a9D+/bbb0dyrRqz
qXm9mvOqrOz/uakvPtM82UxUG0mvUd3gMHlb41xdPSa9FskRR/4r1n0HAACK
Lz3/qXa38p8ynV8x8t+yZcvs+//TTz8d6tryzX/i5pu8+uqr5qOPPrL/7t69
u7c/V/7Ltm211Vab7TNtHPlP44vvu+8++3OsXr166P4AjT/Uaw488ECv5ovb
NN5X91ccwuQ/jXt0bVRTNpOLLrrIa3PZZZdFecmW1krR34n/59azZ8+cr1Nt
Xv3MlVcrct/rvxku37/yyiuhx30jWnGP/8z3vgMAANFIz39y++232/dojaN0
ipH/VLNDx/Wv35dNIflP/Xzq79P3dumll9o5S/4xhrnyn/pv1IfhNo1lUs0L
1T3ceeedTZUqVew40M1NlPlP9U7Ub6paLfoZ6/ebrd6kn5t7pjmq7veo34e/
D03zO5VVohYm//nbqP5tJsq9ro3WE4nLQw895J335JNPztn+pptuqtDfrd/Y
sWNTxv5lqsuEeJWi/otU9L4DAADRyJT/1D+jz+z1rK26MFKM/Ke+OL33axxo
GIXkP1HNxaA5VoXM/9O6f3pt+hzDzUHU/X8TJkwwF154oR0TpuymtRrVP5CN
1nTX+iH6eT/77LMp+zTOzO3TNmzYsMiu3QmT/3r16uW1CVorffny5V6bioyB
LZRqIWlstM677777Zm2r+1vtBgwYUOHzLFq0yOy333729S1atLDrZ+prKK1S
5b+K3HcAACA6mfKfaI6e3qe1LoQUI//17dvXHjNs3ftC859yg+sfUu0Qv0Lr
f2q9eOXjdu3ahbq+yiKu+X+qH+lquZSVlWVt6+6boLyl8cRuv8ZURi1M/lNO
dW00zzETjYd0bXSvx+nqq6+25z344IMD26hmkvrN+/TpU+Hjr1y50vaT6xz6
/SE5SpX/JMx9BwAAohWU/0Tz9/X8p8/sC81/Go+p+t8V+dy30PwnqjX67rvv
lvt6oflPzj//fLue/OYkzvovGlPraoSoTzXIddddZ9spy2eiPmqX8+OoNxkm
/y1YsMBro/aZqBa+a6MxynG6/PLL7XlvvPHGjPs1z0/rU9x6662Bx1Dfqz4H
yUR9fTr+3nvvzXpvCVPK/JfrvgMAANHLlv+WLl1qnwE1Z6vQ/Kdxfnrf13yg
sIqR/4IUmv+0hqBqYqi++eakVOv/pdeb9XvyySe9durTzUQ1QLVfWTGdahrp
XMUSdv13t2Z9jRo1vLqzfqop644zZMiQSK/ZT3lMf8s678yZM8vtnzdvnh2f
q7/ZIBrDXa9evcD5ljfccIM9/ubWP745KOX4z2z3HQAAiEe2/Ce9e/f2nlHz
yX+a2+XqHKbXFM0lqflPz7yuT6p///6hz1kZxJn/NA7Y3VvZ1n9fsWKF1y7T
2pQaS+rW03vhhRdS9rk6nOpjVJ9UMeiedNeTreaof1yq1hNJ5z4TSa9bU+g1
6+eq82kNQjd/10/1SHX8K6+8stw+9fWrT9uN21S9Fv921113mQ4dOtg5l6qR
FIT135MrqvxXyH0HAACit3btWnP//ffbuhMao6XnOm1a685Pa9xpzGam/Kc+
Da3pXr9+fbsumDuGNtW/UI1+V+tRNT8yPRM42qfr8R9Dx23UqFHK1/RMqnFz
jp6btaa75pPoXK7d7Nmzy51DdSM1l0n71b+h2hTueO57cfNTzjzzzJTzuk3P
LsqZroad+gE3J0nMf3LPPffYdlqbxN9Xpt/dCSecYPelr7One0p1Wt05lFmC
xiuGpbynOpbumLlqYmpdB5flVAdGa1OK6uDoe9E1+ftCinHNQ4cO9V6vZ/2B
Awfan7X6TjUXUWO6leHS12NQfV716fnr9AdtusZsay6S/5IrqvyX730HAADi
obUd/M+ZbrvzzjvLtZ08ebLd17x585Sv6xk20zHcplypupthxnyq3ybbsdym
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
rSuvNWf0NcQvivyXhPsVAABUjMZ36r25b9++3teUBTQ+T/022TRq1Miceuqp
dt0HzfHxf66v2n+aK6R15LUOsNYLTJcp/ymHKh/ompRD/ch/0Ylr/p9qZeo5
VL/fsrKyCr22lPlPtYgy1bAttnHjxpWruRJmKxbN41WNz6CfsTLgAQcc4J33
yy+/DDyWxpBqfnH6f19QGlHkv1LfrwAAID/6nF/jvfTst3bt2qx1X/w0TrNp
06be/L4FCxZ4+yZPnuyNk9N8Ka0XmC5T/pMPP/zQzidMR/6LTpz1X5577jmv
LsiGDRtCv65U+U/z/NTXrTVTgqjGUabxbxWlNbM1/zVoc31z2kaOHGm/9vrr
rxd8Xkfjt93xg8Zpaly3azN37tzAY6mvT23cf1tQWlHkv1LfrwAAID+qyaH3
5xkzZnjrrWd7rnM6d+5s5/No3QetJ++neSHbbrut3ac5hv46Lk5Q/gtC/otO
qdb/W7x4cejXVTT/qb3OVYh58+bZMWwarxpk1qxZ9v7319EtxrkzcZkq23yq
Qs/doEEDe/ygtS388/lWr14deBz37N+uXbu8rwXFE8f67+nC3K8AACB+q1at
srVbND9LGSBb3Rc/t76Xcp5/zV9H6365sZyqA5CO/JccceY/jSt2z4QVWf/9
nXfe8V6Xq39aa467PkY9g+ZD89S0nqUbv6j+MP9211132flw6i/v1q1bUc8d
JNfzdDHOrc91dIxatWrZOk/pbrzxRrs/138nWP89Wch/AADA7/TTT/fepwcN
GhTqNcOGDfNe88ILL5Tb/+CDD3r7VfvdUT+JasscfPDBtiaknqO1pa8dJar/
qTlX2q9+GNWS0LO45hWieJKe/zR+0D+WTOtEBo0d1dqVmnvq2iqfVXRspua1
qU8vzFwmnevzzz8v2rmzyfY8Xaxzq9anPpfRMY4++uiUGrzq+9M8SH2ukz4/
Nx35L1nIfwAAwG/8+PH2PTpM3RdnypQp9jV6HlTN+HR6tnfv/VrPz3n77bdt
zdH052j1O6Tr3bt3uXaqNffmm2/m/82inCTnP/X1pa9Drk2fB6jGbKbPDVSL
1t+2IuNMpW3btqFrWWgebDHPnU2u5+linVt1mPQzUJ7U36rm8O6xxx72mKrl
FGZ8OPkvWch/AAAAcJKc//KxadMm88UXX5iuXbvasc0VqTPDuf9n2bJltu/+
ySeftJ/36P+HRf5LllLkPwAAACTT5pb/ROMhtTZ1pn7lqP1Tz+1H/ksW8h8A
AACcOPOfxgq7/BfVWuBaZ7B58+amdevWkdTh5Ny5kf+ShfwHAAAAJ878p1ou
ri5sVGuBqV5Qly5dilp7hXNXTMeOHe3vuKysrNSXAkP+AwAAwP/Emf+kRYsW
Nhs0bdrU/PHHH7GdF/FYvny5rSWl3/Ho0aNLfTkw5D8AAAD8T9z5b8GCBWan
nXay+aB9+/Zm4sSJ5MDNgNYLVN6rW7eut07jxo0bS31ZMOQ/AAAA/E/c+U9+
+eUX06tXL9OsWTO7xsB2223nraOHyqdHjx62z2+XXXaxmX7ChAl2rC+SgfwH
AAAApxT5z085Ye3atSU7Pwr3119/JWLeITIj/wEAAMApdf4DEC3yHwAAAJxb
brnFnHPOOaW+DAARadOmjXnwwQdLfRkAAABIgFL1/2m84NSpU81jjz1mevbs
aX766afYrwHFMWnSJDufc+jQoebjjz8u9eUgDf1/AAAAcEqR/wYPHmzq1atn
qlSpYo499ljTvXt3s3r16livAcUzd+5c06lTJ1OrVi1b+7Nly5Zm/vz5pb4s
/H/kPwAAADhx57/+/fvbjFC7dm0zY8aMCr32008/jWzd+CDffPONGT9+vM2s
U6ZMMevWrYv1/H7Tp083AwcOjKVejr7vV1991fbPjh071nzyySc5X/Pnn3+a
Cy64wP5+VdN1yZIlkV8ncitV/ovzfgUAAEA4ceY/1frcfffdbT7Qc2FYixcv
tv1LW2yxhbn00ksjvML/WbVqlWnXrp29Vv+m3Proo4/Gcg1++hm4ddVXrFgR
2Xm+/vprm+HUN1u/fn3bl1enTh173uOOO858++23WV+/Zs0a07BhQ9v+tttu
i+w6EV4p8l9c9ysAAAAqJs789+uvv3o56oMPPsjZXmsCXnzxxXaNQPe6OPKf
+q3cGvVBm/oD46L1FZo3b+6dO6rnaf1+GjVqZM+hflq3ht/vv/9uOnfubL/e
uHFju35jNl27drVty8rKIrlOVEzc+S+u+xUAAGSn5+1Zs2albJlqbnz//ffl
2s2ZM8c+C+p9PH1fpjFe6iNIb+fGj6Xv++OPP8q9XmPsZs+endLurbfeMuvX
ry/+D+YfrlT5L9d4wk2bNtm1xB955BFzxRVXxJb/dN4jjjjC1KxZ0577u+++
s32B48aNM3vttZd3HeqLjOu5Vv1o/uwZ1Xlvvvlme3zVi0y3YcMGU7duXbt/
1KhRWY9z/fXX23bnnXdeJNeJiok7/8V1vwIAgGATJ07M2Idx9dVXl2vboUOH
jG0192mHHXYo9/Udd9wx5fUbN240u+66a7l2egZRP0L6vt69e5e7hnvuuSfj
NTz88MOR/Yz+qZKa//w++uij2PLf5MmT7XlefPHFcvt0/bvttpt3LSNGjIj0
WkSffShrHnTQQZE/T7do0cIe/6qrrsq4/8QTT7T7dc9kQ/5LljjzX5z3KwAA
CKY+jTfffNOcdNJJ9v34lVdeMTNnzszY9/bDDz/YfS+//LJte+aZZ3pj9RYu
XGj7AA455BDbRptqcqTT19x+9SWo30TzikTP/fp6s2bN7PGrVatmli5dmvJ6
5UT3es050vOL+v/ceDQUT2XIf+pjjiv/qa/xtNNOC9yvcZ/uWnLloEJpLt2e
e+5pTjnlFDvnMOrnaTc3s0mTJva/GUH7r7vuuqzHIf8lS1z5L+77FQAA5Ob6
AYcPH56zrdbyUluN/fRTPYhWrVqFPqfq+6uORqavK0tuvfXW5tRTTw18/bnn
nms/S0Y0yH+p7r77bvP+++8H7p83b553Lddee22k13LRRRfZeYgag6o6nFE/
Tx999NHeOfr165eyT58BuX1a7y8b8l+yxJX/4r5fAQBAbhqbqXXXjjrqqJxt
NX9f/QDpzj//fNOgQYOUr2keoeZqaVu+fHnKPn0erD6VdMp/xx9/vPnXv/5l
nxFeeumljNdB/osW+a9i1A/triXKOqBjxoxJGYcax/P06NGjU8ZbKwOqz139
83vssUfonz/5L1niyH+luF8BAEA4t956q31PzjRu03nvvfdsG9W/SNetWzez
1VZb2Szp+J8bH3/8ce/rGkOm/r0+ffqUO47Lf6r1onFlyoka95mO/BetOPPf
zz//XOnz36BBg+x16L5WraQofPXVV3au7WWXXeZ9La7n6SuvvDIlA6pPUOtA
VK1a1c7VDTMGm/yXLFHnv1LerwAAIDf3LK1af0HUX6d5eZnqvCsT6vV6z3c0
7kdrhGnN5zPOOMP7uub8qe3TTz9d7jgu/8nzzz9v22VaL4z8F604858+c3DP
hFpfPKwk5b/DDjss0rl/+sykdevWds6sf635uJ6n9bnO5ZdfXq720gMPPBD6
GHfccYd9jeYbo/SizH+lvl8BAEA4mr+3884723Wa0uk9XLXvL7nkkoyv1ThN
vadrHJyoP0DPF2qvWjHKgO64bqzcG2+8Ue44/vwnqi2oPgatG+xH/otWnPlP
4wl1P6ivtyKSkv90H+saVMM21xp4+brvvvvseoda/8Qvzufp3377LaXOqTat
B5+pHz8TjQHUa1QHMtPfPuIVZf5Lwv0KAABye+qpp+z78n/+859y+5544omM
dV8c1cbQfo35lHfffdf+/7Fjx3qvdc98blzosmXLyh0nPf/pGV/5TznQj/wX
rTjyn8b16jlR44arV69upk+fXqHXJyH/6TONAw880GyzzTaRZRrVWNHxb7/9
9nL74nqeXrlypb0f3DoQWt/FnwNvueWWUMfR363L+qo3/Oeff0Z2zcguqvyX
hPsVAACEo3XU1U+nei3ptLZDtrz1448/ptQH1HOFnuvVH6LaL9rXo0cPu0/r
+Omz4b///rvccdLzn+g5Qq/XeFCH/BetKPOf6r1o/Q6XIbSuerbamkGSkP9u
uukme/5nnnkmkuMrIzdu3NjWXcr09xLH87Tq9++99972HC4vaJy3fm/+DJhr
/XdHnwm512h+mGqrIn5R5L8k3K8AAKBiNFdf2ezbb7/1vjZ//vzAui9+mhvY
pUsX+289G/rXg9h///3NoYceav+t9eVV2yWTTPlPzxTqL9Br3FwS8l+0ou7/
mzBhgrnwwgvN9ttvb/sKrrnmGju+sCJKnf9cf/mAAQMiO4f64nWOGjVqmH33
3bfcpp+f+xnob8R9vZhuuOEGe3z9Dfup765Dhw4p5/fXf8pk0aJFZr/99rPt
ta681pzR1xC/KPJfEu5XAABQMRrfqffmvn37el9TFtD4PPXbZNOoUSO7Zp/W
fdAcH//n+qr9p7lCWkde6wBrvcBMMuU/cfMLtS6EkP+iFdf8P9XK1HOofrdl
ZWUVem0p85/WuguqYVtM48aNK1dzJcxWLJrHq/HXQT9jZcADDjjAO++XX34Z
eCyNIdX84vT/vqA0osh/pb5fAQBAfvQ5v8Z76dlv7dq1Weu++Cm3NW3a1Jvf
t2DBAm/f5MmTvXFymi+l9QIzCcp/omypZ271F5D/ohVn/ZfnnnvOqwuyYcOG
0K8rVf7TPD/1dWvNlCCqcZRp/FtFac3sV199NXBzfXPaRo4cab/2+uuvF3xe
R+O33fGDxmlqXLdrM3fu3MBjqa9Pbdx/W1BaUeS/Ut+vAAAgP6rJoffnGTNm
mMGDB+d8rnM6d+5s5/No3QetJ++nMZzbbrut3ac5ht27d894jGz5T+tN67lb
c8fIf9Eq1fp/6XVes6lo/lN7nasQ8+bNs2PYNF41yKxZs+z976+jW4xzZ+Iy
Vbb5VIWeu0GDBvb4QWtb+OfzrV69OvA47tm/Xbt2eV8LiieO9d/ThblfAQBA
/FatWmVrt2h+ljJA2Jzl1vdSzvOv+eto3S/N9VIb1QHIJFv+E6017Z4fyH/R
iTP/aVyx+51WZP33d955x3tdrv5prTnu+hj1DJoP9TtrPUs3flH9Yf7trrvu
svPh1F/erVu3op47SK7n6WKcW5/r6Bi1atWydZ7S3XjjjaH+Hln/PVnIfwAA
wO/000/33qcHDRoU6jXDhg3zXvPCCy+U2//ggw96+1X73U/jTO+//35bE0Dj
w/QsrW3hwoUp7f744w9bL4D8F62k5z+NH/SPJWvSpEng2FHVDNLcU9dW+ayi
YzM1r019emHmMulcn3/+edHOnU225+linVu1PvfZZx97jKOPPtp888033j71
/WlMtj7XUZ2obMh/yUL+AwAAfuPHj7fv0WHqvjhTpkyxr9HzoGrGp9OzvXvv
/+ijj1L2aW0H/7Oq2+68885yx3FzCVVjHNFIcv5TX1/6OuTaNC5TNWbT15wW
1aL1t63IOFNp27Zt6FoW6f3XhZ47m1zP08U6t+oB62egv1HVB9Yc3j322MMe
U7WcwowPJ/8lC/kPAAAATpLzXz42bdpkvvjiC9O1a1c7trkidWY49/8sW7bM
9t0/+eST9vMe/f+wyH/JUor8BwAAgGTa3PKfaDyk1qbWfLa4/VPP7Uf+Sxby
HwAAAJw485/GCrv8F9Va4FpnUOOFW7duHUkdTs6dG/kvWch/AAAAcOLMf6rl
4urCRrUWmGoJdenSpai1Vzh3xXTs2NH+jsvKykp9KTDkPwAAAPxPnPlPWrRo
YbNB06ZNbY1XbF6WL19ua0npdzx69OhSXw4M+Q8AAAD/E3f+W7Bggdlpp51s
Pmjfvr2ZOHEiOXAzoPUClffq1q3rrdO4cePGUl8WDPkPAAAA/xN3/pNffvnF
9OrVyzRr1syuMbDddtt56+ih8unRo4ft89tll11spp8wYYId64tkIP8BAADA
KUX+81NOWLt2bcnOj8L99ddfiZh3iMzIfwAAAHBKnf8ARIv8BwAAAEfrhbdq
1arUlwEgIvvuu6/p27dvqS8DAAAACVCq/j+NF5w6dap57LHHTM+ePc1PP/0U
+zUU26RJk+y8xqFDh5qPP/641JcDWPT/AQAAwClF/hs8eLCpV6+eqVKlijn2
2GNN9+7dzerVq2O9hijMnTvXdOrUydSqVcvWwGzZsqWZP39+qS8L/3DkPwAA
ADhx57/+/fvbbFS7dm0zY8aMnO03bdpkFi1aZMaMGWNGjhxpvvnmm+gvMgPV
ONH6BuvXr8/Z9s8//zQXXHCB/T5V23TJkiUxXCGQWVz5T3+b48ePt5/vTJky
xaxbty7ycwIAAKBi4sx/qvW5++6721w0cODAnO2V+4444gjbXuvKNWjQwFs7
/qOPPorhiv87TnXYsGFmzz33tOf+6quvQr1uzZo1pmHDhvY1t912W8RXCQSL
Ov+tWrXKtGvXzt7r/k2f8Tz66KORnRcAAAAVF2f++/XXX71nww8++CBrW82f
q1Gjhm1755132n5AUR+gvqZn2oULF0Z2rcp9Tz31lNlrr71SnmnD5j9RbR29
pqysLLLrBHKJMv+pb3unnXYql/38m/oDAQBAMui9e8iQIebGG2+0c7CeeeYZ
7/l2xYoVga/T+t2zZs3KuLnndFQOpcp/n3zySWA73UMHHnigbXf44YebjRs3
puw/99xzvT7BDRs2RHKtI0aMMFdddZUZNWqUXdc8n/x3/fXX29ecd955kVwj
EEZU+U9/p+qfr1mzpnnkkUfMd999Z/sCx40bl/K5yRZbbJH1/QQAAERP85O6
dOlittpqK/v+vPXWW5uqVavaf1erVs306dPH1rB45ZVXMr6+devWgZ/1qqYj
Ko8k5j89P7p2+kwi3ezZs739ymlRO+uss8h/qLSiyn+TJ0+29/eLL75Ybp/+
1nfbbbdY/04BAEAw9WvoPfnEE0807777ru1f0dwszak655xzvPds9Q1momfg
mTNn2k15TzmyTZs2Nkeq7gUqjyTmv5NPPjlr3lItlurVq9v9LVq0iPKSLVfL
hfyHyiiq/HfFFVeY0047LXC/xn26vxv9dwYAAJTG8uXL7fvx8ccfX25cneOe
d5944omcx3v55ZdtW30WrH4S9R/qOR+VQxLzn8Z1qo1qrgTR5w3uWIsXL47i
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
1lNJwrxDwI/8BwAAAOe6664zJ5xwQqkvA0BE1M/er1+/Ul8GAAAAEqDU/X8A
okX/HwAAAJxS5T+Nk5w6dap57LHHTM+ePc1PP/0U+zUU26RJk+y8xqFDh5qP
P/641JcDWOQ/AAAAOKXIf4MHDzb16tUzVapUMccee6zp3r27Wb16dazXEIW5
c+eaTp06mVq1atnany1btjTz588v9WXhH478BwAAACfu/Ne/f3+bjWrXrm1m
zJiRs/2mTZvMokWLzJgxY8zIkSPNN998E/1FZqDaLlrXYf369Tnb/vnnn+aC
Cy6w36dqmy5ZsiSGKwQyiyv/6W9z/Pjx9vOdKVOmmHXr1kV+TgAAAFRMnPlP
tT533313m4sGDhyYs71y3xFHHGHbaz29Bg0aeGvHf/TRRzFc8X/HqQ4bNszs
ueee9txfffVVqNetWbPGNGzY0L7mtttui/gqgWBR579Vq1aZdu3a2Xvdv+kz
nkcffTSy8wIAAKDi4sx/v/76q/ds+MEHH2Rtq/lzNWrUsG3vvPNO2w8o6gPU
1/RMu3DhwsiuVbnvqaeeMnvttVfKM23Y/Cddu3a1rykrK4vsOoFcosx/6tve
aaedymU//6b+QAAAkAx67x4yZIi58cYb7RysZ555xnu+XbFiRcbXaD7TrFmz
ArfPPvvMjpVD5VCq/PfJJ58EtlPWO/DAA227ww8/3GzcuDFl/7nnnuv1CW7Y
sCGSax0xYoS56qqrzKhRo+x67vnkv+uvv96+5rzzzovkGoEwosp/+jtV/3zN
mjXNI488Yr777jvbFzhu3LiUz0222GKLwPcTAAAQD81P6tKli9lqq63s+/PW
W29tqlatav9drVo106dPH1vD4pVXXkl53fPPP5/1c163bbvttuaaa64xv/zy
S4m+Q4SVxPyn50fXTp9JpJs9e7a3XzktameddRb5D5VWVPlv8uTJ9v5+8cUX
y+3T3/puu+0W698pAAAIpn4NvSefeOKJ5t1337X9K5qbpTlV55xzjveerb5B
P42Je+ONN7wxeHqmmDlzprdNnz7dDB8+3Jx66ql2f6tWrSLrn0FxJDH/nXzy
yVnzlvqXq1evbve3aNEiyku2XC0X8h8qo6jy3xVXXGFOO+20wP0a9+n+bvTf
GQAAUBrLly+378fHH398uXF1jnvefeKJJzLu//TTT+1+9dMEUX0PtRk0aFBR
rhvRSGL+07hOtVHNlSBt2rTxjrV48eIoLtdD/kNlFlX+u/vuu837778fuH/e
vHne3821115b9PMDAIBwnn32Wft+rDrdQfSerjaqf5FJmPwn9evXN2effXYh
l4uIJS3/aR1410ZrAwbp3Lmz107rrkeJ/IfKrFTr/7311lve3w11QAEAKJ0X
XnjBvh/rf7NR3YugsZth85/mf2juFJIrzvz3888/58x/Gkfs2pxxxhmBx3LZ
Kls/dbGQ/1CZlSr/aeyHm1/+/fffx35+AADwX6rRprovBx98sFm7dm1exwiT
/x588EFqf1cCceY/d99oC1rH3T0zarv44osDj9WrVy+vXdTr6+Wb/+644w77
mpNOOinCqwOyK1X+O+yww5j7BwBAQjz++OP2fXnXXXe1a6tNmzbNrlcdlnuO
v/fee+0abG6bO3eurdeo513tP+6448wff/wR4XeCQsWZ//r165dzXp9ro001
aoM88MADXrvLL788isv15Jv/VBfR1b9X3SSgFEqR/3S/u/cY6kADAJAMU6dO
Na1bt7Zjc/Q+XaVKFbtmU6dOncxrr72W9bX+fpygTX2MPPMmXxz57/fffzf3
3XefvSdUt1N1YoO4+anaNMcvSO/evb12Wr8ySvnmP3FrFSrzaj0Vrb0CxCnu
/Kf6vFq/c5tttuE9AACABNKzueZcqT+lY8eOdt0/Pa/q31rfNxOX/7p162b7
ONz23HPP2Xn+qvW2884720ypcaBIrijzn+q9qA94xx13tPeL1orOVi9QtB6J
y1rZ5o7edNNNXrugOkXFUkj+k7Fjx3qv32GHHWzdRCAucec/97eZae1OAACQ
PJoTqD5AvX9rjlUmYeb/qXaM1oaK4/kc+Yu6/2/ChAnmwgsvNNtvv73tD7jm
mmvMb7/9Fth+9erVXlbSGg9BLrvsMq/de++9F8WlewrJf4sWLTL77beft1ah
1sfU14C4xJn/9N963esDBgyI5XwAACA3rfOei9Z532effQJzQdj6nzrO7rvv
btq1a5fXtSJ6cc3/U/0/PYfqvikrK8vatnbt2radclMQ3VNqs+WWWwbWqS2W
fPPfypUrbT+4Xte3b98IrxAIFlf+0zosmk/Qp0+fyM8FAADCUR5r2rSpnfuX
S4cOHex8rUxjQMPmPzn//PNNnTp18rpeRC/O+i8aH+zqoWTLbFr3weWtTHXj
N27caPsTtb9JkyZRXrKVb/5TX59es/fee4f63AWIQhz5T/P8qlWrZm699dbA
NloPUO9BAAAgPqrDlmtdNeeAAw4I7H8Jm/+UHVUH4KijjsrrehG9Uq3/t3jx
4sB2bo1KbZo7l27evHne/kzzS5csWWLPVSz55r8bbrjBvob+b5RS1PlPf4/6
PEZju4PMmjXL1KtXz9aGAQAA8XH5T/0vI0aMCGzn1lbr2rVrxv1h8p/e56+7
7jrbrn///gVfO6IRZ/5TPZhc67+L+ve0PqXaHXPMMeX6oDWf0NWWT1/DUmut
u3tc/W/FcMopp3jXvWzZstCvY/13JEGU+U9zWTW+w41xVm0j/3bXXXfZsSQ1
a9a09cIAAEC8XP6rUaOGrc2pfsCJEyeapUuXmi+//NK8/PLL5vjjj7dt1G+3
bt26lNevX7/e1gm9+uqrbZszzzzTvr+nb1deeaWdP6g2J598cmAdUZReEvOf
qKbLTjvtZNtqrQdlQo2hHDlypLe+iOrW+ul+1X3tzqFnzkLHmynvqWanO2ZF
ahqS/5AEUeU/vWeoTy/XWkBufaHPP/+86NcAAACy07Ow+lXefvttW59N8zXS
36c1f1/57rvvviv3etVy9D9fB2167taYT60zz7ynZEtq/hONtdR9pPaqo1K/
fn1vzp/GnGXSqlWrlHsx2zjTbObMmWOaNWtma5am39/77rtv1rUJHfIfkiCq
/Ne2bdtQ2U+bPlcEAAClpzGaCxYssDW7Bw8ebF5//fWM9Taw+Upy/nP0WcRL
L71kxowZY1+nvsAg6mv+4osv7Nhl9RFGXRs0G/IfkiDu9f8AAACQXJUh/1WU
xoE2btw4VB9dlMh/SALyHwAAAJw489+aNWu8/BfVGujqv27evLlp3bp1UWuA
5oP8hyQg/wEAAMCJM/9pLqibT6exxlFQ/aEuXbokYp2xjh07hlrvHogS+Q8A
AABOnPlPWrRoYTNR06ZNzR9//BHbeeO2fPlyU716dfu9jh49utSXg38w8h8A
AACcuPOf6g25dR3at29v1x/ZnHLgjz/+aPNe3bp17fd4ySWXZK1XA0SN/AcA
AAAn7vwnWoeyV69edn2FLbfc0my33XabxdpgPXr0sH1+u+yyi822Wi+F9U9Q
auQ/AAAAOKXIf37KR2vXri3Z+YtJ66kkYd4h4Ef+AwAAgDNkyBBzyy23lPoy
AETkiiuuMOPGjSv1ZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACxe/jhh+2a2GxsbGxsbGy5twkTJpT6rRsAgLwNGDDA/N///R8bGxsbGxtb
iO2ll14q9Vs3AAB5GzVqlDnggAPY2NjY2NjYQmyvv/56qd+6AQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAgP/XHhwQAAAAAAj5v7qOAAAAAAAAAAAAGi6j
ArA=
    "], {{0, 296.}, {448., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{448., 296.},
  PlotRange->{{0, 448.}, {0, 296.}}]], "Input",ExpressionUUID->"d9af2347-00c6-\
4b98-ab2f-9181c6a54eca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
[2022] Going green: optimizing GPUs for energy efficiency through \
model-steered auto-tuning\
\>", "Subsubsection",
 CellChangeTimes->{{3.924639887060103*^9, 
  3.924639897294671*^9}},ExpressionUUID->"9d9b7532-705e-43a3-b8bf-\
14ace8bf4c87"],

Cell["https://arxiv.org/pdf/2211.07260", "Text",
 CellChangeTimes->{
  3.92463985458106*^9},ExpressionUUID->"696ca364-639d-4f34-90bd-3a7c4fcf4ec4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQe8FEW2xiVdclJRRHcVUUyooAIquyKuCQRRkaCIWUBhVaJpRTGACZGg
suvDAAbEgBlRUTGAosCaAAWzGBZFcAXFVO9+zda9NdVVPd093TPdM9//9+qt
3OlQXd2Vvjp1TvPTzzuuf9XNNttsWK3y/3fcaRd0Gjr0tIt6NCr/R89zh509
4Nyzzux87vCzBpw1dP/Tq5X/8bXyY/9dfbPNyv9vM0EIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQUpIsK0+vMiUi/ZrlXRFCCCGEEEIIIYSQ
/DOsPG3mmdaurSKOPba+6NixrjUdfHAdcc01DbJeK0waNaqhc32v+592Wv1Y
7p3ftC7MC8wbS5cuFV27di0v747WdPjhh4v33nsv0HUnTJhQcW63bt1Ez549
xUknnSROOeUUccIJJ5R/e8eKLl26iEMOOUQcc8wx4qefforpCUmx8vvvv4uX
XnpJnHfeeaJPnz4FzcvixYvFoYceKjp16lTxzR9//PGib9++5e3YaU7Cf+Nv
+A3HyGO/++47z2t//vnnFccfeeSRonv37qJXr16iX79+TurRo4fz94MPPljM
mTMnT09MCCFCvPbaa2LYsGFOH0+IjSVLlogrrrjC6Se/+eabQmcnFAsWLHD6
3s6dO4vx48eLn3/+udBZIhq//vqrePLJJ8XQoUOdNgnjIvzvBRdcIJ5++ulC
Z88I29Dg5FoXi6E9InGQXT+bM6ee2GyzzbKmP/+5LOu1gqapUxv6uneTJmXi
jz8KrX8Vt3520003+XoX0LqCsNdee/m6LlKtWrXE+vXrY3pCUkysW7dOzJo1
S/Tv3180bdq04hv605/+VNB8jR071vf3rqaqVauKL774wvPa06dP9329KVOm
5OmJCSGlyIYNG5z56TnnnOO0u7Lt2WqrrQqdNZIg/vOf/4j777/f6au32267
jH7q448/LnT2ArNixQpnrKo+B9bFSHJ44IEHMsaFptS2bVuxatWqguaTbWhu
hKmLxdYekbjIrp8hPfdc3fL2ppG46676jj1YjRpVDfO7KuLnn6v6up6f9NVX
VUXjxtWN7Vr37vXExIn1xbRpDcWjjzYUy5bViuy+1M/MwO7rscceEw8++KC4
8847xejRo43vpkqVKk6b5Zd3333Xud6ll14qtt9+e9f1WrZsKQYPHuzYqWEd
gRAvoK926NBBVK9ubjsKrZ9t3LjRqUczZ84UU6dOFQMHDjTm8y9/+YsYN25c
eZt7l6MDvvnmm1mvjWe/7bbbjJp0tWrVxEEHHSSuuuoq8fDDDzvjMkIIiQPM
92rXrm1s2zj3I+Dll18We+yxhzNmtGkYaZyvwsZFf466des6dvCk8Fx44YUV
7+WAAw4QM2bMEFdeeaUoKytzvbfjjjuuYPlkG5o7QepisbZHJC786Wdq+v33
qqJRI/PcdOnSOoGvZ0s9e9Y33uOEE+pFdo9kpWTrZzpoR2xtzPnnnx/qmj/8
8IPYdtttK64zadIk8dtvv0Wcc1LM4HsZMGCAY2vdqFGjxOlnOh999JErj61b
t87pu8f+Z3kt6Iinn366+PDDDyPMNSGE2Jk8ebL429/+Jho3bsy5HzEyd+5c
x58A/HLstNNORTNfnThxous5YAND/azwwK5IvpOtt95a/PjjjxW/YR1ff29Y
0y8UbENzJ0hdLNb2iMRFcP3s3/+u63xHW2xRvbwOZ+r1jz8ejbb1yCOb9oy2
alXH9f1GdY/kpXTpZ3fccYfzPmDfir1l6jtq2LBhRr8UhL/+9a/ONQYNGhRx
jkmpgf2Ouu120vQzWY/UNGbMmNDXu+aaayqu065du8D+CAkhJCqwF6ZevUwf
IJz7ER3sb9hxxx2LYr6K/Rd16mTOXXr37l3obJU8f/zxR4YuAn+4OvCFpr63
s846qwA5zYRtaHjC1sViao9IXATXz266aZNNB2IKdOhQN+Pbwm+56kjr1pWJ
bbctc/ZuYq+oev1q1ao4vxde66J+Bv/+eCfYx3nUUUe52pkw/pVgc9OgQYP/
2TIujSHXpNSALVeS9TNZj9QEH7FBgV6NuAM4v2bNmo6ORttNQoqTZ555xul7
03D/9u3bc+73Pwr93mwkIV/wN1Qs89VXX33VidmDWD6XXHJJ6PVkEh3PPfdc
xrd1yy23uI7BmAnva7/99hNDhgwRX375ZWz5YRsaniBlF7YuFlN7ROIguH52
zDGbNLMJExqKk0/O3GP597/nHoPz7LM3aWaIHaDv4WzbNrr9oclL6dLPpK+y
efPmidmzZ7vamVatWgW+5uuvv+6c27x58xhyTEoR+BFLsn6m+/zDOiPiQgVh
+fLljt8GnN+iRQsnXhAhpDhBDDDsPULblob7Yw8S536Ff282kpIvxD3kfJXE
BWKaq98WYggUCrah4clXe8X2iHgTTD+D77PNN9/k++ytt2qLK67ItA/r0iU3
fevll2uLKlU2E4ccUteJp6nvDx0xomFO1092So9+Jn2fYW8cYgHDLnrnnXd2
tTUvvPBCoOtee+21znmMVUSiQu4HTqJ+ZvIheMQRRwS6Bvx51K+/aZ3h6KOP
FmvXro0pt4SQQoO+Fm0E6nsh9I4w9+fcr/DvzUaS8nXxxRdzvkpiQ46TZHro
oYcKkg+2oeHJZ3vF9oh4E0w/U32fQd+6555M/axly/BxMBG7c9dda4pataqK
FStqiPfec8dCeeIJ6mdJQPpsgj2sxBTnJGjsms6dOzvnTZs2LeoskxIlyfqZ
yffZ2LFjfZ37yy+/OP47cA5ia2K/JsYWhJDiBe2DbCsKoXeEuT/nfoV/bzaS
lC/OV0lcfPXVV65vq1D6GdvQ8OSzvWJ7RLwJpp9hzya+Ifg+w79ffz3TN3dZ
WVXHRi2MfnTppfX/N3/cpJHdfHPmWkFx+z5Ll36m+j6TwO4FcYEz31k18dln
n/m6JvasyfUhv+cQko0k62cm32cLFizIet7nn3/uxF3H8bBjD2rnSQhJH489
9lhGrJ586x1h71/qc79CvzcbScsX56skLuDTIgn6GdvQ8OS7vWJ7RLwJpp9B
N8M3BB0N//722+qu7+uTT4JrXO+8U0fUqFFV7L13HfHrr1Wcv/XqlRlvZL/9
age+brpSevQz1feZysCBA13fA9ogP8BnOo5HzBNCoiLJ+lkY32fPPvusaNKk
ScX4YdWqVXnKLSGkUMAHsh6DLZ96Ry73L+W5X6HfW5ryxfkqiYtXXnml4PoZ
29DwFKK9YntEvPGvn2G/JvZt4huC7zP590aNMjW0uXOD7bGEvdr++9d17Mve
eKPSf5ru+2z48PqBrpu+lA797JNPPnHeh/R9pvLOO++42hvM9fXjTEi73DPO
OCOurBMDsPW78sorndiNBx54oNh2222dtOeee4pzzz1XvPjii4HiOCLuM8Yl
PXr0ENtss43j61OCvgc+ORHbqFmzZmLXXXcVJ510krOPMQyI6419w0ceeaTY
bbfdHFss2GUNGDBAPP74484xSdXPTL7PDj/8cOvx2JuJ9yTX3xBnPWicARIc
jLtPPfVU53v973//6/wN3zj2y7Zr18755hC7YcaMGZ7Xwfo3vlVcq02bNs74
d/fddxeDBw8WjzzyiPjhhx985wn18YknnnD8IaOOyX27v//+u3jqqafECSec
IPbZZx/RtGlTZz0C3xV8JQepx0l8boB9OFdffbXzjHvvvbdzLbQ1l112mfOM
n376qbjtttucvsgvUeUxrrbvvvvuc/nukWtNEyZMyEgLFy70/dx+yfX+XnM/
+S337t274ptF2aM/mjx5cqgYwlF/c2GJ+r2tXr3a+V5QVqiDf/7zn53vDOUG
35fwH4vvP5/5inL8kJT5alRtDHwsPProo6JXr15ihx128DwWa9F62QdNfmzX
QVLqh40ovnPY6KtlM2jQINe3deihh7rKEDE516xZE/kzsQ0NTxTtVZC6KMm1
PUpSGZI48K+fQTPD94P4AdDS5N/33bdOxvf1z3828n1NpIkT6/9vPlipuy1d
Wsf13Ra377P06Gd33nmn8z4OPvhg4+/4u/7u7rrrrqzXlT4hp0+fHnWWiYEP
P/zQGR9Wr16pf2P/7ZZbbul6f+iTMaaxgb27mEefeOKJokGDBhnnfvHFF878
fty4caJmzZqua8sELUDO07MB3Qhj9rIyt49E/Zp6XIuk6GeyHqlpzJgxxmO/
++470aVLF+cYlO+DDz6Y59yWFpgTXnfddY4mq76fdevWiW+//daZU5m+N6yR
6uDdnXXWWaJKlSqe3yr0KN2eVwV1CDa6w4YNc+YS6rnQzd5///3yvnhfz3sg
rjFiJafpudXnRxuiti+bb765U59N98C8IRtR5DHutu/GG2/0zJueMM+Pkiju
b5v7rVy50ulbvK6H8YSqQ3oR9TeXC1G/t9tvv931fZkSnv2YY45xNKA48xXl
+EFSaP0sijYG13jppZecNTycK4+tUaOG573POeecQO/FlFq2bOl5jyTVDxtR
fefPPfdc6HKUa69RwTY0PLmUXdi6KAnbHiWtDElc+NfPpO+zY46pm/H33r0z
deGRIxv4vuann1YT9epVEzvsUEv8+GONir/fckujjGsWv++z9Ohn0NLxTi6/
/HLj75jb6+1E27ZtPa+JtQFpm4t1IxIvH3zwgbNGrLbjWA+RdixY24NNl/oO
YWuCObTOrbfe6vRHtj4C9+rWrZuvvu/MM8/Mmnes2XTo0CHjvD59+oi7775b
LF++3NnfiHG97R5J0c9kPVLT/PnzXcdhPU3d57ls2bIC5LY0mDRpkvNt2cY9
2Ctr05BMbSJskeReW1wT8VFgg4RxmdRD1YS5KNZQda644gpnDd523+eff97l
e9KWYDes+8tL6nOrqPFp0HbBzk4CfQ9jZPWaN9xwg+f1oshjPtq+m2++WXTv
3t1J+jmYE8jfZIJtRpREcX/T3A9acMOGDX2VDc7PRhzfXC5E9d4w79Wv0b9/
f8eWAnO5N954w/GboepY8h6wlYojX1GOH1QKrZ/l0sZ8/fXXzvdma6ezzdmx
70Iei7Ewvl+MEfBu9WTSKJGQfxtJqx86UX/nb731VsZ3LP3Fqgm6k/69I+Fe
UcI2NDxhyi7XuigJ0x4lsQxJXPjXz447bpO+cdNNmfZlF1+cqZ/16FHP9zW7
dNlkZ/b005l7M0vP91l69DPYvuKdwC7fBGyDtttuO1c7gbbeBnQDHLPTTjvF
lW3yP6BV6u9nzpw5ruM2bNjgaE3qcdi7pYO5O8aVsBU39VVynI2+BHNJ9IfY
q4t9TKZ+zcsuH/uAsUdEPcc274DNt0kPSIp+JuuRTNA/8G5UsJdAt7F7+OGH
C5Tj4gf1Au9BH6PL1LVr14oxj+nbUr/FJ598suI6mF9iPVwHc06T/qLbcx17
7LFOPbJpNap21qpVK2ePS4sWLaxjaeyFePvttxP/3JJ33303ox5gb6mJkSNH
VhyD/Vc2ospjPts+oM8H8u2vKuz99bkfktQAateuLU477TRnvxbmEfp+e5m8
5rRxfHNRErbcoCngeeR5sGG02eejv1N9ayPh36oGFEW+oh4/qBRSP8u1jVm0
aJFzfuPGjZ24Wab67UW/fv2c46DpeNkK4bctttjCdX2sf8AO2UTS60fc3znA
N6o/m599MVHDNjQ8fssu17ooCdoepaEMSZT4089U32f//nem/dntt2fqZ61b
+9O67r13k43uSSe59batty4132fp0M+8fJ+pYFyhtw/w9WID+9ZwjB/7I5Ib
mPPp7wZ7v0xcdNFFGcdh774XsJ029dsYb+O+Khs3bjTaZsDHiI3rr78+41ib
DaRk+PDhrusnQT+T9UhNhx12WMXv69evd+qLqSxt+6ZJ7kg/IdjHaNtDgjqA
9webLOwfkX/HeE3WI+wpUf11zJo1y3pPU8wVrJWbgG2ubb35oIMOcq1RrFix
wvG7YToeewbT8tyyf0DC3NEG6o201bz00kuNx8SVx7jbPlBM+hkSfBthH6AK
1t/go0Y/FvNDE3G9zygJW256H4C9TF7861//cj0f2gtb/x4mX3GOHwqpn0XR
xkj9CvZ5+rpXtjm7/OZhP+8F2m29jKCf4J4m0lA/4v7OQTHqZ6XUhoIgZZdL
XZQEaY/SUoYkSvzpZ2+/vcl3h+77DGnevEz9rH79almvh7idTZqUiS23LBOr
V2fuyzT5Pnv8cf82belNydfPsvk+k2A9Sff3gjbMtq4G/9Y4BnvwSLyY+oS5
c+caj506darrWKwr24DvJP147PuyxYiEjb1+PPwImYBPgUaNKvd1Y56fzV8a
ztHtZZKgn5l8n8m1bOxBxV4XmVfTmAnlRuIFNlx6uWNehb0BKrDDRT1BLAsJ
1gHkOdC1vPjoo4+M79hWJ017AHr27OmyXZSgDpg0NKzLQg9Lw3Mfd9xxFb/D
1gDPZAN7qnAc7ERMxJXHONs+STHpZ/B3ingLJuDTR2+3YV9jIs66FhVR6FTY
EwTtJhumdRd1bSbXfMU5fiikfhZlGwN0HxPZ5uxYk8CY2daOA5NvFCT4bLOR
9PqRj+8cFKN+VkptKAhbdkHroiRIe5SWMkwL0D/hqwbzIa82sbD408+kj3/d
9xnSqlW1XN/BN9/U8LzeySdvut60ae6YACbfZ2vXVvGVz3Sn5Otn2XyfqUh7
dDXB57sO6obcfwR/yyRe9HmebR4N7r//ftc7tB0LpkyZ4jpet73Q0X152NZh
hgwZknEcYnv5YZdddsk4Lwn6mcn3Gey3Z86cWbGGhXVm+HozjRNPP/30Qj9C
0aOOh2TC/rtsYDyrrneivmXDtN/dNjcz+fbDeMwL7As07WMw3SOJz63vd7TZ
lgFp22lqH+LMY5xtn6RY9DOsg2SLya3728O9deKua1ERtNwwJkJ8VvWcSy65
xNe90I/oz4d5tMk2J8z7jHP8UEj9LKo2RqLa6CJlm7NDkzvqqKOsv0PPU/c4
ygR/FrZ9m0mvH/n6zkGx6Wel1oaCsGUXtC5K/LZHaSrDpIP4Idh/LP2hyz5m
//33d3zXSB+bycCffmbzfYYEe7TatTP3o8+fb9/DOWfOpmsdfrhbi0PS4xEg
vmfhtS3qZyCb7zOV119/3dU+wB8MbItVZD+IOIkkfhCbu3379k6ZQ7f00kJN
41+sB9gw2dXrvsp19tprr4zjsTdCB/vWdBtsvz5edV8QSdDPdN9n6M9l/C34
T1D9EiN+gF6m2D/tJ54ZCc/ZZ58daO4n0dfTUdcGDRrkmfT7IB166KHG65v0
VNv8ScVkV9apU6dUPLfJdzB88tqeG/qyyZY5zjzG1fapFIt+JmPHeaHbWaJd
1N933HUtKoKWG+wQ9DzC75NfpP2yms4///yc8wXiHD8UUj+Lqo2RwCZY7+Nz
wdTuYxzgVZ5Jrx/5+s5BselnpdaGgrBlF7Yu+m2P0lSGSeXLL7901g9M5aIm
2OgnR0PLrp9BH8M+S+Rd930mU6tWmXsup083x+Bcv76qaN68pqhTp6r46COz
jZru+2zYMP/xPNOdkq2f+fV9poK4m/r3Dxsblauuusr5O+L9kvwBmxXElDKB
Pnb27NnOPl39/b333nvWa4aZQ/rRt0zX9dpfEfT6+cTk+0wmWzxrU+wo1BsS
HyYdyVZfVODDKtsYwE/C+qSJsPrZ008/7ToPOm4antvkTxMJvrZNMWsLkce4
2j6VUtLPTDa6+l6luOtaVAQtN91vGBLWI/2ixpGUCfZVueZLJY7xQyH1s6ja
GEmU+tnjjz9uzBv8wXqR9PqRr+8clKJ+VkxtKEiqfpamMkwisENt3bq173I6
77zzCp3l/5FdP3vnnU3aWOPG0K6rGo/p3j0zXuZll7n3ZSJBC8Pv48aZf1+2
zL0XtDR8nyVfP0Nfg/cRxH/5tGnTXO9T3xsOzR1/v/fee6POMgkIfBkhRlbz
5s2tbVch9DN9zxrWvf2SNP1M1iM9wUcD1mBMYE1WPx62nMn1C5B+wupI+pwR
e3xGjBgRONn2sYTVzxAjQN/DifVo3R44ic8NmxfVN6+asGfnlFNOcflny3ce
qZ/ZCTP3g32PXp76ul3cdS0qgpabycch/Bn5BWsw+vnYK5xrvrKR6/ihkPpZ
VG2MJCr9bO3atRVxfNWE/UzZ2v2k1498feegFPWzYmpDQVL1szSVYRIZNWqU
tb+wpZtuuqnQ2RZ+9LNJkzb5I4NGZjtG6mIymWJqvvFGHceXGfZj/vab+Tq3
3poZW6xq1VLxfZZ8/QyxW/BO/Pg+k6Cthj9Q/duX/s8Rh6xOnU36rE07IPGz
ZMkScfLJJ1fEfID/3K5du1a8czUtXbrUep245pD62kSQvb5J089MZTp48GBP
LQy/mcbQQfY6kGCE0ZFgVw77XPUcW8yUsITVz4DJ54buczKpz/3EE09UxIY3
JcQTQdw2XQ/MVx6pn9mJY+6Xj28uKoKWm+6LCymIDRTi8ZnqiB5vJ6rvKarx
QyH1M5BrG6MSlX52xhlnuPKB7x6+tb1IQ/3I13cOqJ+luw0FSdTP0laGSeP7
77/3bHNtaZtttvHVDsdLdv2sR49NtmXjx9e3HqP7/D/ggEyfZb/+WqV8Dly7
vJyqlPe1Na3XKV3fZ8nXz+Saoh/fZyqmNkju1Xz55Zedf7ds2TKOLJMsYAym
rgHCPgVrJ9Ifucl/SSH0M33eH8TOOWn6mb42jzVvP/2A3OesJqxBk3gIoyP9
+OOPrnMWLVoUab5y0c/wvejn6n70kvrcAHv/Vb+ypgSfASafQHHnkfqZnTjm
fvn65qIgaLntuOOOrmfT/V54gXLSY+8hffbZZznlSyfq8UOh9TOQSxujEoV+
9uyzzxrvf+2112Y9Nw31I1/fOaB+lu42FCRRP0tbGSaN5557zrOt9UrQDwqL
t36m+j7z0r2eeSbTbmyrrcoyfh87dtPvF1xg1+CQmjYtVd9nydbPEL8N7yOI
7zMJ+jJ93xBszmAvj3ic+Hf//v1jyjkxgTWT0aNHO/2IfCfw87F48eKM45Ki
n9WuXTvjGHxPftcekqSfyXqkJsw//IC9MXJ9X01B/IUQ/4TRkfC7fs706dMj
zVcu+pkeQwB2Ivq5SX1uCeKrZfOVgf7lmWeeyWseqZ/ZiWPul89vLleClpvp
+4bdUxBQxvo1MNfLJV+SuMYPSdDPQNg2RiVX/Qw2VHqcIaR27do5e/GzkYb6
ka/vHFA/S3cbCpKon6WtDJMG1gK82lmvVIj6m4m3fubH9xnShx+653U//FDN
+e2DD2qKWrWqihYtaokNG+z3Mvk+e+wxb72tuFJy9bMwvs9UjjvuONe7RYxB
2SdwH1r+wNhX708Qh8+kRyVFPzPFbfcTE9Dv9fOFyfdZNh/AKqb9MIhHQ6In
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
K9NPPfVUzXEk9JcJEybE3gM9cokllgiPX2WVVbzHNKL9sAcyqfbD3x988MHY
6z399NM1z2Bi5Lqk/Z777bdfzbUXXHDB2HMMrp1k//79vce1Wx6it2GXip5a
rwwJIYQQQgghhGieDz74ILXW4NMndtlll9hzvv7665pz+vXrV3PcOeecU3Mc
8fN++OGHmmNfffXVYK655qo5/rHHHvM+g2svwrzd9auG7dpHH31U9duee+5Z
cw/yIA3rrrtuzTXq7c1CLzPHMgf3+TZjju+LyTlkyJBUz9cI7CX16UJxsUCJ
K+g+LzpclH87SJt3ZSvTwB4+X17hGw19zeXPP/8Mbr755iqbyYcffth77Qsv
vDC19uP6z5tzzjm9xxnthz2ocVA2bX/41Nko0n7Pd999tyYGA+muu+6KfaYv
vvgimHzyyaueKUpraqc8ZH1glllmqRw3xRRTBKNGjYq9thBCCCGEEEKI5vDZ
PET59Tcwf3PPqWfz9M4779Sc4/MDfsstt3h1Buag+Dz65Zdfwmfefffdw3mj
79gjjjgivNatt95atc9rm222idVVRo4cGfp2X3755aueybWXIT355JN189am
e/fuNdf4+OOPI49/7bXXgmmmmSY8jv1tb775ZuSxaDbutTmXa+QJPrl82h2J
PYv4nrK56KKLgqmmmsp7fM+ePUMbIJ8OkDbvylamgfLie2+TVl555dA2Ct9c
6HauXWGcJnn88cen0pbQ5syeYFuD8WG0H9K9994beU30L1uroq5FkfZ7wm23
3VZT1tDUomJUEjfAre9XXXVV5PXbKQ832WSTmmedb775Iq8rhBBCCCGEEKJ5
0I/cuRjz2zhfPSeffHLNOfg2j9prBD67Muabrl0Ze+J8tiZRqVevXt7fjbaG
zZnBt0eLtNxyy4W2JMzPSXfeeWflHDQ7fIq55+APPGmsy2effdZ739NPP917
PH6xFlpoocpx+++/f+z1v/32W+/1mVPn7Qtt8ODBsd+HfXZrrbVW0LVr18Tf
1H7mtHkHZSvTBl8sySTJ6ME+eCdfLNaofYqAFuW7j0/bsbWf2WefPTLGKntd
zXHYRkX5wWvkexrQwt3ziM3r6sRo7JtttlnlGPTns88+O/K67ZaHvlgDJO3j
FEIIIYQQQohsYY8iukffvn0j7YeI84fffmyyAE3j4osvDs/x+b0iYY+BHcc1
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
hm6NpuLLxzfeeKOm3XKT8aVjYOwXl9+0AUnGeoas2qKixvLmOvY9yA++ne8d
WB+Juk6a7+kj6/rcbnmYNWm/SdHzR9HeGN9n1EUbtG+7TBx++OGJr4nGzH4J
NN6JEydWfr/kkkuqrinfZ+Ltt98O127tPpW1KaPlUpYYt9rlhrU05hcul156
adguRrVr3GvjjTeu2zeR9thjj7rPzvrZqquuWnVe3759g+HDhwdvvvlmcP/9
94dzkKh7lEk/Y42QZzrxxBO9f7/llltqnn/55ZePvSbrPWbf1CeffJLHY4s2
Iqu6PmjQoLDeRY3PP/3000jtIaqMs86ITaUZmxLzgvVF5rbEn/bNKYy/g7zA
Vyg2HiT3/owFzd9MYl3axacBsae6S5cuidpBzq9HGfMOms2/vPIu6/Kbdf5n
2Se7tFOf6WoKrAW5/kfiEnG3vvvuu7r3aUQ/Q5t1yzWaHfYVnMueD/wu2Pqn
KffYgdTj888/D/Vkcx7aEZoINkrEAMMmaYkllqh5btbNo0i7f5P9K/axaFPY
dyTV9LMgj/JK3lI/XQ3MJN/c/t57763xQ+vmI+1K3LzeJNoInhubM1/bGHVO
krjrWbVFRY7l7RhZtHtoxgbmp2gv9vXOOeecpr+nSx71uZ3yMGsa+SZFzx9F
+0MsPb73BRdcUPW726f71rajMO0kbb6NfJ8JG/SVbt26VZUJ1tdc2D/AOMQ+
jn0tLg8++GDYTrPXxNemmTkB/TrtIPMr1uIoh772Nc5GmrVA9rPY5/jmr8Ae
It9cqUz6GVo3zxRlq88arPutSMwno/jPf/4THsP+FtG5ybKucx3mEu5Y0qSN
NtqoMjb31Tu3nt5zzz2Va6EVPPDAAzXPhX7gG1tF2bJljTsObNT/GcnYEE01
1VTBrrvuGs5JmcO4e49Msv0vuLRD3kEj+ZdX3mVZfrPO/6z7ZJt26zPr2UBR
pozP0Ki03nrr1d3fmlY/Y67NtzbHoplE2XeTj3bcDBL/tue3LvT17Eu0yzw2
HC5jx46teW7KYtTerDT6Gc9nyizPy75Y9lMVSV7l9fnnnw/1yBlnnDG0IXDP
8c3tX3311dAHxoEHHhieF1fm2H952GGHhc9EuWDvpHsMY17aQHM/2jp0eb4R
56y44oo152BTEUeWbVFRY3ny1bYrjLKhxH7EHMP+xGa/p01e9bmd8jBrGvkm
Rc4fRftj+z6jL7TBjtRtk5NAf8jx7AV2sdsIknyfdW5or9x256233vIei62+
fRz76uOw107txNyA+9r8+uuv3nUF9mlEcfbZZ1cdG2W3ZaCsJxlbtYI432c2
9HnuO/jqueH0008Pj9FajMiyrpv5KPvfovY6cA7lGlsebKvN74yp7Puy/8H2
j3X77bdHvoMvjgbzzCLIUj8j4VeFPXo2zJt99jXoRD7aJe8gK/0si7zLqvzm
kf959snt1mdG6WfoCO+8807lOOZJ6CruvNYk3juOtPoZfa59LPuU4/j3v/9d
c31sKKO+qz3PpXy9//77kdf22aDR7/tIqp+xf8rMx/kG9913X+z75UWe5RX/
0IBNi7svtJ7e4s7NTMLui7+5vujYk2bWR33P9/TTT9fcg3Ggu0ed54zap51n
X5DnWN6MUUnMhaPAVs9o5ccdd1zN35v5nnnXZ2iHPMyaZr5J3vNH0f68/PLL
lT7KbXPZl26XBdrGemC/TxvOepXbzvp8nxmfmyIf+KasbaDFszbEusBnn30W
6esVm9c4W4Os8Y0bo3zCDhkypOZY1sCjwK+Mezx7YpiP+DB+AO3EHngf+Hew
42swB6q3351z3PXJsuhn9XyfGShL7v4A+qWo/RSsvXMMex1EvnTWuo4/XfdY
xnC8nw12lVwXH9A2aLvmvDXWWCP2HZhH+sZURfixzlI/Yx9alC0Hvr3cdor9
Sz7aJe8gK/0sq7wzNFN+88j/vOppO/aZPv3M9ufrwt5Gn4aGdmHmcj7S6Geu
vsl4m3lpPdw5Ogk/Yy7Ysdh5fuyxx8Zel5gC7nWj1suS6Gf4FjL37969e6x2
lydFlld3f2i9uT32Pm4+4qPO7dts8N/mnoPmwrwsCuxr3HNGjRrlPTbPviDP
sbzZf0Wi7sb5LGTPIcfV82WU5nvmXZ8N7ZaHWZO2juWZX50Z+kF8NLL3HVv3
dsb4+Hd9nwHlxC0P9fwO7LTTTuFxjCNcfL7PWBfJAnxMYHPZs2fP0Bcv+h12
xMSS6WyQF+gV6OfG95SbiCXCWprdzjHXZp8d+VcUbhtFmWDN3ceNN95Y8x5R
x8Jll11Wc7y7buDi+kaOWhM76KCDqo7Dn2sSFl544dRjqyKo5/vMZscdd6zJ
V8ZmLrSNxl8HfjezQnX9/1Bdrx63m8S4PwnoIPa6JM9YD98e5iLGglnpZ8wJ
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
EOXfswyUST9rt7yDjqSf5Z3/WdfTdu0zG9XPwI3Fxhg4iqT6mc+XDDYdabB9
hpqEBsJ+EPd3YsNmiU8/I9Ysfrbd37faaqtM752GostrO+tnRfQFRWkZ2D3W
89fEGJd5cRxJv2ee9dml3fIwa6SfFQtrL3FlIC7hU6jMJPF9Bj77UBNT+u23
3w7n3fgS+umnnyKv4fN9duedd2b+Tmn9IbUr7l7Ytddeu2l/q126dAmvVbTd
PM/ttmtrrbWWd6xSFv3MjYNBShrvr2ztayO+z2xM/F47nXPOOZV5Z166lup6
43S0ut6M/zPXZwfPV1bKpJ9BO+UddCT9DPLK/zzqabv2mc3oZ+6aMXPKKJLq
Z5tttlnNcQcddFCqd3Kfi7mswY7nTCLvsyQq/uZTTz3ljal91llnZXr/pBRd
XttZP4O8+4IitQzaOfZkmXGSL1Fn4uxOkn7PvOuzTbvlYdZIPysW4sBGfft6
aejQoa1+/Fguuuii8DnjfJ8B/szcfo0yzxjL+IwkBm8cWfs+Q6vDbyI+zO+/
//7K2DSpPyTeib1qw4YNi/U/70JMa/SGxx9/3KsXYv/OOIC4vIwrWauNWrNi
/8M999wTxr8bMWJE2LclAZ3AbpPYU44NUbMwL2DfcdEQb8IuGzwDPop9lEU/
W2mllWquSzlMQtna10Z8n9m4cctJc801V8VPzvjx45t6PtV11fV6db0Z/cy2
YTRjOt/abT3QibP2FeRSNv2snfIOOpp+llf+51FP27XPbFQ/I+4Y41z73P32
2y/y+KT6mW9OsuqqqyZ+H/oo97nwDWBYfPHFa8bqrLWnJcq/aJR+Bm65I2H3
xT6goim6vLa7fpZ3X9AKLYM2b++9967ZY2ES+9qjSPo9867PNu2Wh1kj/axY
fO150vToo4+2+vFjwTaa54zzfWZYYIEFqt7tlltuCa644orw/5l/16Nv375V
57MPoBGIAU9sa1fTxtaab2X7Q4raN8YaEr4V7PMXXXRR735xm3333beqnWIs
zvwZ8JV+7LHH1vheJdGvPPPMM5XroAWsssoq3nHC/vvvXzcmIL5H7PM4Jwt6
9+4d7tcoEnQJ1+9o3H6BsuhnbmwmEr8loWzta6O+z2zcMbdJSXz6R6G6rrqe
tK43o59tvvnmNededtllqd7tiSeeCP1/rrjiiqnOS0vZ9LN2yjvoaPpZHvmf
Vz1t1z6zUf2MNRP3fePizSfVz4iH6etr2SeSBNaF3HPtmIfEhHD/TjlLA/vP
sA33+bCJ089Yk994441r/s4+2CzWjdJQdHltd/0s774gTy2DOh23V3js2LHe
eMOUccapPpJ+z7zrs0275WHWSD8rFuyqfGW7XmLu1Urfl/WgnzKx85LYT1I3
7PdDM2f+yFiSfVT1cO1LmRenhbEEuhvnM6embJPH1EtfDGDTJ9sQE4Y4OuxZ
xc/hO++8Uzl+k002ibw3ti+mf3r11Vcrtt34bOAZ1ltvvfCb77jjjuH8mXUX
5tsmj7HHwQ7mhhtuCPsH2hH8AzCPJ/923333ynOceuqpkc/B3H3mmWeuek/e
v13x+ReM2/vP2pR7fCv0s+OOO67murTF48aNq/vOZWpfm/F9ZuPal5rEulMj
qK6rrqep683oZ4ceemjNuZSZpHaTfFPju4f4U3ni6j9JY/DkpQG1U95BI/lX
Zv0sj/zPq562a5/ZqH5GftrnLbLIImGbHkVS/Yw+CDtk99ik6yHYUNnnsZbz
8ssvV/6OHbqvL3/yyScTXR/NjH6PftM3B4rTz4Ay6dZTEnEKmxmjpKXo8tru
+lnefUGeWsYaa6wRjjMZt0WBHZXPJhHfRD6Sfs+867NNu+Vh1kg/KxbsA+aZ
Zx5vfxKXmGOVGWKjmPatng0EYHfue0/miPUgzoZ7XlrfZ9jy8aycyzzVrW+M
S1w7E58/JGKAoncbO2z8uJnjGSdFseSSS4b1wPgdMvtWSayNMZ++9tpra847
8sgjK8exdkXbhh8RV2/Hj5w5DvuYKG699daqd2zUjq8sDBgwoKZsxMWVwG+6
e3xUXwGNtH/YTtdr//Ab5dpMk5Lowj169Kg6B42kVVx++eXhM/Ts2bOp6zAG
8Pk5SNI+uKiu/39U15PX9Wb0M7RPX9/GOKiejwHmUksssUR4PHaGeePagTM2
SQI+8+zzKMf12GWXXWryxN3H3E55B43kX155Z9No+c0j//Oqp+3aZzaqn7kx
X+qNO5LqZ+Abj7NWlATXrqp///5Vf6cv9fkho38fOXJk7LXRzkzfjX8YH/X0
M/jPf/7jfQZ06aIourxuueWWVecwfogjK/0MG/c4kupnefcFeY3lAe2Hv+OL
JA5inrvPYOIQu6T5nnnWZ5t2y8OsSVvH8syvzgL7mlx79rhE7Naofq8smD3X
2GongT2e7ntuuOGGic71+T777rvvEj8r817KoDkfP0I+7L22Cy20UM3f8eHA
fHq77bar/MY+VHNO1F4zxgT8nfmxwR2H844+sC+xj2Ofm68vIV6hOQY/nFEc
fvjhVdc74YQTIo9tB/Az75Yr1vdNfAobbIGw7XGPj4tze+GFF6Zu/9BP7OPn
nHNO73H4DfTV/7h478SbcWNNUx+ifMvkjenzjj/++KavZe+nNIlYj2lQXf8/
VNeT1/U999yz5tgo/zs+XPtqk9iPa/bt2rDmdPPNN1fZSTSz/zkp7tom4z+3
7cD2x93r5K754puwHr64IF9//XXNce2Sd9BI/uWZd4Zmym/W+Z9nPW3HPrMR
/Yw9HfY52CrXA43SzRdspn28++67Nf7aSXH7QwGb7Mknn7zqu/r6qO233977
ncj30047rcamiLKBn38zT2KtJ8oOBf+f7nV99uNnn3229xno+4uiyPK67rrr
1twnbl8bc0z3+Hr6mU9zQ+uPg3bLPadfv37eY/PsC/Icy5txcL19yqyp2uvE
cbbIab5n3vXZ0G55mDVp61ie+dWZwFd1lP87O2G3zP6fMjN69OjKu1CekoC9
mP2eaIT1fAgZ3DY1rR2Frc3HxXSxxx8+f0hoBPwNf+AG/ACZc9AUfRx11FHh
3xkrAv2g/T5xer/xzU5iHBaVZ8YekIQNcxSu/SljkXbG1jTsRFvM/n/s9Vmv
YM+b8UfvpiOOOCK8FvY6rs2z+eZJ+yT6c3fPXNR8CV8N7jjJJGzZ8Utgw3qs
GxPdJOy/WOsYNWpUkzmaHHt8ilbTLNhV2fkRZ1sVher6/6G6nryuu+uKpKT7
jYBj4/r1lVdeOfz2+BVhvuFqqnHzqSzBptJ9NnvOhH0IfpuXX375qvPc5yWh
48bBO7vnYEvu0i55B43kX555Z2im/Gad/3nW03bsM139jPlQ3D5M3oE4m+Z4
7LGY59bD528LO6wobrvttpq8ZA4e5Y8FP+Nu+Sc+jg/i7Pjm83aab775wrky
+5vt+TB+XeLi9GC77V7LF2OTebbPFxvvjM+oIiiyvHbv3r3mnLg5ls+Ox2cX
ZoNdqHtOvb1Stt8Lk6L82+fZF+Q5ljfaD+nee++NvCZai61XUZ+iSPs986zP
hnbLw6xJ+03yzK/OBu0+WmlU24C9AXOjsoF/Hp4LPxXMydw6yvyT9ULKUdSa
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
1ltvDbbccstgjjnmqPLR9cEHHwRHHHFEsNxyy4V5u8giiwQ77LBDMHTo0Iae
/csvvwzOP//88HvhV3/22WcPVl555aBfv37BXXfdFR5TBv0M/vvf/waLL764
tzxNMskkwW233ZboutLPhBBCCCGEEEII0UpczePMM8/06h3s70wKOhy6jhsz
sdX62XvvvRdsu+22waSTTlrl036WWWbx2tx99dVXkdeaMGFCcMMNNwTbbbdd
MP3001edO27cuND+6txzz63Y4PnSVlttFWpMScAHHZrf5JNPHuuvjmsuuOCC
pdDP4J133gl93/medbrppgtef/31uteVfiaEEEIIIYQQQohW4moe6ELoGj69
46WXXkp0zauuuqpyTs+ePSu/t1I/e/vtt0MbM3Nf9L077rgj1Lngo48+CvPA
fjZsp77++uuaa1166aXhntQoDYt7bbzxxrE6l0l77LFH3Wf/4YcfglVXXbXq
vL59+wbDhw8P3nzzzeD+++8PdcGoe7RSP4NRo0ZFxhNYeOGFg++//z72utLP
hBBCCCGEEEII0Up8mschhxzi1Tp23HHHRNfs0aNH5Zw777yz8nur9DM0l27d
ulXdd/To0TXH/fTTT6HWZB83YMCAmuMefPDBcL8k+z99+WR0OvYooqNdfPHF
wRlnnBHu4XSPRYdDu4vil19+CfeY2udgI+jj+uuvD+9ZNv0MeP8ofW+TTTap
6Jg+pJ8JIYQQQgghhBCilfg0D/yD+eyrTByAOB555JHK8QsttFCVLtIq/Qy9
y73vW2+95T32qKOOqjpuscUWi702Ps98mhB6Hfe1YV+rzy7thBNOiLz+2Wef
XXXsiSeeGPs8hx56aCn1M+jTp0+khoa/vCiknwkhhBBCCCGEEKKVRGke+Lj3
6RzYpsVhax2XXHJJ1d9apZ8dffTRNfcdM2aM99ghQ4bUHItdWhRnnXVWzfFL
LbVU8Omnn3qPZw+sezw+1Hx88803Vb7D8LNWz18a57g2aGXRzyZOnBh0797d
W654ZhP/wEX6mRBCCCGEEEIIIVpJlOYxduxYr86BbzR8pPl4//33K36uZp55
5uDHH3+s+nur9DNX4+KdP/zwQ++xN954Y80zRh0Ll112Wc3xrt2ZixuvgPiZ
Pg466KCq44gNmgR8ipVRPwNiOMw000zestWlS5fQd5yL9DMhhBBCCCGEEEK0
kjjNY7311vPqHD6fYGDrPcccc0zN31uln3377bfBiiuuGN6PeJtxeyB9+hk+
+qP497//XXP8Qw89FPs8rg3W3HPPXXMM+2TdWJvPPvtsovddffXVS6ufwX33
3Vc51k3sl3Vt7KSfCSGEEEIIIYQQopXEaR7EdfRpHHPOOWfoy8uGGJHsL+Tv
6D7jx4+vuV4r428C9nFRsR7//PPPME7kmmuuWfOMr732WuQ1G9HPkuhbvuuy
NzMJZdfP4JxzzvGWLRI+5WyknwkhhBBCCCGEEKKV1NM8ll56aa/GceWVV1Yd
N3DgwMrfdtllF++1Wq2f+fjyyy9De7p55503Us9phX627bbbVh2D3VxS2kE/
A/y+ReU58ToN0s+EEEIIIYQQQgjRSuppHtdee61X31h88cUrsTWx3Zp//vkr
f8NHvo8y6WcvvvhisNNOOwVTTDFF5Tk22mijYNddd615xtdffz3yOnnpZ65u
ueCCCyZ+t3bRz4jL0KNHD2/54nvce++94XHSz4QQQgghhBBCCNFK6mkev//+
e/CPf/zDq3Hcfffd4TEjRoyo/NarV6/Ie5VBP3vjjTeCDTbYoHJ/3h+//Ozt
BJ//s1boZ926das6hn8npV30MyA2gxtPwSTiDBBvQPqZEEIIIYQQQgghWkkS
zeO8887z6hs9e/YM/77WWmtVfhs5cmTkdVqpn2Erd9JJJwWTTTZZ5d7LLLNM
8MILL1QdVxb9bKqppqo6hu+ElpmEdtLPgHilk046qbeMEWvBjmMh/UwIIYQQ
QgghhBBFk0TzIDbADDPM4NU3Lr/8cu+eTh+t0s94pq233rrqvmh+Pj2qLPrZ
7LPPXnNdbLWS0G76GVxwwQXe8uUm6WdCCCGEEEIIIYQomqSah0/78mlpaa9R
hH527rnnVt1zjjnmCOMG+CiLfrbSSivVXJd4qEloR/0M8Ecn/UwIIYQQQggh
hBBlArusSSaZJNQl4vyWwWeffRZMPvnkkbrGbLPNFvz888+x12iFfoaP+imn
nLLqnnvssUfk8WXRz9z4myR+S0Ir9LM0ZSkKys9yyy0n/UwIIYQQQgghhBCl
gX2ZRpdYfvnl6x7vi01p0oknnlj3/MMPP7xw/eyBBx6ouSf+3KK4/vrrS6Gf
HXfccTXXxXfbuHHj6r5zK/SztGUpio8//jjUYqWfCSGEEEIIIYQQogygxRhd
YsEFF6x7/GuvvVaxMbIT9l1R+yFt9tlnn8I1kQEDBtTc75BDDok83ueH6+WX
X448vhH9bNVVV62rb7311luhtuhe++CDD677zj169Kg6Z+aZZ657TrOkLUtx
PPLII1VxHtKWFcriTTfdFMaHnTBhQlPPIoQQQgghhBBCiM7N448/XtElpplm
mrr7L2HDDTes0TTi9kPa+PYkksaPH9/sq0Ryzjnn1NwP+ybspVxeffXVYK65
5qo5/rHHHou8/oUXXphaP1tyySWrjp9zzjm9x2266abe/DrzzDMjr33ffffV
aJzocEn0zWZopCzFcfHFFzekn6F1zjLLLJXjp5hiimDUqFFNPYsQQgghhBBC
CCE6L/vuu2+VNsHexXo8/PDDVeeg1cTtbzT8+eefwbzzzuvVREaOHJnF63i5
5ZZbvPdcY401gvfeey/45ZdfgqeffjrYfffdQ63Fd+wRRxwRXuvWW28NTjrp
pKrrH3/88TXH33XXXbH5gD2YfTz39fHEE0947f1Ihx56aPDJJ59UHX/RRRcF
U001lff4nj17hrZyeWlJjZSlevBN0upnm2yySc058803X9PPIoQQQgghhBBC
iM7HkCFDQjshW2dA30JLqgf+rcw5vXv3rnv877//Hpx66qleXYe07LLLhn6v
8uD7778Ppptuush7uwnf977fjbaGbzHDH3/8UWNLRurfv3/k89x2223e6997
773e4wcPHhz7vOyVXGuttYKuXbsmfscPP/ww0zxupizFgba54oorptLPojRa
7eMUQgghhBBCCCFEEq688spgiy22CDWXKG1l0kknDVZZZZXQ9uftt9/2XseO
UXn//fdH3u/oo48O7zf33HPX1XTQp9Zdd93QR5prV9Usw4cPj/SnZRI2YfjM
Qp/p0qVLZN7cfPPNod0a+0LR/aKuh66ILzX8mMGIESOC/fffPzKGKXZjBxxw
QHD77bfXPP/AgQMTa2N9+vQJv5/7Oz7WDjvssGDs2LGZ5GlWZaken376aZU2
WE8/W2eddWqeg+9JfFAhhBBCCCGEEEKIemy88caJdRhS1F4/7K7YE7fUUkvF
3m/aaadNdT+TnnrqqczfHfsu3/NMPfXUwd577x18/fXXlWMHDRpUs29y9tln
D0aPHh3+PWpPqC+hM4HPTs2X0Jt84Ndrxx13jNQB8enGc4OJvznjjDMGe+21
V7jnNmv9KKuylAT2sRrdsZ5+9uCDD4a6nbkv3xFfakIIIYQQQgghhBCiPhMn
Tgy1pPPOOy9M2Hr54ggAew+x+zr//PNDPS/PGKFpwB4LWza0stNOOy30aTZm
zJhwj6zh2muvDY/59ddfW/ik2cK3IpZqEsgjbP9OOeWUXLRYIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjRcfnxxx+DESNGBI899lirH0UI
IYQQQgghhBBCdDK++eab4Morrwx22223YL311guWWmqpYKWVVgo222yzYMiQ
IcH3339fc86nn34arLHGGsHAgQMLecYtttgi+Mtf/hJMOumkwc8//1zIPUVr
aIfyKIQQQgghhBBCiM7BDz/8EOy9996hJoU2FZWmnHLKYPvttw8mTpwYnsd/
e/ToEf7tkEMOyf0577nnnqrnefvtt3O/Z2fizz//DB599NHgwAMPDPr27duy
5yi6PE6YMCHYfPPNg549ezadNt100+CAAw4IzjvvvGD06NFhnory8ttvvwWj
Ro0KNdojjzyy1Y8jSkZZ2kTRXhTVrrz44ovBySefHPTq1Sv44osvcruPyIc0
7cuTTz4Z9OnTJ+jdu3dw/vnnB7/88ktBT5kvqisdh45aRtuBp556Kpz3bL31
1q1+lE6HxomdkwceeCCYe+65K5rE3//+92DXXXcNBg8eHLaFaACDBg0K1lpr
rcox66yzTvDTTz+FmoP57Y477sj1OWmHF1hggSr95JFHHsn1np0BbLhuv/32
YK+99gq6du1aVQ5aQSvK48iRI2N1umbS/PPPH1xwwQWylSwRX331VTB8+PBg
u+22C2aaaabKt/rnP//Z6kcTJaBsbaJoD4poV7788svgxhtvDMtmt27dqvqa
Dz74ILP7iPxopH155513wvVC+3szLmpXVFc6Hh2tjJYd5jzYlOy7775h22Hy
fLbZZmv1o3UKNE7svPz666/BPvvsE0wyySThN+e/2M1QJ6O46aabgjnmmCM8
fooppqiUF8799ttvc33eU089tUabuOGGG3K9Z0cGP3KrrrpqpI1X0W1AK8vj
//73v3D98+abbw6uuOKK4NBDD63Jj8kmmyw47bTTwvHYbbfdVpNuvfXW4Kyz
zgp22GGHmrGaGRfyjqJ1sOa8/PLLB3/961+9ZV76WeembG2iaA+KaFfw97r4
4otX+kdfkiZQbpppX7DlcY+fZppp2s6+XXWl49JRymg7gGY21VRTecu29LN8
0Tixc4NewDzffO+ZZ545ePDBBxOd+9BDD9WUl+7du+f6vB999FEw9dRT19yX
9lo0xh9//BH069cvtGWfYYYZWtoGlK08onPZehxp9913T3w++0+33XbbmufC
Pu73339v6tlE43z22WfB+uuvH+6znXzyyaWfiSrK1CaK9qGIdmXMmDHhdfD9
6drhSxNoD5ppXy688MKa47H1aTdtQnWl49JRymg7cNFFF4X7bmaccUbpZwWj
cWLn5vTTT6/63sSzTMMuu+xSdT52Qnmy5ZZbevvAww8/PNf7dhbGjRtXY3dd
ZBtQtvL4+OOP15Q17MvSwhqFe52hQ4c29WwiG9j7Lf1MRNHqNlG0J0W0K/gC
mG+++aQJtDFp2xf2xrlryNtss02BT5w9qisdi45YRssOe5SnnXZa6WctQuPE
zsV7771X9b3x056W119/vWltISn33XefVzsj7bjjjrndt7Ox9NJLt6QNKGN5
dPcKsw/g66+/Tn0dn1817OxEOWBPrvQzEUWRbSL93EknnZTb9UVxFNGu4HNF
mkB7k7Z9eeKJJ8IxL75fjznmmErcpHZGdaVj0RHLaNlZccUVpZ+1kFbNnUXx
EBvCfGf2qDXSvhEvx+z9RVvAF2gecJ9FFlkkvA+22G4fiP2kyIbVVlutJW1A
Gcsj5crOiyWXXLKh6/Acbpmdc845m3o2kR2u7bv0M2FTVJuIT6DZZ589vJ9o
f4poV4444ghpAm1Oq8ZcZUJ1RYjmYB+n9LPWoXa8czBhwoQqW59VVlml4Wst
uOCC4TXw05kX+GPnHl26dAk+//zzGtvgPO/d2Vh99dULbwPKWB7R4txytv/+
+zd0LezZ3XEbfnPlD6Ic2HG/pJ8JlyLaRHw/4g+I60s/6xgU0a4cffTR0gTa
nFaMucqG6ooQzSH9rLWoHe8cXHfddVXf+aCDDmr4WqbOEgckD9hXbPZ1Dxw4
MPzN9WOAn3mRDa1oA8pYHrPyfQbDhg2ruZba1vIg/UzEUUSbeMYZZ1SuL/2s
YyBNQCRB8y7VFSGaRfpZa1E73jnAv4r9ndPEFHRZY401wmvceOONGT7h/2Hi
F7J3jngX4PpjZ68esRJF87SiDShjeczK9xnsscceNeM2+VMtD9LPRBx5t4l3
3nlnaI8q/axjIU1AJEHzLtUVIZpF+llrUTveOXDn89hzNYrxSzZ+/PgMn/D/
89BDD1WekRg9hq222qqmH/zoo48yv39npBVtQBnL47rrrlv1TI36PnvjjTeC
aaaZpqa8Pvroo009n8gO6WcijjzbRPwsu3GzpJ91DKQJiCRo3qW6IkSzSD9r
LWrHOwfENnT7kcsuu6yha+H3nZQ1v//+e7DEEkuEz7b99ttX/Q0/VO7zP/XU
U5k/g4+PP/44OOWUU8Jnwk/XXHPNFSb0lQMOOCB4+OGHK3ZySSCuNvsCt9xy
y2COOeYIfUgb6NvxebrccsuF/ubRhojbOHTo0IaenRjH559/fjg2WXTRRUNf
1SuvvHLQr1+/4K677gqPaUUbULbymJXvs19++SVYaqmlat7t2GOPber56vHT
Tz8Fd9xxR3D88ccHG264YfgN8Qu36aabBkcddVRw2223hf6WktLOZT4JcWN3
nu3kk08Of1tggQXC9yauxCGHHBI888wzDd3vxRdfDOvhLrvsEvTo0SMc5yy2
2GJB//79w+/2ww8/ZPVqwdVXXx3ue/cl9k270A5EHU967LHH6t4T7fq0004L
bYcp/7wb3/qEE04Ibr755nCt4/LLLw9eeeWVxO+RV561sk28/vrrg+mmm66m
fWD9wM33emWNGCXUEexaV1hhheAf//hHWLeWWWaZYJNNNgnOPPPMwteYsvxm
RbUZWbZ1RbQrzWoCRbZF9cirDOOLgfejbPz3v/8Nf6M8DRgwILwPdR5/qTfc
cEPWr5Rb+8IYZcSIEUGfPn2CeeaZJ/HzZNk2d7a6Auq7k5ePRspokWPD7777
Lvj3v/8d7LPPPmHsSlM3+ffgwYOD5557LtU4uRmyyPc4/Yx6ePfdd4dtK+1p
165dw3tQdy+66KJU43fIek4AWbXTedTRss6dRfHYvlZMYn8a5YM2rwzwLDwX
84vPPvus6m+nn356zfPffvvtuT7Pe++9F7ZtJr4jCbuiWWaZpeZZaJ/iYj/i
L582YLvttgumn376qnPx90abfe6554ZxKN1rm4QNnmlj6oEWSVs3+eSTR17P
XNP43y+yDShbecQmxH2eRnyf4YPNvQ79V5598siRI2v8A/rSsssuG/ZXcbRz
mU+Db+zO8zB2iXse9tzttddewTfffJPoPhy35557hmU77tvQN9v2ts1A/Hh7
b6CdGKe5oLHGPduhhx4aeS/zDe3vS97ShvjemXFbPfLKs1a3ieedd17dOmon
xtJRXHnllTV1ypfIQ+JX52ErbpPVNyuyzciyrTMU0a40qgm0oi2KI+syzPyO
uFPMdezzv//++9APg29di0TfnwV5tC+UHezWmbPZZWuyySar+zxZts2dra6A
+u5k5aORMtqKsSE6CvpcvfZm7rnnDtfjmXPecsst4TzTJNapmyXLehmln737
7rthPYx7zzXXXLNKq4wi67qfZTudRx1t9ThRlI/7778/shxQdykL6O+tsm1m
bGTaE9oWF9Yb3Oe+5JJLcnuet99+O9TW7fpH+2t0ENYG6O/t50En9/nLuvTS
S8O+JCr/udfGG29ct10nse+xHmjtrr84+oPhw4cHb775ZlgWjI85XyqiDShb
eWQdyH4G2uMkY0AD/ZXbl5k2lvWUPCAuLXNscy/ae/oS1jBfe+21cD3I2HPa
6cILL/Rer53LfFrcsTtxEFkzTfI8pIUWWihcy4wD/XXWWWetlKfevXuHa6mM
6TfYYIOaazI+MfFSmuXbb7/11nHfGJzvyzgKG0WfDhs3BjdrHiTKDlqugfEQ
Y2r7Wuecc07sc+eVZ2VoEy+++OJwvuOb81Aezd9MwvbGhe/kns9ckjV/2spn
n302tO21x7rm+qxp50FW36zINiPLts6miHalEU2glW2RS9ZleNCgQWHdjppD
ffrpp5FzMtKJJ57Y9Dtl3b7Qt/N9sMfzHZ9EP8uqbe5sdQXUd9cvH42W0VaM
Dd117cMOOyx4+eWXwzEyscvq6S8mZWHPneWYyaefsS+rS5cuid6H8+PIsu5n
3U7nUUfLME4U5YPy7mqlUWn++ecPxzO0yT/++GMhz7fTTjuF98bmEv3XZdSo
UTXPedxxx+XyLNg/devWrepeo0ePrjmOtQjqi30cdqcuDz74YNgmYvfqy2/T
PtEG0G8wz8I+C5tlX58U14azfxDbWvsc3zwM2Evka8uKaAPKVh4b9X1Gfp99
9tnBVFNNVXU+tuvYTucFdQRbYnM/1oJ8/tXGjh3r7Udcm/B2LvON4I7d3cSY
kHXIuGPWW2+9SHv1e+65pzL/Y8zxwAMP1BzDOMQ3jszKHoKxmLuG5huD27DG
6j5P1Bj81Vdfrbp+lG3j4YcfXjkGnTqKvPKsjG2iO+dI4v+MeRL5Ys5hbf6a
a66JfA/XjoF/22P1LMjymxXVZmTd1tnk3a5AWk2gDG2RIY8yzLfEHsLV20za
aKONKv2er25HtQVJyaN9ef7558O2dcYZZwz+9re/ect3HFm1zZ2trkAZ6ks7
9N2NltGix4Y33XRT1Tn4OHFhDB9Xzkxqdhya9ZjJt2Zv7MKYk+y6666h7Qm6
kbvX0CTWK3xkXfezbKfzqKNlHCeK8oDfgBlmmCFRO2ESdXC//fYL7W3zgjbE
lEXaVh8+HSAPuxTgGdx7vfXWW95j8S1lH4f+F4dtL2Qn2hb33Ykv6luHwb49
CrcfqLe2Sv/aqjagLOWRfsL194+2h78JX8JPG9+APSXueehuxPHMW3e2+1f2
O7///vuRx/ps0LBNt2nnMt8IUWN39tq+8847leMYL9GHRu2poL65YEtr+7iK
22fu8wOILpoV7vyj3hicb+4+T9QY3N5TP/PMM0dek7pgniNqzSPPPCtjm9iI
fobfF/sc9oPGgZ8X9z1Yl46q12nJ85vl2Wbk2dbl2a4Y0mgCZWqLII8ybPQT
9gVF7Qflu3344YehjQP9tvmduWyz9SGv9uXPP/8M/4sNiKul1NPPsmqbO1Nd
gTLVl3bou5spo5D32JDvyfuZYxmvo0368F2b/OPdTPLZdqQhyzET+PQzEr7D
2Hdpw7P77DvR2HxkXfezaqfzqqNlHCeKcoFmkdS20y3X2OtmDXVq6aWXrvSb
UbBu6T4TftLzwNfnjhkzxnvskCFDao6N2yPPvm/3ePpF2gsfL730Us3x+Azw
wV5wW4+ijarnH4BzXB29yDagDOXR5/uskYS/43vvvTeTZ4qD9Xf7m9WLTcB6
m/usrvbcrmW+UXxj94MPPjjyePbE+sbv2BmaMaTBji27xhprxD4HuqevLEXl
fVqwpXfzPQ78TrrPEjUG32KLLSrHkDdx/mjYg8Bx6L4+8sqzsraJafUzdyzL
voUkGr2rV5Cwtc2CPMt5nm1Gnm1dnu1K3PNHaQJlaouKKMP0we6xzFPdsQL7
tvi2+IhuhqLaF3dPUT1tIqu2uTPVFShTfWmXvtuQtoxC3mNDfIfZx+JbPoo7
77yz5trErMiSrPPdp5+xDzrKZwx+Zty2h+/mI8+630w7nUcdLes4sSNA2/zG
G2+E+1/L4mu/GbDlwlYy6Z5vkxjjR/VTjYJtLteedtppQ7+RUXBf1+4TX4V5
4Lbp2Cajifu48cYba/Ip6ljAdsk9PsrmzuD6aYzSz9nHbx9HTJQkLLzwwi1t
A1pdHl3fZ/Rr+GJhz3BUwn4YP31ovq6NM3pwvW/aDLatNO08/jLiwFbPLUOU
W5t2LfON4o7dycd6bbtbTkwysXiAcYu9Dku+1sMtP/XGTGnIcwzu7qeIWyel
fES1SXnmWVnbxDT6GeWSuGP28cccc0yi+/jWBmhnm7W5ybuc59lm5NnW5dWu
2CTVBMrUFhVVhu25lUmMMfOiqPbFtsUg1dMmsmqbO0tdgTLVF2iHvtsmbRmF
vMeGxGO0j41bO8I+C/9h9vF83yzJOt9d/QwNiH2Icbg+xhiL+Miz7jfaTudV
R8s6TmxniA/EnmG0HbsMrbTSSqEvpqLi3OYF5Zv4uPjHc9uNqBTlq6IR0JTZ
O891k/igsP0YkoilkgfoEcQ25h7Y+8bZcfraDXTWKHz7ER566KHY5+nevXvV
8dj1unzyySc19tNR+9pdyhKDt1XlER8a9jXT6rKss9jrSqQpp5zSuye/WYgL
YN8nzmbThjJJLGf8yLGm49KOZb4Z3LF7PT+qQB65fu5IjNEMro0Fecp+47jk
K9dZrXvmOQb3+cHHf2uUpr3bbruFflhd8sqzMreJafQz1krdd8X/RlLcMkD6
17/+1dTz513O82wz8mzr8mpXbJJqAmVqi4oqw/vss0/NcXHzuGYosn3Zeuut
q46vp01k1TZ3lroCZaov0A59t03aMgp5jw1d3yX1/Bq7vuGx2chynp91vkfF
34zD9a3PO/run2fdb7SdzqOOlnmc2I7QDrE30JfvdsJutN01NAPvQTwSYoOg
J/j8QZLq2UumwWjQaLhJ7PqWXXbZqmfhGbO2h7PB9jNqrzz3xQ6JGMBuHqFx
RNFIf5GkjvqumyS+d9LrF01R5dHn+yxuD0EUlAfXf8LUU08dPPbYY009nwux
M+17JF3DT0o7lflmcMfuxBBKws477xxbBvHFUa/fSJKyWvfMcwweZQuA/vyf
//wn8TPmlWdlbhPT6GeubxHS008/nfhedrwvk1gHb4a8y3kRbUYebV1e7YpN
Uk2gTG1RUWXYNy+L+sbNUmT7klabyKptNnT0ugJlqi/QDn23TVH6WZq6Y+Iz
moR9Vhz4QrGPx841S7LO90b0M9cmjxS13xPyqPuNttN51NEyjxPbDebTxh9X
knTggQe2+pFzgT6mZ8+eNe/L2k8WMHYy+/XIQ2IV1kv4OXCfB1+CRYLNHLFF
5p133sgy0QotwV03QRNKSju0AXmVR/os95rs3WyEJ598suZaiy66aFPP5+Ku
X2EjmzdlLfPN0OjY/b777qt5F9v+3R1HYAdOrPS0KStdNM8xOOuTth9XO9G2
M89J4qMwrzwrc5uYRj/zxWLHj0lSHnnkkZrz2QPTDHmX81a1Gc22dXm1KzZJ
NYEytUVFleEi9bMi25e02kRWbXMcHamuQJnqC7RD321TRv3M3atIwn99FOx/
sY/Nev9m1vneiH6GTZt773p7Pl2arfuNttN51NEyjxPbDZ+v7XrpggsuaPVj
5wJaoi92X7P9Lpr18ssvnzqffemFF17I6G3jefHFF4OddtopjLfOffGRhc8u
Ype4z/T6669HXiev/sLVfIkfmZR2aQPyKI92PBzzXev5E4vDF289qzKKTZ4b
r9T1Y5YlZS/zzdDo2J2YRu67GDtYvg/7du2/EfekleQ5BgfWNaLikZPwaUOM
vai4VXnmWZnbxDT6meszhZRmrdpXZkn1/ONGUUQ5L7rNyKqty6NdcUmiCZSt
LSqqDBepnxXZvjSiTTTbNkfR0eoKlK2+QNn7bpcy6me++J5xPsfc/R1oTVmT
Zb4XrZ9lVfcbaafzqqNlHie2E999911suY5K+OFqNq5tHmAretVVVzV1Dfyk
u+9rx5ZuBNNmsr8N349JkzvnIPF8eULcCHvtlH4azRubVvDt+26FluD6SEyz
blJUG1DG8uj6Pqs3RqmHG4OIlJXGRawy99pJ/AampV3KfDM0OnZnnOG+C/lD
3z5x4sSavz3//POZPnda8h6Dw0033VTlI9SXWC/x+cPIM8/K3Cam0c/mm2++
mjwiz5NCmfXFZolbh4+jiHJeVJuRdVuXR7vikkQTKFtbVFQZLlI/K7J9aUSb
gGbaZpeOWlegbPUFyt53u5RRP7v33ntrrs98PUov2nHHHauOvfXWW+u+QyNk
le9F6WdZ1/1G2um86miZx4ntBP6+48pzXMraz1GzfPTRR+Fz8X2bAX3XfddG
162BfcUmfkqS2Bk2l156ac2zXHHFFQ0/Sxz0xSeddFLYB5h7sUfdtSUqi5bg
+lSlfUuq6RbRBpSxPPp8nzW7H9u393vo0KFNXdNAHE332vgQzIp2K/PN0OjY
Hdz4T127dg1/p/933zPLeCuNUMQYHIiFV8/vAesl7L2xyTPPytwmptHPfPnK
+nQafPFYGI82QhHlPO82I6+2Lo92xSWJJlC2tqioMlykflZk+9KofgaNts2G
jl5XoGz1Bcred7uUUT8D395xfBW7Prcpq7b9DO+TJ1nke976WV51v5F2Oq86
WuZxYjuBLUdcWY5LzdrVZA26Es9FOW0Gd62HeJnNYOoNscyTxAywwS+Vm++n
nnpqU8/jgzbD7QvWWmstb50qi5Yw++yz11w3adypItqAMpZHn+8z4uo2Cj44
XT0uyfdNg3v9ZvVIQzuW+WZoZuzOWN0+lzGQwfVtkfcYrB5FjcGBsoKf7y5d
usSOB9kDYJNXnpW5TUyjn2222WY170G89TS4ZZbv0Ax5l/M824w827q82hWb
pJpAmdqiospwkfpZke1LM/oZNNo2d5a6AmWqL9AOfbdNWfWzn376KVh33XVr
7oP2RJnFT9fVV18dzDzzzJW/rbTSSuF+j7xpNt/z1M/yrPuNttN51NEyjxPb
CeJhR5XheikrG5OsMD7xmtWXXJ/oW2yxRcPXwtaS/dJcp95aho9nnnmmJt+J
T5s15557btU9sPfFX6KPsmgJtPfude+///5E71tEG1DG8uj6PmN/yNdff93w
9dDe3G9AXOSksVyS4I6pqE+vvPJK6ut8+umnVf9uxzLfDI2O3dH8TRvma4Nc
f7WMfRqx87n++usz2fdb5BjcQLnZe++9I2Pmsh5sk1eelblNTKOf+cYl7BNP
CuNdt8yusMIKTT1/3uU8zzYjz7Yur3bFJqkmUKa2qKgyXKR+VmT70qx+Zkjb
NneWugJlqi/QDn23TVn1M8A33iWXXOJ9JzuhY+ED7Y8//qh7zSxpNN/z1M/y
rPuNttN51NEyjxPbCbe8pEmPPvpoqx+/CrM+06xeQWwE+z0pd42Alo0PM67R
qOYxbty4mnxvRj/xwVqF66Mwbo9cWbQEN4YIid+SUEQbULbyCOuvv37VtZZc
csmGr0X/44ttsN122zV8TR/46nTvsfnmm6e6Bvtm0ArNnvN2LfPN0OjYHX8P
7rvcddddlb/zLdy/X3bZZame7Yknngj3Eay44oqpzvORdgyOruo+f9QYnDzb
aqutIq81duxYb3wmyp4dLz2vPCtzm5hGPyPGrm/MgR/tJHzyySc15zYbIy7v
cp5Xm5F3W5dXu2KTVBMoU1tUVBluZfzNPNuXtNpEFm1zZ6orUKb6Au3Qd9uU
WT8D/AWZ5+Ldt9lmm2DttdcObdMOPvjgcC9glD6UFVnne176Wd51v9F2Oo86
WuZxYjsxZswYbx9fL7EW0oxPsKyh3JpnQ9NuhjXWWKOqbES1nfXAPo9rsNcY
X1iN4FuDRJPLEp8PvDg/Heg3adqNvPoLYsq416WfQHOsR95tQBnLI2XJ9d/Z
v3//hp/rkEMOqcl/YtTExXBuhBNPPNHbBmGXlwQ0M/oObJZNm9WuZb4ZGh27
EzvJPo996L/++mvl74xX3Xdlj/H48eMTXR9bRRPDlXs1izsGX3jhhWOPf+ml
l2qeP2oMTl1kvTZurZbxqG99D3+0hrzyrMxtoqufLbvsspHHUk+JyeW+C35J
ksBaqn0ea9wvv/xyU8+fdznPq83Iu63Lq12xSaoJlKktKqoMF6mfFdm+pNUm
smibO1NdgTLVF2iHvtumzPrZUUcdFR7LOn4r40Jkne956Wd51/1G2+k86miZ
x4ntBDae88wzT01e1kvE8CsTtp3q/PPP741LkwS3bWOPeCOwl3iGGWYIr3Hy
ySc3dA2D60OW75UlAwYMqPm+aCNRuPZQpLi5SSP9hRvT0VdH8UXpaosk1lXq
0aNHj6pz8AOQJWUrj+DuAyXdfPPNDV3r4Ycf9uZ92vgYScBG3/blaRJ98siR
I2PPRTujr+H4iy66qPJ7u5b5Zmh07O7aLLrv8dRTT3n7CPpZ4j/EQX9tbBhX
WWWVRl+tCvY42c/BvDPOr8fll19e8+zEWfJhtOwHH3ww9hmefvrpmmuauE2Q
V56VuU1cYIEFUvVj7E9y3yNpnHV3fbWZdQJD3uU8rzYj77Yur3bFJqkmULa2
qIgyXKR+VmT7suWWW9a043Fk0TZ3proCZasv7dB326Qto1DE2PCEE04Ij8OG
K+k6c15kne/Yz9nHEFejHrvsskvNtbE3s8m77jfaTudRR8s8Tmw3mAu7dotx
CRuWqPa4VfTp06fqGdPECTdgL2+vF9JnNaJ74KuAsso15pxzzpp6mpbu3btX
vRvfKkvOOeecmm+MZvfDDz/UHPvqq68Gc801V83xcbFY2Vuftr9gX6F9PPno
Y9NNN/WWUeJiRIEfOjcuPG1JlnbMZSqPBtf3GamRdx48eHCNT0sSdnbNPF8c
22+/vfc7891OO+20mrUYyi5anmnXiJ9jr3+1c5lvlEbG7vhwtc8h1rkPruX7
Puy/oP93Yd0G7da2SaIfygL2KLjPgQ2jD2w8zDqHnfD97cOMBevtH6Ye2P5x
fWukeeVZWdtEd92SuYZ7fdZvja32u+++621novYtGYhXjA9GO+/rjTOTkmc5
z6vNyLuty7NdMfhsnd955x3vsWVqi4oow3vuuWfN9V1fn1lSVPvi838eZ3uf
Rdvc2eoKlKm+tEvfbUhbRiHvsaG9p4x157j4B0WQdb67dmrseakHPo/cPHf9
Pudd95tpp/Ooo2UdJ7Yjt99+e6QfPzuxD6oZG5i8cONJUKfq2abYvP3221V+
+rAZ+vbbb1M/x1dffVW13w6tvFkWXXTRmu/A+CorbrnlFu+35j3w1YGdK2sD
u+++e5ivvmOPOOKI8Fq33nprzf6E448/vub4uPEjdd+OCxPXRrKv263PJmH3
igZlgw2SG7vXpJ49e4ZrQ6NGjWoyR8tTHm3cfmexxRZLdf7HH38c2p26+Ua7
cfjhh+emnQF7Qn3zEDvNN998YR+NfbfdDzPGcveUtnOZbxR37M4YLGoPCFB3
7Fjj2PFFtTs+20Y7secc+wn897AW6NoixfXZaTE+P9wyyjeiDrHmx1jCN6Yy
iXHnDTfcEHz33XdV17bb9nvvvTfyGRhD2/Nf5gVF5VlZ20Tf3Oiwww6r/J32
Ed+4yy+/fOU34pO470I7EDUnYI+6e58s44TnWc7zajPybuvybFcMPn8txJL2
Uaa2CPIuw64NDClPm5Oi2hd33ZjEGCSKLNrmzlZXoEz1pV36bkPaMgp5jw3x
NeZeH62H9SvGxzvttFOw7777hmN29kaxRxE7Psq1L85ks2Sd7275I9WbGxk/
5HZ68803q47Ju+43007nUUfLOk5sV6699tqavYJ2Ym96K/dRR0E98D0vdXH4
8OF144pwjD03x74+qY9XQDN7/PHHQ7vpWWedteoZKJ/0CVwvqb5AO4LdJWsS
O++8s/fdaP/QwNnb1qwfOvqketqEnXr16uX93bQptNMG8t5dOyHF7afxxXSM
a3uxh4p7Xr4nMYjd+N9xKWksXx+tLo/APRhnYSfK2Iny4j4Paxqff/552Pf4
EmWL+s4+f8Zkru800pprrtm0X6GksN7o28cZl8hz39peu5f5RvDp8Giq7voV
Yyh8QRB7yBxHv/Dss8/GXr/RWM5mzJEVlF1fWY1Kxx57rHdMZhJ2mwZ7LIhG
HhWziD0k5jj2F0T5lcgrz8rWJoJv3wppueWWC+sLfSXpzjvvrDqPcah7DmXT
1cQZ32J7YI6hrTj77LObemYfeXyzPNuMPNs6yLtdYRzvq89xe2vK0hYZ8irD
jAt8ecMcOs/1rLzbF8qE7xi7LXbJom3ujHUFylJf2qnvbqSMFjE2dH2ypUnk
PTZ1L7zwQuTzpCXLfH/uuee8z43tWBSvvPKKVydCx7TJs+5n0U7nUUfLOE5s
Z9hreMUVV4R7sbDjIPYd9rPo4754r2XALgPsE2ddz9YB6YPQU1m3wI6ZNhq7
evRC168AOip6WFIGDhyYuFydcsopda/3zDPPRGrCcQn9rhnQbOppE6yBsA+R
/am2fY+dsE/EbpT2gjYNH9FR1+vdu3e4h5y92DBixIhg//33r1qDsBPaN20s
tpLNfAf2Vpr9tXbCpwD2EMSDaYZWlkdgL2PU+khWibzKIl55WtDykvZxtP1x
PhfavcynBR3V9eFuf0/ae8by7hqTWX9LwsUXXxzmR5LvM8000zQdmzaKYcOG
1W1HqSPEnwbfGJzfGLPY7YE9FiRxD/bTsH6LTsu6t+2fgzFTPQ00rzwrU5sI
+LExvgij0hlnnOE9l3riru2xb2DjjTcOfXbQbtrjU2xR6UvzIqtvVlSbkXVb
Z5NHu0Kfd+mll4b+w+Lae9aAyD+0hry+UVZkVYaZg/Nuffv2je3nsS9n7E5b
mIc/tKzbF/Zu817MPeL8yWBDg82MO8fPqm3ujHUFylJfytx3N1pGixwbok9F
2QklTZSjqHKSlizyHXsuNEbKXdQzoxsOGjSoYot23XXXhfkTd84mm2wS6h2G
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
Yt999518xuOPP+6J+4LSpEkTz32vv/665zf9yq+//iqfjzknzPVoD5OlS5da
rx07dmxgu7joS1HmnSCSWgOSIu9rSdLfEt8M+2KMX4w5fR5fvny5uPTSS2V9
8Z133XVXccYZZ1j7Ztr11lm9erW47777xDnnnCNzJ6KN999/f/n/7733XvHG
G2/I7xoXF330m2++kc/s0KGD2G233Qp17tu3r3jmmWfkNXmRzX/66Sf5nldf
fbU46qijZD3++te/iuOOO05cfvnl4qmnnorUvi77QhJ1DdKfoV7PPvusXKuw
PjVo0ED2BbwL5KC49c56Hkxi7fTDlewLklqHyqGqrxlRZSI/yv1WkKEQA6xT
p04yjr4JnhlGthoxYkShz2LdCLr2ww8/jNLUTsDYV+1fr149OccBM08wyi67
7FLWWpc0lSqvgEpao0n5/PLLL3KuRr/EPK5/18cee0xeAztQUz4wC3zcdcaM
GSPHrd/1NWvWFA899FDoev73v/8VvXv3FhtuuGFgPdBfX3755Yp+V4Dzgi22
2CKwHihoj+OPP17qJ4LAnIQ8xhjT+v3ff/+9WLVqldRp2J7fuXPnknWAfbZt
bQJHHnmk730u5RPw0UcfSX0N2l/9Zp06dcQ222zjqQvkMshsQWCNue2224q+
C7475j9bv0zrXCfp90wSF22W5NiYNWtWyef4FayHw4YNi3QP1nDIhIjdGnQd
vh9kYoB9XZhnN2/e3PN+yBfvNyfZSLovxZ13bLnVk1gDkqIS1pIkv+WaNWvk
fI09nTn2vvjii8I4r127tm/dsf9Te6C06m0DugXI0aXG00477STXvyFDhshz
oEmTJhWK2o+YuOijv/32m9xP1KpVK/CZaF/offR/y0I2f+655+Q+uVT7wqcI
c2EQrvtCUnX1059hL416BT37kEMOiXSWmJd5sNy104+kZV+Q5DoUl+qyZsSR
iXTK/VZYi+bMmSN1Fnq7bLTRRp66rlixQupmSo0l/P3WW2+V9/jls1TXTZ06
NVRbuwT6PlWniy66qPDvjzzyiLXe0O9nTaXKK6DS1mhSPtOnT5f90+9bY04f
OXJkYB/T5w3YIGHPh3O7MPMm7nnxxRdL1hO64/r16xfu6dixo9QZ/+tf/7Lq
ZzD+cA5Qie8KOcp8Zp8+feQZCnTlsME9++yzi+YYFKwTtlzheKc2bdr4rg9f
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
olevXuKiiy4SQ4YMEZMnTxarV6/O+pUIIYQQQgghhBBCSIbA3kzXnaHUqVNH
rF+/PuuqxWLs2LGiSZMmonbt2p73ilNq1KghWrVqJa677jrx/fffZ/16hBBC
CCGEEEIIISRlRowY4dEZwR6tUvVnij/++EPMnDlTtGzZ0lc31qZNG9GtWzfR
uXNnceCBB4qddtpJ1KxZ0/f6rbfeWtxzzz1ZvxohhBBCCCGEEEIISRH4b266
6aZFeqJTTz0162olxltvvSU23HBDjy6scePG1ut///13qXdr27atrx5t8ODB
Kb8FIYQQQgghhBBCCNF5/vnnxaBBg1L7vVdffVV07dpV6oyuuOIKsXbt2tR+
Ow222247jw4MMc9K8dJLL0lfVpsObdKkSSnUnBBCCCGEEEIIIYSYfP3111Lf
849//CPrqlQZdtttN4/+C/kCwvDYY49Z9WfwCyWEEEIIIYQQQggh6YKYXe3b
t5f6GerPkqN169ax9WegU6dOVh3ae++957DWhBBCCCGEEEIIIcTkxhtvLOhm
qD9LjnL1Z6NGjbLqzyZPnuyw1oQQQgghhBBCCCFEZ8qUKaJGjRrUnzmgXP3Z
3Llzrfoz5C4lhBBCCCGEEEIIIe5B/P7NNtusSDdD/VlylKs/w/ex6c9Gjhzp
sNaEEEIIIYQQQggh4UBMsFdeeUWce+65Yscdd5R2WjozZswQp59+umjWrJnY
dtttxe677y5OPvlkeY+NdevWiYcffliccMIJokWLFjJW/9577y3OO+88mW8x
Kp999pkYPHiw6NKlizjggAPE9ttvL8see+whzj//fPnM33//3ff+xx9/XGy+
+eYe3UyTJk3EHXfcUVRef/113+fARqp79+6iYcOG4scff5T/9vPPP4uhQ4eK
ffbZR74n2mbcuHHW+3/99Vfpj4hYXzvvvLPn73imWR9bgU3Wd999J++57777
Aq/98MMPozR1bMrVn919991W/RnanBBCCCGEEEIIISQLfvnlF6kXg/4JOjNd
Z4F8iGDJkiXisMMOs+o1VEE8MZ0xY8aIevXq+V5fs2ZN8dBDD4Wq40cffSRO
O+00eY+6v06dOmKbbbbxPHevvfYS3377recZw4YNC6y/WU466aSi+6G7u/nm
mz35Jb///nuxatUq8fe//936HNhTAegm58yZI/r27VvULhtttJGnritWrJB6
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
r+e6W2+91XPdtttua40f/+6774rtt9/ec/0rr7xircOBBx7o0WGZcbVgu/bp
p58W/Vvv3r09v4E2iAJ0SeYzfv7558B7oC9T1x500EHW2GYvvviiNSfn6NGj
I9WvXGzf4dBDDw117/z586VtnU131qZNG2veCAV0pdtss03h+tq1a4tp06Yl
9VqEEEIIIYQQQgghYsGCBaHswnSgs4hq87Rs2TKrbsRkwoQJVj0K9EcfffSR
+OWXX2Sde/XqJXUltmsvvfRS+ayJEyeKQYMGFZ596qmnBuoKn3vuObHppptK
X0Qd03YMZd68eSXbVsdmn/XZZ5/5Xv/ee+8V7LHg67l06VLfa6GHNJ+Ne/GM
NPj6669lHc067LDDDuLXX3/1vQ/vf/PNN4stt9zS+h2hNy2lpzz22GM99zVp
0iTpVySEEEIIIYQQQkg1BvojU/8AXc/vv//ue891113nuadmzZri448/9r3H
ZlcG/ZdpVwa/yM0339yqT7GVdu3aWf9d6dZgc6a47777rNfuvffeMp8l7LhQ
pkyZUrgHOjvEFDPvQayusLku//3vf1t/d8iQIdbrV65cKXbZZZfCdeedd17g
87/77jvr86FHch0Lbe3ateLMM8/0/T7Qkd5yyy3i/vvvl/Z0+N94H/y7zW5O
FfjWQk9aisaNG1vvpx8nIYQQQgghhBBCygE+ivfee6/o3Lmzrw5j3333lXH7
YZMFoIe588475T01atSw3oM491dffbV45JFHpM8dfCNHjBghdU1+vwMbI9iI
Pf3004X6jR071mrPZP4WYl7BvsnPfgk6vSeffLLw3HXr1om6desGPvfGG2+U
ukP1rn42bijNmjUT1157rRgzZownHhraGM84++yzPflE9XLCCSfIdl64cKF4
//33xQ033ODxhUSe0AceeED8+OOPnm/5wgsvSHs7v+fXq1dP1vGtt95KrP/M
nTtX9OvXT5x44omF3AZJle22205cfvnlVn9dG4cddpjnGegPYXWbhBBCCCGE
EEIIITZGjhwZWp+hfCwnT54cSQ+yevVqqbMJez10HjrTp0+32n3BvxI6KcRT
09/H1M9BDzNjxgzPu8PvEjo787mNGjUS48aNk9dA9+enk/Mrpn4qShuj9O/f
Xzz44IO+f4cu8KuvvvK8j5/9nVkGDBhQdr9RBNUzbIFectdddxVHHXWUzD2B
PBD45kH+njagP0TbqOeiH0BvSQghhBBCCCGEEFIdgG/gSy+9JO2zUCZNmuRr
lwRfvzvuuEMMHz5cxqMP0sPA33Hq1Kky1+eoUaOkni0oRj3JN4iRBv3b4MGD
5bcnhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQkhlsmbNGnHCCSeIgw8+2LcccsghYujQoU5+/+qr
r5bPD/r9Hj16OPltUrVZv369mDNnjrjgggtE586ds66Oh8WLF4ujjz46sO8f
ccQR4r333ov03DvuuKNw7zHHHCNOOeUUccYZZ4gzzzxTnHbaaXK8H3nkkeLQ
Qw8Vxx9/vPj5558dvSEh6TN//nwxcOBA2e8JIVWHefPmiU6dOomOHTuK4cOH
i19++cXZb6UhP3Cu8ue3334TU6dOFRdeeKFsH+wT8N9LL71UTJ8+Pevq5ZJF
ixaJ6667TrRr1058/fXXWVcnV0QZz2nOM6Tqkfe9J0mGGTNmiA022KBk2XHH
HRP/7dGjR4f67fr164s//vgj8d8nVY/vv/9eTJo0SfTp00c0aNCg0Id22GGH
rKvm4fbbbw/V/6HrisKee+4Z6rkoG2+8sVi3bp2jNyTEPT/99JPcZ5177rly
nKu+ve2222ZdNUJIQixbtkyuV/r6lfTZqmv5gXNVOJ588smi9reV1q1biy+/
/DLrqmbKN998I8aPHy/7a6NGjYraZ/ny5VlXL3PijOc05hlS9aikvSdJjlmz
Zsn16qGHHpL2YBtttJFnrapRo0aiOviVK1eKunXrWtfF4447TowYMUI8/PDD
YvLkyWLJkiWJ/S6pmkAH1KZNG1GzZk1rn8rjHAa7rylTpogJEyaIMWPGiEGD
BlnrvuGGG8o1PSzvvvuufN5VV10ldtppJ8/zdtllF9G/f39pp4ZzNkIqFexD
N9lkE+u44Z6UkKoD7EDMMV6nTh151l8uacgPnKvCcdlllxXaZf/99xfjxo0T
gwcPFrVq1fK024knnph1dTPhlVdeEbvvvruUDf30i9VZf1bOeHY5z5CqRyXu
PYkbMEdstdVW1n4Af7OkgB227TfgX0ZIVH7//XfRt29fabdu67+VMIdB3vGT
hf75z3/GeuYPP/wgtt9++8JzRo4cKduKkKrAqFGjxGGHHWY9i+GelJCqA85U
bfbTSexr05AfOFeVBrZUqk222247sXbt2sLfcCZothvOB6sjs2fPFh06dJDx
N5o2bUr9mUE549nlPEOqHlVh70mS4a233pLffOutt5Zrut4PnnnmmUR+4+mn
n5bPa968uaevJfUbpPryxRdfeOyvK2EOe/DBB2VdYYcPe0+9/ltuuWWRLBmF
Aw88UD6jX79+CdeYkHwAP5bNNtuMe1JCqiiwwd50002Lxvipp56a+O+4lh84
V9lBjBZdF4TYQSaIhaa3W+/evTOoab6AH0OTJk2oP/Mh6nhOa54hVY9K3XuS
ZFAxmRBjHDaJej/A38oFPsKwh8EZHHxF9ef/6U9/kn8npFxatGhRcXMY4vuj
rvDjPOqoozzy0D333BP5mTgb2WKLLRK3HyUkDZ5//nk5HsKw7777ck9KQhGl
X5H88Oqrr4quXbuKtm3biiuuuCL2mVIp4soPYfsV5yoviCOjt8ldd93luQby
DL773nvvLQYMGCBWrFiRQU3zB2IuUX/mT9TxnNY8Q6oelbj3JMkAe2B8c8RG
6tatW1E/OO+888p+/jnnnCOfhdwBpg8n4oESkgT/+Mc/Km4OU7HKXn75ZTFt
2jSPPAR7zagsWLBA3tu4cWMHNSbEHcgfBh8ejOUwwDeKe1JSiqj9ilQ/4sgP
UfoV5yovJ598clGbICYzCQdyklJ/5k8l7gdIZcK+Vj2Bf3e9evXkN3/77bdl
HmS9H0TNA2iCmJeId3nooYdKW23TP/Tiiy9O6E1IdUf5LFbKHKZin8H2F3k6
MD7++te/emSiF198MdJzb7rpJnkf8weRSgL9v3379rLvUn9GkiJOvyLVj6jy
Q9R+xbnKy+abb17UJhMnTsy6ShXDv/71L+rPAqi0/QCpXNjXqid67DPIA48+
+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
MejA9sDMPawK7L1wXjFt2rQyWzQ+t9xyS6E+l1xySdnPQ/5bvX3gixkGjq1k
cD22zHNQlLDnjrguaK1CnHicHcMOELYNph1FkJzgEsTyMOt68cUXF/4OWyTo
Zlu3bl10n1l/lO+++y7wt9AG5j2wwzSp1Lb0A2ML5656HVXexLC4aBPkD7Pt
6/TSpEkTqReADZ2+90c8CdzvR5x+hbnLXH9QP7+9C+Yj83eC/NDKGd9ZgVwT
Kt6ZKrD9C4pXgnMP/Xqs0WHPUHX23HNPT3sFyaFpyA9x+pXLuQoo/RnK9OnT
fZ8JnYCuD8G7ZIEuF6kSZKOi43qMgryPU1u8JsS7CMJVu7mUidLaD0SdZ1zu
gRQqXrleIGdDf4/1ELI8zo+xr4CcDv0z/DTQ1rY8l2nhsj9w71k5IO61KTfo
BfG88+iPDLsS1At+xfDrNvtEnz59pH4X84Pf2S3Oz/R7oPe1gfuha4X9HcYE
5AiznbDHx/k07MRxrV8MBzU29HUANm82GUUHY0T5csAO0wRzCWQZ9Ryc69nA
2Z6yc8Z8apuDlD2tei+/eQrxn3ANbGlMuwnXwM681J5EL+3atbP+u5rbMF8r
8L1NfT5KkC28n+2Dn5yHePVB9YXdOXIhmzH2gkrYXMTlgjg/mIfhi2DaDaM9
oROCHFbO+YSun4afQRg4tpLB5diCbIFzCvNayFFh8y7EzR+t5JUssNnko+y9
995yrsH6haLHAHjjjTes9+Ds0w/kdrTJR352oZXYlkFcf/31RfUM4y9l4qJN
EF/H5scZVKADKHXuHKdfAcjr5j2I/2jq6iDHwO9dXYN3gF7AjyTGd1aYcp1f
3HUFcsXo15955pmRf9N8hipDhgwJvM+1/BC1X6UxV+n6M8QD9Msdd/755xeu
gw9pmPg+SQMdHuKgmu+G+oTNzepqjIK8j1Ps4231C6N/dNFuLmUi4Ho8R51n
0tgDATMmW5SC/gFbmYULF/o+3xWu+gP3npUHbNGRdxLnaTj/hP8j4t5C51lO
LHBXwMZYP18qVfxy9mCNU/7AOKe2xUyDba+f/jWoYD9us+VEX9f9jeG7odua
IIeQHy1atJBj1ra+4Vvpvw/bcfRprJPQI44ePVr07du34H+GZ9nOtTHP6jaJ
fnY2AGM9C9lEgTyFpfYk0Ms/8cQT8nzZ5m+BgvaHnRLaCvIeYuX6Pa9jx47S
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
huidn96ZfbOzI62klbTa7/v/zpmT8FnSqszcuXPnFt9vbLfddrn9hpBO1V35
z3/+EwwcODDMkeAbz+2yn+GHbu5hjjnmCL7++uvav11xxRUN9znffPO15T5F
10ZysbMgV439ra655pp235IQlQKf2mmnnbZunGyzzTbtvi3RDfnuu++Cnj17
Vsre8/DDD3eU/cymiu9TCFHPc889F47L2WabLfjtb39bN1bvuOOOXH7j1ltv
Da/Xq1evBnmQ12+I/0M6lZg8eXJDrFo77GfEYNv7aORhcyEXmn2f/fv3L/0+
RddHcrFz+OSTT4IePXrUfasVV1yx3bclugD33XdfcNxxx7X7NnLj0UcfDXba
aaegd+/ewZFHHlm3PyXS09X6R5mQM6Rq9h43tqpT7GdQxfcphPh/zj777HBc
UlPA5BsxjX9rFfIxEX9B7Caxovb1f/WrX4X/LvJFOpVYeuml224/I07cvocL
L7yw4Rj85uijyy+/fDB48ODQ/150H8pcr0gudgannXaa11ed7ydEVsiNhA/0
H//4x3bfiqgg6h+tQR2oqtl73JxBnWQ/q+L7FEL8P8RaMy7POeecYOedd64b
q/vtt1/L1997773Da1E7wI3hJM+jECJ/0AHbbT/bcsst6+6BnItCGLReES7E
084///xe+xn6gxBZwBeavEj0I8kb4aL+0TpHHHFE5ew9du3NTrOfVfF9CiH+
D3RVI1+ef/754Pjjj68bqxtssEFL16eeCLVE1l577XB+cuNDDznkkJyeRAhh
s/rqq7fdfjbDDDPU3cNNN91U+j2IaqL1ivBB/SCf7cz4q7/11lvtvkXRgZx8
8sm1fiR5I1zUP1qnivYe2c+EEEVg5z5jPTNixIi6sbrIIotkvja1OxdbbLEw
DxO5Z1566aUGWXDnnXfm+DRCCEO77WfU23XHu+xnwqD1ivBB/ZMo+5n23EQW
br/99rCevOSN8KH+kQ9VtPfIfiaEKAJiNhmT5D6DJ598sm6sUv83a32yo48+
OrwG6yS44IILGvaSlftMiGJot/3s2Weflf1MeNF6Rfh45ZVXan1iueWWC3bZ
ZZcGGUJtYeWtE0khZ970009f14ckb4RB/SM/qmjvkf1MCFEE2M0Yk9jR4OOP
P24Yr2+++Wbq677wwgth3ZM//OEPwU8//RT+beutt667LvnChRDF0G772dix
Y2U/Ew1ovSKi2HfffWt94rLLLguefvpprw/a+eef3+5bFSWBH/NJJ50UbLfd
dqE+ucQSSwRbbLFFcMwxx4T5NInnHTZsWKhzulx77bUNOQRoPXv2DHVeuz31
1FOx9/HRRx8Fl19+eVizl1qwv/vd74K55porWHbZZYONN944OPXUUzPHFjNX
7rrrrsHcc88dfPXVV+Hfvvvuu+CUU04Jf4sckb///e+D6667znv+jz/+GMY9
o2OTO7AZXJu5mPfIM5CH0sD6nLzl6OfcDzEkO+64Y/jsWfnss8+Cv/3tb2Eu
5JVWWil8nlVWWSX870suuSR45plnwviXsumU/lEERXyTPOw9eb/HOPsZ/Z6c
RfyNOvHUucP/+aCDDmr6vaN4++23gxNOOCHYYYcdglVXXTW8Jm3JJZcM/vzn
PwcPPfRQWDMrCVWwn9EHyMO0zz77hN+CvU+be++9N9h+++1DuUx+JuQUeY85
x8c333wTXHXVVaHtgRpn9DtkDbnWeTdZYK/+rLPOCmXoMsssE94H9zNo0KDg
1ltvDb788ssu87xVmYdGjx7dICN97f777/f+1siRI73Ho9vZ81FVoZ8Qt8mY
JPeZgf1de7zyntKAv9rKK68c+peh/xrc3GcHH3xwbs8iGkmrU0ErumqeIG+i
xuM111zTcPwdd9wRO4ajZJtNEc+ep1y3+fDDD8PrMu8vvvjiNd1n4MCB4buA
su1n77zzTt07t9fCpqGbuN+Gmpyffvpp7LWLmjNaXbfkSdXn7Tz0wjzWK2Wv
NV2+/fbbcOxSS3rDDTcMx9XCCy8cbLLJJsHhhx8e3HzzzanXHXnLiarI8TTw
jKZvsObhPQNrO7e/kFeiHettUR5836FDhwYzzjhj7bvTLxhv5NRtZlM988wz
vbbXqMb4iAJbrn0fUY37oh4X468ZyFPqzDJ/29cgJoN9bMat7zdMDVrez5gx
Y8I537YRsG/t4/PPPw9lInOI+yyTJ0+uve+pp5468vmYb4zMTQryi7m62bub
b775gm233TYYMmRIuLa65ZZbas3Igjypev8okqK+Sav2niLeo89+Rl9nLozr
6/jHDxgwIPjkk08S3ftrr70WzrdTTjll7RrTTTdd8Jvf/Kbh2uit6LTNaJf9
jNxL6Jvodeii9u+b9Re+4n/6059iv5OJPTNcccUVDd/Dbry7K6+8MvF98m36
9+/vnQ/shk748MMPd/zzVmkeQi40uw/GUJSOTW79qPPKWG+1CjYz7pXva+ui
xE3Yz8JeRBrOPffc8LwDDzyw9reXX3654R0p91n+pNWp7PNa0VXzpnfv3nXx
XXZjPLuwdo0bx3G22iKePS+57oIvJzYM4qrjrouey5re/lvR9rMHHnigqTyN
asbm5yPvOaPVdUuedMK8nZde2Mp6pey1ZhR33XVXaOtrdu/Modj5mpG3nKia
HE+D0RtceX311Vd734n0h64N9mTzrbHTM/YMjHvGst0fzjjjjLrzyReCXuDT
DRgT5t9MYw/GhX1w93zW1NjfWceyP7zXXnvVyUZz/aha0+edd16w2mqrRY75
d999N1KembGBf5g7X8TJtIsuuij8e9Q1X3311aBfv36J5PKee+6Z+BuyF2Sf
S+7CCRMmhHstgwcPbir3TCvCb6uq/aNoivwmWe09Rb5HVw+iZpEbCxXX2KvB
Vy8Oxg8yyp6vsVGadTXvCrudfV32+NBd4miH/eyee+4J9buo94FeigyLsz2a
Rl/C/4i93GZrNPucf/zjH03vE//Z2WefvXZO3759Q7nIO/PZZug7Js6u0563
ivPQscceG4wfPz7cm/X9O/s0zfZaPvjgg2CppZaqnbPAAgsEjz/+eNNvXwVM
7jPWnDb4eNjv4dBDD018TeQEsTnYHO0cJfiY2NdU7rN8oR+m1alsWtVViwCf
JNbt7rP47GfMU8gYfD9869s4+1nez56XXHfBPwN5Z5/LHsDw4cODf/7zn6Hc
9r0v04q2n2GPt/VN/OHce8C+4uqlNNtP1ZD3nJHHfJEnnTBv56kXZlmvtGOt
6QP5ij3PnIf9GrsX/n3UxWHt0atXr4brYxOKogg5UUU5ngT606KLLhreE/sm
2GwN2Jhd33Uavqyia/Liiy/W7RFF2aLRTc0x+FtG4Y7/JPHizD/IO3MOchhb
rg/8at39Pv7bHn+GeeedN5T77rxl2kYbbVQb7z65x14L72aWWWYJ9egkMu3B
Bx8Mxz6+w77fNDKe38OOhqxmTwZ/Zd/1k9izbrjhhrrz8Nd1Of300xPNVUXH
PVapfxRJ0d8ki72n6PcYt49I49vjZxd3TJ8+fSJ96/FnZ0zbx7Mn6oK/Hjq4
fRw+83G0w36G7N1jjz2C/fffP5Qxce+FuAbsr3wXvhm+8+4xyBDGk5Ed7AWj
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
Nqx2n7vttlvT411f9mb6iehMkFN2jkC7sY5nbevGbceRRt74at9OmjQp8W+5
+U9o6Ns+uqr9zFcTOS4+x5YDUfKtSKraP/KkjG+Sxt5T1nvMaj+za9qYRj9J
AzoatZRYI0fN5V3NfkY+BfecZjomMs89B9no4uqZ+M9zP2lblC5XpefttHkI
WAu415lzzjnD3MsuK664Yvjv5JwhLqNToGYV901Nsqi9aXcvO6reDrYw/n3o
0KHef3/llVca3qdynxVPGp0qb101b4q0n+X17EXJddeHHj+gpHSi/aysOaMr
2M+K1FOa0ape2An2M3cOJNdpqxSp/1Vdjvuw13T45n355ZexDdnuq0kqn/au
B7Xso+ru0oinpq5MktqMaeSNGwdNS2N/fu2117z368tZ2lXtZ75cOHHx5O5e
Bb6xZVLV/pEnZXyTNPaest5jVvuZ7/rksIhaM9s8++yzYU4jU1uQODVqhbNH
5F4zLl+t7Gf/D34/5Du1j2mWVyotVXreTpuHDD47PfmIbah7a/5t4MCBmX6n
XZx33nnhfbM+iMLYxUzz1dQkjgx5gu5q6qS5XHTRRXXXQY4o91nxpNWp8tRV
86ZI+xm0+uxFynVq39rXXXjhhROf24n2s7LmDNnPouftOPLSC6tuP2NM2zU7
aHYesyyUof9VWY67PPLII5H3maWRD1B0LW644YZg+umnj/3uK6ywQmysOKSR
N9SwcH+D+0gKe+1u7R6az9enq9rP7rnnnobfIM7a54cAO+20U92xN910U+z1
86aq/SNPyvgmaew9Zb3HrPYzru9em/VuXA44/EXsPWCOZ4/MxGb58lzIfpZM
L/36668bjhk3blzLz2hTpefttHnIMGLEiIZrLbHEEnXj5vjjj6/92xNPPJHp
d9qF2Ycg1ikKN07CrbeD/s3aHl2dNVUUyn3WHtLqVJCXrpo3RdvPoJVnL1Ku
u7nD08Q1dKL9rKw5Q/az6HnbR956YdXtZ+QlcH/r1FNPTfVbLmXof1BVOe6y
9dZbx95j2kZOV9H1IM+ju4/kNvKHEG8VRRp54/stbM5pcGsX0hj/Ll3VfgY+
X/J+/fo11D5knrBt/jxP2VS1f+RN0d8kjb2nrPeY1X4Gbi0gYtF8YBs47rjj
6nyjyZswfvz4uuNkP/OTRC/1HZN33oYqPW+nzUMGbEPUl3Gvx96uwdSIW3zx
xTP9Rruwc5/F2b3c2G++gw05p/k7+YnjQN7Y11Hus3LIYj+DPHTVvCnDfgZZ
n71Iue7W8cBukdR3pBPtZ2XNGbKfRc/bNkXphVW3n+Ej7f4W9T9boQz9z1BF
OW5DfzfrM9Y3f/3rX1M1X01SZGOZawtRHsx57PeSKyWuP0fptGnkjVujl0YN
7DS4ei/35qMr28+oDUJdNfe3qH/IfEF8/1VXXRXMNttstX9beeWVw72Lsqlq
/8ibor9JGntPWe+xFfuZe33mVBd0JHcMkkfdp6fLfuYnqV7q5qfI29Zepeft
tHnIxo39ppG7BFg7mL+1uiddNklyn4EvDor8I/Dqq6+GcSgLLrhgKI+j8OU+
u/3223N/JtFIVvsZtKqr5k1Z9jPI+uxFyXW39gYtac3BTrSflTVnyH4Wr6dA
kXph1e1nQK5B+1jGU6sUrf/ZVE2O25B3x9xDVE31OE4//XTv8xx44IEF3K2o
CuRd3GuvvUJbqe/741/jI428oT+6111ttdUS3yPjjrh2+3xyJfvoyvYzYI0R
VfPDbsgo1lxReWCKpqr9owiK/CZp7D1lvces9jN88tzrUw/bhdzf9jHExCKn
fMh+5iepXurm1kJ/yeK3ee2113rzcVTpeTttHrLB3m7b4E0j5xdrcf4/czhr
9U7i/PPPD+89LvcZIDPdPL3o2aypTA7k0aNHx16j1dxn3APz+uWXXx5MmDAh
9lj6/SWXXBIpt+L44YcfwjqkxO1ed9114TeOi3GPgnFEDmT2b4YPHx7mMufa
7aAV+5khq66aN2Xazwxpn70ouc7en/vb999/f6JrdaL9rKw5Q/azeD0FitQL
O8F+5sod+hX7T2nh2xqK1v98VEWOG6i1ZMfFxNWZiIJaCbw791lY85l9PtG5
sMbdcsstI/8dfc1Xu4TYfV8trzTyhjohvnHCnnIS3nnnnYZzo+q9dXX7GZx2
2mm1++KbktNl7bXXDv2gsHfjg5tFb8+TqvaPoijqm6Sx95T1HrPaz8hN4V7f
rX2H/4ib0zTOT132Mz9J9dLNNtus4biLL7441TM9+uijoe/7SiutVOnn7bR5
yIXfcq/JXGViB8rWO/MAWcm9x+U+Myy00EJ1zz5y5Mjg73//e/j/k9Sa33bb
bevOJ+4nKcgIYmPt8xdddFFv7jvkz1RTTRUewxov6Xpk1KhR4draV8+L+Nyn
nnoq0XXIb47/s70+MTmYWCdE1SYtkjQ6Vd66at6ktZ/5ZGCU/SyvZy9Krrv1
N2n8LQmdaD8ra86Q/SxeTylaL+wE+xl1EdzfY5yngdhjZAW58qFI/a/qctxg
r9/dvKpp6N+/v1dWnHPOOTnerWgHa6yxRmgLjfN9YX3v218i7sHFlTdxeXip
NUOdDfe6xLEngf0t+zz0wqj9365uPzv88MPD4/EJLyLXY15UtX8UQZHfJI29
p6z3mNV+Rr4m+zzWhK4/xAMPPNBw/3H5Rtj3SqMnyX5Wj/FdshuxdO+//36i
5/nkk09qubnsfFxVfN5Om4dcqI3l2+M07cYbb2zp+mWDT9Xss88e3nuSmA3k
jP28+IZQk4z8QvTDZrhxVEljK3jv1BlkXGCzI8+xuQbxXS5mPjCtmV8cz85e
izkeewT6A7nHn3/++XC9zZoCuRu3ruB48r8Zfxd0jGHDhoXxdchZfNnMb9xy
yy2Jnj0v0uhUeeuqeePaz7CjxsE3dO8zyn6W17MXJdftOCf7W06ePLnpNTvR
flbWnCH7WbyeUrRemGa9Yih7rXnsscd65/3HH3880W9hM8PORQy2qf9apP5X
dTkOxA4tssgitd/FXp4VxrXv+7DvF5ebQlQf+jLfEn/+OJ588smG729qmti4
e8Hzzz9/7HWJ03Kvm7T2tbvnNWjQoMhj85Bpph6YPefFkcV+hg94Wl3imGOO
CY9Fl04qM9tFVftH3hT9TdLae8p4j1ntZ+utt17TMXLKKac03H9cju+zzz67
4fg422lXsZ9RayqOpHoptRp9cz5rnWaxbayZevXqFR6/6qqrdsTzdtI85IN3
5/tejMlmsXn4QRF7yBoYf9h2x3qy18C9N8t9ZvB9Oxp2oWbYNi/TkuY+oy4X
8t3IK7tuGTG1LviJ2b5fcbYq3oGxibJ2ilrPG9k5ZswY77+/9dZbtbFIIz7G
XbfY9Z/32WefRM+eF2l0qrx11bzBR9B9lrh8ptgwk8qzvJ69KLlOHnA3HpGW
xBa9zDLL1J3jGztFgn+ne99J1stlzBld1X6W17xdtF6Ydr0CZa81ma99vsnY
qO66667Y38F2xjzL8eRMMBSp/1VdjgN7juY3sZO3WnPOXdebxr6b6FxMX27m
78mesJ3fz61zZXD3khj3bnwa9n70Opg0aVJDrkKaG7/lwt6viYUw9xM3rn0+
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
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQolP4+eefgzFjxgT7779/sO2227b7dmq89tpr
4X3dcMMNwcUXXxxcddVVwd133x2MGzcu+OCDDyLPu+2228LjRXuoSn96+eWX
g4022ihYc801I1ufPn2Cl156KdV1zznnnNq5/fr1C7baaqtgxx13DHbZZZdg
u+22CzbbbLNggw02CNZee+1g0003Db777ruCnrD78NNPPwWjRo0KDjzwwPB9
r7XWWuH/HnbYYcE999zT7tsTXZDHH3882HrrrYO+ffsGZ511VvD999+3+5aE
EEIIIYQQbeCLL74IbrnllmDAgAHBnHPOGfziF78I2//8z/+07Z6wu2D72mOP
PYJ55523dk9RbcEFFwx233334Iorrgjefffd8Br33ntv8Mtf/jL8d64nyqGK
/enss89u2odo2LrSsNRSSyW6Lm2aaaYJvvnmm4KesHtw44031vUpX1thhRVq
MkCIVpk4cWI4du0+tttuu7X7tjLDHtQ666yTuq277rrB5ptvHs7JBx98cDBk
yJBwjv7ss8/a/UhCCCGEEEIUDmv51VZbLZhyyim969B22DvwLbnyyiuDxRZb
LLFdwm1TTDFFMMsss9T97auvvir9WbobVexPBvy+br/99mDkyJGhjfW4446L
7Dusl5Py4osvhtc7+uijg/nmm6/heossskgwaNCg0E8NHxaRnb/85S+197rK
KqsE1113XXDCCScEU001VcN7Z50vRB7gb+b2r+mmm65j92SGDx8e9OzZM5h6
6qkzz7F2Y49queWWC44//vhw70QIIYQQQoiuyH/+859g4MCB4d7yzDPP3HZ7
B3YL9HCfjj7jjDMGO+20U3DNNdcEjzzySPD888+HvihHHHFEGFMzwwwzxOr4
//73v0t9lu5I1fpTHG+88UZkXznggAMyXfPLL78M5plnntp1zjvvvPCdiNa5
/vrra+91jjnmCL7++uvav2G/dL8htkwh8uDcc8/1+pJ2qv3M8N///je4//77
g2WWWSZSFrIfsvPOO4ex96uvvno4rqL2R2izzTab8iUIIYQQQoguz+TJkxti
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
ZsNa0H2f2B1ciFUzuaja4TfS1cliP+ObUF/WPufII49M9HvkjXd/Dzuwz38K
f0P32LJ9aPFdcu8B3884yIfvnoNPURzPPPNMwzlRtXuLknGQxX6Wx3ey/dPS
2s/whVtuueUa7oG4WvtdxcXEFk0e9jP87Kgbk6VGqxBCCCGE6HyoL29yv7BG
jlt3+9YB5FT34YsTapaPeamllqo7Hh8uH+Qvd2NNfHm1fbj5jouyd8w999xe
/Zu9/65Op/WpTuhPSWmW+8wGPwr3fZJPjvxoNsbeQq1RkT9Z7Gf4OrnnkP8r
KeSxd88/4IADGo7be++9U9l+igD/Up9dJg5sge455FKL4/XXX284x63daShK
xkEW+1ke32mrrbbKbD8D/H3jar0wJ/Le2oXPfrbyyiuH9z1u3Lgwx+Odd94Z
jj1s0RtssIE3LtW0/v3719VIEEIIIYQQ3QfWDlG6IPEXxLHYMRimvfTSS95z
stg6ktoifNcmli4JZdk7XLuNaezFdxc6pU91Qn9KQtLcZza+NeUNN9xQd4yp
Pcd6UeRPFvuZm1OLliau7Kyzzmo4nxz7Lj67TNk2gyz2M+IT09rPsO1ksbnl
KeMgL/tZ2u/Uqv0M/vrXv0bam6ip2k6y1A8ghv+4446LrAVLPRXZ0IQQQggh
BLAGIa/JAgssEKkTt8N+tt1229Udh26blLLsHdR3872vww47rJDf6xSq2Kc6
oT8lAZsL99As95nNVVdd1fBO11hjjbpj1llnnfDv3SF3XzvIYj/DN8Y9Z9Kk
SYl/8+GHH244n1hnl061n5H3P60tjOdyz+H509KKjINOtp9Rt8Xn20hutXaT
xX5mwE7q1lE1La7uihBCCCGE6Po8++yzwc4771zLL/7LX/4y2GijjYLddtut
QXeMysdcpP1s6aWXrjsuTVxZWfYOX24pWt++fQv5vapT5T7VCf0pCeZdJsl9
ZsBPjbzz7nslpglYD0877bTh3957772ibr1bk8V+hq+Yew7xZ0l57bXXvPLJ
rZkh+1ly+1keMg462X4G+EGSD869lpEp7aIV+xkQcxtVj/Omm24q8M6FEEII
IUQVeeWVV+r8GtCByaPO3iv48ri0w34277zz1h3HfyelLHvHRRdd5NWzqetI
XE93oRP6VCf0pyQYf5e0ua19tQRNrOYjjzwS/vciiyxSxC2LIJv9jPqT7jlu
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
7bdhfjpyrpG73VerkpoDxIqafPNRNR6SXEsIIYQQQgghhBBdC2pCmppw1CEQ
ogyOPfbYms124403DvPZT5w4MazFMOOMM4a1A5PEUXKeydlHPc4xY8YEn3/+
eWijoxYetmFqn/LvSy+9dDBu3LjIaw0dOrRWR4D6s4899ljmawkhhBBCCCGE
EKLrcOmllwYbbbRR8Prrr7f7VkQ3g/qP+I3Zuftpffr0Cd5+++3E15kwYULQ
t2/fhuuY+gTkSaM2YRLuu+++0P/M2ORauZYQQgghhBBCCCGEEHlAjCZ2K/Lu
UQM2Kx999FEwduzYYOTIkcGTTz4Z1tXMCnHN48ePz+VaQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhKgu48ePD9ZZZ52gd+/eQZ8+fYJ+/foFW265ZbDDDjsEu+22W9j4
//yNf+MYc+wnn3wSe+133nmndvz6668fbLLJJsHWW28d7LTTTmHbYostwr+v
tdZawb333lvSE1eTxx9/PHw3ffv2Dc4666zg+++/b/ctlcoTTzwRHHTQQcFW
W23V7lsRXZRnn302OP7440N59+9//7uQ87r7OM6bn376KRg1alRw4IEHhrKB
uYL/Peyww4J77rmn3bcnRGX4+eefgzFjxgT7779/sO2227blHjRe86O760RZ
52shhBCiaE4++eTgF7/4Rer2y1/+Mpg8eXLsta+++urE17v44otLeuLqMXHi
xGCaaaapex/YLbsy3377bahn77PPPsH//M//1J77t7/9bbtvTXQRPvzww+D6
668PBgwYEMw777x14+uNN97I/bzuOI6L5MYbbwzmnHPO2HljhRVWCN599912
36oQbeGLL74IbrnlllBW2WOFObVsNF5bo7vrRFnnXSG6K6eeempoX07bDj30
0LrrvPLKK5mu8/nnn7fpyYVoPz/88ENw++23BzfccENw6aWXBnvttZdX7/nj
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
f2MeaacPoxCdDnFG9phCbrtx0Pjhu3uh6LAiPePGjQvf5SyzzOLdf2lmP3vx
xRfrvoXr72A49NBDa8cQr1Ikri6QJdcHzfiLMCfutttuoX84c5gbo2KaTze3
GTVqVG0uZ13tywXAWttnzyhqr4i1mjuWfGtFG3x/3Ptz14rMn6wBiefwvStj
Y2Duxz6Drk99MGIDfX3QZyuZd955Q/ng6kemUffa6B4+HcNeL6CL8U3Mv+Fr
dfXVV3ufn5gY10+F/7bXwD6KtJ9lHcdlfCebG264oe4c4g9dTj/99Eidz255
2c9c7r333obfIj6jGcxT9En7PK7lgt8cdgX7OOIr4kA/t+0EyCb8DF2ee+65
hnun//vi/7LISShirOQ5llulKJloyHvOLGpe+f7778O44yTvme/s+y5l5D/L
Ol6hKLlfpf4M0onSk2W+LlqPKOL6m222WTjPR+2j2bYz9meIh8SeFDUvEy/M
fliRFPWekXm+Z8O+lQT8Ls052PF85NXnqyZjbOLsZ/QN4kvtv6N/ynYmRHaw
SbvjjdhowzfffBPm2/GNS+SWyAb+2YDvhLtuaGY/I67KHDvbbLNFHse3M/6C
Rx99dK7375KXrkgjZwDxWDasZfEzdo9Fn4wCn3E7D0lUHgVgz8y9NmvnonDr
dTRbK7Kn5t5fnK+F7TNjN+Z/5lkbcon6/J3IB+Ri5lv816P898kjgVxhLw7f
ffN3+rm9N+jKFWJf4iBvl/tb7MtH7TdC0fGbrYxjKOo7GRgDyAhbL8dW4cN3
bfoYz2ZaUX7+WdfjPp0xqj+Qo8ztp3HYthTkyOuvvx55rM8HzZcDIav9rIix
kudYzoMiZWKec2aR84prx27mr8Dzutevuv2sKLlftf4snSg9WebrovWIIq9P
XsEo38I11lgj9D20mThxYpivy3c8sdxFUuR78O2FzDzzzKHOEwf7Z0a/WWqp
pbzH5NnnqyZjbKLsZ+iHvEv371F6oBAiGb7cZ2bflVgB4lyMTuYbm/j1i9Zw
YzWarbupk2KOZU+HmP4oiEHhONaCRZKXrrjeeuuFuTd9kAPE3dPh3UVBbJut
i8TB2tjXv/EPLwIzrkxrtlZ87733Gu4tzn5Gbgb3eH4jqkYu49g9ntxccbAn
6p6DLuP63BPjdumll4a5FwzuXI9fPWvXZvhs+ba936XM+gFpxzEU/Z3IA2If
i+4dxe23395wbXKCl0HW9bjvO0WNWfqge2xUPjf2yW1Zc9RRR8XeBz597rV9
sbVZ5GQZY6WVsZwXRcrEPOfMouYV7sle57A+a5bfkHPcObHK9rOy5H4V+rN0
ovSknXeL7k9l9Fdf7CA5v6JqITLmfTY0fOCb5c3PStHvgbh8avy4x+LHFgcx
meZY1rI+iurzVZAxNlH2s6jGd2hmnxQib/A5IPcX9qVOr/fqy32GvyoxP8Zm
z74GOTl8snD33Xdv9yN0PPYeBa3ZutuN44rzLTP+hdSeK5I8dEXWDvhyx+Hm
FuB3faBv2v5A2Cma4caB0YqyOxZtP7v44osbjnf9mVzcXOvN9pptvcQ0Yg2b
gcykjqR93pFHHtn0PEA2ub/J+iFqX69M+1nacQxFfydXvsetOfFnIN+OfTxj
ogyyrsdd+2PcGuL6669v+I2oY+39IuwYzWoIUg/C/S78nktaOVnWWMk6lvOk
SJmY15xZ5LxCHkL7mKRz9qKLLlp3XlXtZ2XK/Sr0Z+lE6Ukz7xbdn8rqr75c
hnG+zkAeBV/OiCK+TVnvgZyi7rHUl4nDxEuSQ8NnYy6yz1dBxtiktZ/RWNsr
hlOUATVHyDkw/fTT1/ofMmzllVeOrV1fZdzcZ6z5TK5pYrjtHLrUD3DHH7kr
09YyE/Ww1+R+gzh8uWnJg2liyVywcZJ7uEjy0BXtWu1RuHt19FHfc7tzyUor
rRTsu+++sc03vxTlf1O0/cznO98sxyz+7/bxxDHFsffeezf8RpL9T/by3POa
7TPauO+OdsABB3iPLdN+lnYcQ9HfyY0rZI83DleXZ3yVMa9ltZ9h12Jsczyx
qXHxbj77GXtgLtQFsI/ZZpttEj0D1xo0aFCYT5k9Zx9p5WRZYyXrWM6TImVi
XnNmUfMKcVxu/HezPFYGNw9WVe1nZcr9KvRn6UTpSTPvFt2fyuqvPr+EKLlk
4/N/amZvykJZ7wE7nZuji0beCB/If2ND3H///b3HFNnnqyBjbLLYz2h77LFH
2+5ZdH0YpxtuuGHTfkgcTSfZ0Hy5z0yLqt/rq7t04okntuHui4FYcWQ4eSXK
Iu26m/ha3zej/pWvbmoZlKUr+vwlfftOfMcsc4nbivK/qaL9LO06zKc/JMmp
4Oahoj355JNNzzPYdfRMw7/ER1e0n6X5TqbelGn4M8RBnKJ9PHvFZdBKPiVg
vz6q77EWufvuu+vyDJuGrcyF2pn2MUn32pOQVk6WNVayjuU8KVIm5jVnFjWv
+ORAXIypTafYz8qU+1Xoz9KJ0pNm3i26P5XVX7Paz+65556G8/CHyJsyxy37
X+6x1Ar3Qf0fc4xvHoci+3wVZIxNlP2Md0qtK2qgRj3fQQcd1Lb7Fl0XbOJL
L7104nEWZQevIug7vmcgfwK6qQ/2HdzjqSPT6XGsgL3Qfq5mPtR5kXbdjc+F
nQ/Tbqx3d9lll9i6z0VQlq6IX4D7zL74BnetTCwM83Dalufa2aY72898+T7I
45IUd5zSiJ3z0d3tZ75a6uS+jWLYsGFN9cYiaNV+5oN8I+jYCyywQOR87dO7
XV8l/M7zIq2cLGusVGEtUKRMzGvOLGpecf0+8aVMSqfYz8qU+1Xoz9KJ0pNm
3i26P5XVX7Paz4i7c2M48T3Mu8ZPmeMWme7WwGQP0Jeny8Stx+X7K7LPV0HG
2MTV34Rnn322rpaU2+LqTQuRBV9e4Gbt7LPPbvdtJ4I6Pe69E38SZwvj37CX
ueel8eetKsTgmuehnnKSOSwPsqy777zzzsgayjRy9lAfp6h6eS5V0hXxASWu
2D6G2ttVojvbz9xcRLQ0PiDUIfP1eV+u7e5uP/PV94zL/eT6XpWV3zJP+xl6
4s477xxMPfXU4XXIF0+eFN989/LLL9edi+xwa1X58phlJa2cLGusVGEtULRM
bHXOLHJecfdoF1544cTndor9rEy5X4X+LJ0oPWnm3aL7U1n9Nav9DHy5uiZP
npz4HpNQ5rgFX01Zdw4eO3ZsU7lTdJ+vgoyxaWY/g+eee64hT6vdLrzwwrbd
v+hafPbZZ7H6VlSba665SrNbtIK7L8/+bJL7Jl7TfWZywHU6yFts8NhMo+rf
FUGWdTdQ48HOxedrK6ywgjfHT95USVf8+uuvG47Bf7lKdGf7Wc+ePRvOoy8n
he/t1hyj+fyqurv9zBfjwfwUlZN6p512qjuW+lZlkIf9jJo+9l45e/PsNxs/
Yl/+M9d+Rk0x95hTTz01t+dMKyfLGitVWAsULROhlTmzyHnFXQen8fvsFPtZ
mXK/Cv1ZOlF60sy7RfensvprK/Yz1l3uuXnnoy5z3ILPX41xYWP6PHtdUTW0
i+7zVZAxNknsZzBhwoSGvB6msdc4YsSINj2B6ErQ7+L0rLj2yCOPtPv2Y6F+
i3vPrD2SQFyM2du3W5qYePH/ZLWfAXVsmsUXTzvttMF9991X4BNUS1dkDnOP
ufrqqzM/WxF0Z/uZr7/i95EGt04kDX3Jpbvbz8AXf9GvX78GP2NsSfZ+Ec9T
Fq3Yz9j3OO644+riPshrNX78+LrjktjPqKPpHkOdrbxIKyfLGitVWAuUYT+D
rHNmkfNKjx496q6L7TfpHmyn2M/KlPtV6M/SidKTZt4tuj+V1V9bsZ+5NQSw
f+QdN1PmuDVQ58g+FvvbxIkTw3/jPLMHst9++0Veo+g+XwUZY5PUfgYvvPBC
pA0NHRBfbSFagX3nOB0rrrWau6VofLnPTj/99MTn+2JhqJ8g0tOK/QzQs8nR
OdNMM8WuB4hrKooq6Yrg5rop0xaQhO5sP9t0000bzhs8eHDT82zmnHPOhv7t
Q/azINyfXXfddRt+h/GHTYkcYNSOt3NjsK+NL1ZZZLWfYTtz3zs1yHy2hyT2
MyD3lH0M7zsv0srJssZKFdYCZdnPIOucWdS8Qr0m9/eT1nLrFPtZmXK/Cv1Z
OlF60sy7RfensvprK/Yzd+zze3lT5rg1XHTRRQ2/Sb1kuPzyy2t/ww4UR5F9
vgoyxiaN/QyI5Zxlllm857Cf46sfKERSqLEbpVs1a4zxKuOzfz3zzDOJz0ev
dM9nvRhVd0BE06r9zIBf4F577dWQU9S0pP6FWaiarujmTWe+jtvvioK8fnnm
PzJ0Z/uZT67G5YB1Ye3LPqt9/oorrug9Vvaz/wN9nNwWzeYt7AnkQCM3cZlk
tZ8NHTq07hxiU5GDPpLaz9yxSV9rpqf78OUASCsnyxorVVgLlGk/M6SdM4ua
V3xxWPfff3+ia3WK/axMuV+F/iydKD1p5t2i+1NZ/bUV+xn1Nu3zsHXlTZnj
1kBuNPJRumMBn3kj71ZZZZWmv11kn6+CjLFJaz+DJ554IrKuDu+/ijHeojNw
dfM0bcyYMe2+/Vjc3GfEkaf1+3X1Nlpcbupm8PvYvLE9EqOdBF+dbkDOIu/I
/xMH68SHHnoouOKKKyJrIBdN2nX3+uuvH2y55ZaR/86+gq/mHD7QUe+rVaqm
K2622WYNx1188cWpnunRRx8NfZlXWmmlVOclIe1akbW4+zydaj+jnqFPZpJn
NgnvvPNOw7lRNcFkP/t/TjvttNp9IT+22WabYO211w590w488MAwtiHK9lQ0
Wdbj+NW5+YHjYi2T2s+oNeAehzxJA/EtyFs3j0NaOVnWWKnCWqBImZjXnFnU
vOLW36TxtyR0iv2sTLlfhf4snSg9aebdovtTWf01q/2MY9xalUXUritz3NoQ
m+meR35q8/+T+KgU2eerIGNsstjPzHluPzKNGM8y8meLrsfo0aO9fapZw9Ye
VVukCvhynxFHn5aRI0c2XIf5Pio3dRzEKiyxxBJ111pooYVquZ9dkFPIM/Tb
8847r+HfV1111dp1onJg+35z8cUXj8xrWRRp191rrLFG6CcS5yPCOti3p02O
7SJwdcXllluu6TlF6oqso9zj8FV+//33Ez3PJ598Esw333zheUXkAnDXitTi
juP5559veJ5OtZ/59hZp5LBKAn4Z9nn4jkTZ22U/+z8OP/zw8FjiKKq4p5hl
Pe7LTxqXl4U9ZPd4n/3s2GOP9c7rjz/+eKJnwWaGvk1MnqsHpJWTZY2VKqwF
ipSJec2ZRc0r7Du610V+JKml1yn2szLlfhX6s3Si9KSZd4vuT2X116z2M/QE
+xzk28cff5zo3tJQ5ri1Qe765mHzrFF1A2yK7PNVkDE2UfaKZvYzGDZsWOS7
Zj5JojMLYYMMc/1jk7Q+ffq0+9ZjIdeNe89Z9i3QRV0dgZY2dvWDDz4I67Xj
A4ePADYz4++Lb4QP9hDM72244YZ1/+bK3V122aXhfOoY85vIUmrJkJvSHJ/F
ltgKW2yxRcP8EgdrAY5j3yAO6jm43ybKHtkq2Drt32HcNAPfF/sc6io3Y9dd
d214Jt88il+yb2yy1iBHeBysWXr16hUejx22CPBfd795XL4p3/xGbcEosthl
8Ml35804WtEf9t1334ZzGY9JcH01Bg0aFHlsmfaztOMYyvhOxxxzTHgcew1J
bUBlM2rUqIb3wL53HKecckrDOQcddFDk8cxx7vE+PZ64QN9+LDr7XXfdFXtP
2M5MTpHzzz+/4d+zyMkyxkoV1gJFysS85syi5hVqGrgxTjT8QpuxzDLL1J1D
HsOiyTJeoSy5X4X+LJ0oPWnn3aL7Uxn9Nav9zNU3Tj755ET3lYWyxq2La09O
e40i+3wVZIzNrbfe6n1WZHUS9t9/f+/5NHyzk+zlAPtQrKmxNzZ7x6JrQ2yf
GyMS16gLUnVbrS/3GfELWfDVWKBeSxrw22BtZ/J9EHtp6sCRxzDqHPN7rA9t
mHvs+i3EbrgQu2T/5pdfflk7ftZZZ011/63iy+0dF2dp1gLNYorIrW3nR06y
l5kVdw+ctY8bC4avB76PBnevn5quzdh8880b3lXUnhvf3TdGiQtiXnWh39x4
4411NmHGfxHQ/9z7wu/FB30U27J7fFyuC3JYucc3s8u4NY/mnnvu2OP79+/f
8Bu+nE8+Jk2a5M27cMcdd8Seh917qqmmquvTcXM09hT3N0wdpziynJd2HEPR
38nek8QmVGQNkVa45pprGt5DsxpfZ5xxRsM59AdkucuLL74YzDPPPA3HR9XJ
3mGHHbyyAxsHMSTu/jW/SXys0RWo/+nzdcoiJ8sYK62M5bwoUibmOWcWNa9s
sskm3uuiY0VBjVD0GLePFh2HnWW8Qllyvwr9WTpRetLOu0X3pzL6q89+1ixO
hBgZu1b2vPPOm8gfKytljVuXm2++2dtfk+b3gaL6fBVkjI2vJiBt+PDhic7/
4YcfgqWWWsp7DdoiiywS+rrEwXfB5m/Lr7vvvjuPxxMdyi233BKZX9ZuyDN8
u6oMuRzdWk/Y/LLWPCYG3vcuomImXRhv6H+sVwyMN3Mdn28FOq49Rn3rTWK2
jby3rw3kguY37Xqhdixqs7iRvPHJrLgYUrMWoMXld2Ptbs9drE+Kwrf2OeSQ
Q2r/jt8GuTtXWGGF2t/c/Vnap59+Gvs75Ax1z4mKz8fXJm68ci32scjFwB6u
ez9x65ZWMbmoXP0an3jeAftYzNk+3dg07CHXXXdd8NlnnzVc/69//WsqXYfx
b9dfNHNfHO7+Jy2NfxO6kbv2Y8xG2XiQXW4/axYz5Msr9NhjjzW9tyznpR3H
UPR3IueTe33sSKztsCXsvPPOwT777BMceuihwfHHHx+ugfHrwQ/HV8OyKKj9
7N5nnC8Z+PIH0JCPzEvEMPEce+yxR/iOfMeaml7MV3Y8Crkwo/LqmtazZ8/w
HbJHbttcsOtE5dLMIieh6LHS6ljOgyJlYp5zZlHzCnl23G9sGnFI5BGywb+R
/UXf8WuuuWbo21rU2iXLeDWUIfer0J+lE6Uny7xbdH8q+vo++9l6660Xmece
2yg+CvbxZdSrK2PcurAHxRrQvgY25jQU1eerIGNsqIPjez6j4ySBb+nzgzYN
Gxq21CiI3XLPQU8S3ZsRI0aEtvOofkXujirmlcGmjM2Y9QSxC74xP91004V+
CowLjo2LmTCgyzLWtt12W+/7IF4e/e3VV1+NrXdi8n6gOxpsmevz08X+Zf6d
dVGUj4eRJ25NA7NmHTt2bO1vffv2rV2TejNl8fTTT3vf35AhQyLPsdcC2EKj
6nQRy2KOw96Y1P82C744NNryyy8f+ssw79Juv/328HhqvfqOx6ckCmP3dM/h
e0aRtYZumjknC+jE2K2T3s9RRx3l1a19/QWdw/VRihpLhqh9vqi1JvLEd//Y
a7BvJ4W1sXsNaii69gdsIXYdddbJrOHiYL3pu8dm67ws52UZx2V8JzcnW5rG
O8Cnbvz48bHvq1WQ34sttljD7yOz4vaqmYOa2bjsts4663j/bmxr2BRtkKtR
eXWjGraXOP/BtHLSpqixktdYbpUiZWLec2ZR88oll1wSez4xU7179w7zGCb9
TfK85knW8WpTpNyvSn+WTpSOrPM1FNmfir6+z35GYz/utttuq+uz5Hx0a0om
ifHOi6Lfs48TTzyx7veSxIm75N3nqyJjDOwrsY73PQN7e8iWpCy44IKx7wQ5
HxUT6qvBQ1Mcp8A/9u9//3tol2HPmTpdxBfgL5AlZ37RoCNG7WfGNfzokNNR
2LnHkjTugfgZH6wHbfmPDm37Cvhskuy7mn9nnzUKE9/j+nO4v4n/vG1zRycp
Enz2L7jggrAfxcUG49uAP4i7frXXAub97rTTTqHfCGs39t/tPBrI+WZ1SFsF
m6vJ+xPVyM+Anwf2gShZT2PNT00Is+9KrAjrmrhz2PdgbPrgXdu+7nGN32C+
LgNqvjYbn4wF6gCDb63I39ANiL9mTqfPk6c46nrYickDRb4dQD+jzpHtc2E3
/Bt49/jgYu/hXWIzj/LnoVGTA7nI8yXJB8E9uHsTjMd+/fqF45S9WFtXYT/r
qaee8l7ro48+Ci666KIwX0ecbQWfft6Vya2a5bys47jo72TDHBDlo5K08T6S
5KBNA/GPyCvqGhB7EvXbyBTyciAPfH55xCY0s3Hhr0c+DvIC2H5idkM+ELPh
Qs2BpDY6bBvN8msllZNR5DVWihrLrZK3TDQUMWcWNa+cc845icfm1ltvXVcr
yTR8NvB1ypqXwyWv8WqTp9yvYn+WTtScrPO1jzz7U5nXj7KfmYatnNqtrs2c
eY9cAmVT9Ht2wafDzPH4difx7/DRap+vmoxBp2EOc/OGRjX89og3IMe4C/eL
funOk3GNvJvkgMPH3+DLV4fO1Q6bohCtQHwLeiKyjfUd/Ri5h26FTMNWzP9H
LjPPs87iWHzH4uKcmfON/EbOcC57usSLc03ig/gbv8nvp6kLY++/UgvTh+1D
5+Y+s6EuEb/fLBeIya9NQxYVDXpQUhlFc/1RkHHMI+RL4R3FrTeIdXHjPooC
32Wfjyb6NusTQA9I+twmN4EdqxvX0L+iQO/aYIMNIvVN5lXyGZA7vExYn5v6
Pr75zt7XM2tF1unsAxrbiiEqns3XzB6ez//J11ij4Y8fZX+IaknXb4xR1l1u
bLndsIMwFuJ0krQ1k01e2CznZR3HRX8nF/pQmvv0Nex2zeKI0oDvb9p7QF/z
gZ3DtxdMbBS2TXvu4Zu58pI+Rz3BKEzfjLJdIlPQP5PuoSWRk3HkMVaKHMut
kqdMNBQ1ZxY1r5DXgrVRlG2Y/mPqjps8W+hcAwYMCH0R8l6v5DlebfKS+1Xt
z9KJ4sk6X0eRV38q8/o++xlx11F+QMgE9uTS5ADLm6Lfs4tZ88XVnE9CK32+
ajLGlyswSRs8eHDDtXy5YZM27HgG9g9tGyXzLDZHIUTx2Dm4fXte6IXk9zfH
RMXKcBx+xc3sYeQTsvNE4nNfdYiJtfNUkrua+FdyIJBDBl8X8goXnUPYB2ts
fHupjYefIOvSMvMoNeN/27t/V+zCMIDjg1LKYlAWpRSSRUZ/gpWFxSC7MivZ
KYsMJn+CH2WgGEwiCwaR1SJJBsN5+951nm7n+Rnn+fl+P/UM7/t6z3l+ue9z
rvu6r4sclPPz85BLThyYtRjyDZuZP8r7w+fFPMNzYj9Hqf7a1FZs1f6JeWGN
j9fIPTTrzdSe2N/fD3XeW+l71C54z7iGZWwjxkTeAt95xghqnnGtSA4LudT0
jeZejvte1kGyMQbifq2KGgHEDXhdPMjDK9VHAKyXkuOztbUV7kcZE2rB2EYc
YW9vL+wN5P6XOs+/qR2axzjZyb8reY+J9Z4z6zWv8JzJ9yBWRq4J1yfEHOLP
l9oi/Ay1OtpVJ3+XvSZqvHp/n/I8frn+mxyHtQI+D+YbxkJyOmvNRWiERv3e
8j6QO5XXGl4nfudbBXMWeyc2NjZK9meQlD+uaeP11lJ7PuNcikq1z6g5Wi4G
F4t7FbAmUe6eS5LaCfUGZmZmCuNbtf1UWVyrsgch3YNELpckScpHufiZJEm1
iPcIsJeUtY0s1lpryeVmHz57UZ+eniqeM94LurS0VPj7i4uLUHOinj2hJale
GM/SsY0elL+V9tpjPJQkSfkwfiZJ+ovDw8PC/BH39I7FfdPjeFeMXh/UOqGe
ZSXkQcf5bnGNS/aRUr+tXH6bJLUqalLE1+N/qf9PXVmOQe1wSZKUD+NnkqS/
IH6Vzh/T09Mlf4aeAOnPZOvqp9K6iuxvr4SaKumxqIGWolYKtX8WFhZ+/2Ik
qUnoSxxfj5fqLVmL5+fnUP+a8ZBxUZIk5cP4mSTpLz4+PkLvT+YP+gbR2zp2
fX39o7fHxMRE0TxDTIx7vdnZ2arnow50eix6XYHj0aurq6sreXh4yO/FSVKD
ZPtijY2Nle1NWA711NNeLa4lSJKUr1Lxs1p72kiShJ2dnVC3LK1vRm8X+m6x
H4k8iIGBgR81sYl7XV1dhb4Ca2trIe41Ojoa9nBWQz5Fei561t/e3obexvyZ
5yFJ7Yj83ew1OWsT5ObSd5D+xFnUmyTGRj+qqampwv+jL2c79/aTJKkVUWcm
O1eX6jUsSVIl9MQcGhoqmlPINyPGxdrM+vp6qHEW/zuxsPn5+eTt7a3mc+3u
7v44DjXP6MMsSe2K/ZrZ8TN+0Lt4cHAwmZycDONqf39/YS0hfiwuLiafn5/N
fjmSJHUU9rsMDw8XzbtHR0fNfmqSpDbF/snj4+OQe3Z5eVnUj5OciPv7++Tg
4CA5PT1N3t/ff3We7+/vUCuNc72+vubx1CWpqba3t5Pu7u6KcbRyj/Hx8eTk
5KTZL0GSpI7z8vKSLC8vl5x/R0ZGQgzNvG9JkiSpce7u7kLPlZ6enqoxs76+
vmRubi6sRUiSpHx9fX0V7Z2p9Ojt7U3Ozs6a/bQlSZKk/wa5u4+Pj2FNe3Nz
M/QuXllZCbXO6KNyc3Njzy9JkuqM+sqrq6s1P+xlJkmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS9P/6B5gkpOw=

    "], {{0, 356.}, {616., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{616., 356.},
  PlotRange->{{0, 616.}, {0, 356.}}]], "Input",ExpressionUUID->"d1dfb4f4-58e6-\
4a80-9ecb-c1edbe7d8d88"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[2017] Sobol Tensor Trains for Global Sensitivity Analysis", \
"Subsubsection",
 CellChangeTimes->{{3.9246401586443863`*^9, 
  3.924640174343848*^9}},ExpressionUUID->"f451a238-5711-4c10-9ebe-\
7bd799f8615f"],

Cell["https://arxiv.org/pdf/1712.00233", "Text",
 CellChangeTimes->{
  3.924640163980391*^9},ExpressionUUID->"dced3a35-8245-4b20-94b3-\
8b7f400f134b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["[2015] CLTune: A Generic Auto-Tuner for OpenCL Kernels", "Subsubsection",
 CellChangeTimes->{{3.92464025898532*^9, 
  3.924640264741667*^9}},ExpressionUUID->"ed99350d-d0ac-4eb5-b3e2-\
96902bd6dff3"],

Cell["https://cnugteren.github.io/downloads/Nugteren2015a.pdf", "Text",
 CellChangeTimes->{
  3.9246402682788563`*^9},ExpressionUUID->"246a0d8c-2e83-4e05-b0bc-\
59eb57378cd3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1512, 829},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e375d632-3128-47d3-b189-e9e177ad478b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 3, 67, "Section",ExpressionUUID->"18251fa1-bed5-4193-8125-d4caf7a6e219"],
Cell[758, 27, 194, 5, 35, "Text",ExpressionUUID->"2b510e88-7139-41a3-93bc-84892652cb37"],
Cell[955, 34, 407, 11, 30, "Input",ExpressionUUID->"91760714-4d5a-49b8-bb3d-ba608330be52"],
Cell[CellGroupData[{
Cell[1387, 49, 167, 3, 54, "Subsection",ExpressionUUID->"0a78cf4a-309f-4d9d-b501-2ef77e103252"],
Cell[CellGroupData[{
Cell[1579, 56, 334, 7, 30, "Input",ExpressionUUID->"94eb9230-9d70-4c10-9fba-05b7e64a08e7"],
Cell[1916, 65, 545, 10, 56, "Output",ExpressionUUID->"8e56980b-d80c-4e01-b146-057a37b33aa8"]
}, Open  ]],
Cell[2476, 78, 261, 7, 51, "Text",ExpressionUUID->"181a0071-d81d-4996-8a5b-c9922c262b97"],
Cell[2740, 87, 1893, 41, 281, "Text",ExpressionUUID->"e77e3a9c-8e36-4458-a776-fb217e2bc590"],
Cell[4636, 130, 1252, 27, 304, "Text",ExpressionUUID->"fc15a73a-d8f5-455f-91b0-7e846ed0876e"],
Cell[5891, 159, 873, 23, 167, "Code",ExpressionUUID->"21b8f939-a039-4b35-b186-adf9934d6285"],
Cell[6767, 184, 986, 22, 356, "Program",ExpressionUUID->"1566ded4-5782-4cb7-bb03-07acd04c8b2a"],
Cell[7756, 208, 429, 11, 30, "Input",ExpressionUUID->"c9c6d13e-b0ac-4b60-9586-7c8ac6ffaee9"],
Cell[CellGroupData[{
Cell[8210, 223, 211, 4, 30, "Input",ExpressionUUID->"5a8a78db-da6d-4fe3-bf41-bd2155ba7435"],
Cell[8424, 229, 158, 3, 34, "Output",ExpressionUUID->"27e4793a-a556-43ed-9579-8242830c4c8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8619, 237, 518, 14, 30, "Input",ExpressionUUID->"c23a93dc-0ae3-4f6e-ba9f-c7d803fafec9"],
Cell[9140, 253, 4532, 90, 140, "Output",ExpressionUUID->"6f9cda55-dac8-4b70-aaaa-3c7b109c4743"]
}, Open  ]],
Cell[13687, 346, 519, 12, 30, "Input",ExpressionUUID->"3e610100-bf74-4898-8f49-8f9222e10e1c"],
Cell[CellGroupData[{
Cell[14231, 362, 308, 7, 30, "Input",ExpressionUUID->"47dd8aec-95e6-42ec-8498-84cf5135d033"],
Cell[14542, 371, 63092, 1213, 161, "Output",ExpressionUUID->"f39f7fdf-2c74-4298-962a-1fecc30e33a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77671, 1589, 214, 4, 30, "Input",ExpressionUUID->"a1c9c041-9911-4ce4-997c-0d347006b6ce"],
Cell[77888, 1595, 158, 3, 34, "Output",ExpressionUUID->"ad6459a9-1a51-45c1-8223-0777a26fc60d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78083, 1603, 264, 6, 30, "Input",ExpressionUUID->"7e4a60c4-0d2d-4156-9f63-1a978240a502"],
Cell[78350, 1611, 32010, 590, 201, "Output",ExpressionUUID->"d6ac8895-2040-46dd-a187-4933d336d437"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110397, 2206, 1365, 21, 346, "Input",ExpressionUUID->"d3dbba41-13e1-40c5-b283-6115c16c51e0"],
Cell[111765, 2229, 2573, 59, 161, "Output",ExpressionUUID->"6a0b4de9-ee18-4f17-97cd-48259b37b82e"]
}, Open  ]],
Cell[114353, 2291, 2107, 47, 696, "Program",ExpressionUUID->"90f1837e-5c31-41c4-82fa-913d763c65f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116497, 2343, 158, 3, 54, "Subsection",ExpressionUUID->"b96856b6-47f1-446e-9826-ccc754ed9fea"],
Cell[CellGroupData[{
Cell[116680, 2350, 257, 4, 45, "Subsubsection",ExpressionUUID->"e3c1d534-581d-4283-ae4a-86c3b0129c22"],
Cell[116940, 2356, 225, 6, 35, "Text",ExpressionUUID->"367affcb-9d91-441d-95e4-6d6b542fc157"],
Cell[117168, 2364, 68269, 1125, 309, "Input",ExpressionUUID->"d9af2347-00c6-4b98-ab2f-9181c6a54eca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185474, 3494, 252, 6, 45, "Subsubsection",ExpressionUUID->"9d9b7532-705e-43a3-b8bf-14ace8bf4c87"],
Cell[185729, 3502, 147, 2, 35, "Text",ExpressionUUID->"696ca364-639d-4f34-90bd-3a7c4fcf4ec4"],
Cell[185879, 3506, 155251, 2551, 369, "Input",ExpressionUUID->"d1dfb4f4-58e6-4a80-9ecb-c1edbe7d8d88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341167, 6062, 213, 4, 45, "Subsubsection",ExpressionUUID->"f451a238-5711-4c10-9ebe-7bd799f8615f"],
Cell[341383, 6068, 150, 3, 35, "Text",ExpressionUUID->"dced3a35-8245-4b20-94b3-8b7f400f134b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341570, 6076, 204, 3, 45, "Subsubsection",ExpressionUUID->"ed99350d-d0ac-4eb5-b3e2-96902bd6dff3"],
Cell[341777, 6081, 175, 3, 35, "Text",ExpressionUUID->"246a0d8c-2e83-4e05-b0bc-59eb57378cd3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

